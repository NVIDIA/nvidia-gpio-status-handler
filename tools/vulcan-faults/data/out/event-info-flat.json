[
  {
    "index": 2,
    "SR #": "VR_1",
    "deduced_event_info": {
      "event": "VR Fault",
      "device_type": "GPU[0-7]",
      "event_trigger": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')]",
      "accessor": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')] (could not be deduced from an empty cell; row: 2, col: 'GPUOOB Property/OOB API')",
      "severity": "Critical",
      "resolution": "Power cycle the BaseBoard. If the problem persists, isolate the server for RMA evaluation.",
      "trigger_count": "TODO: Trigger count [type: integer >= 0]",
      "event_counter_reset": {
        "type": "TODO: type [type: string]",
        "metadata": "TODO: metadata [type: string]"
      },
      "redfish": {
        "message_id": "ResourceEvent.1.0.ResourceErrorsDetected",
        "message_args": {
          "patterns": [
            "{GPUId} PowerGood",
            "Abnormal Power Change"
          ],
          "parameters": [
            {
              "type": "DIRECT",
              "field": "CurrentDeviceName"
            }
          ]
        }
      },
      "telemetries": [
        "TODO: '{GPUId} Power Status' [type: object] (row: 2, col: 'AdditionalData')"
      ]
    }
  },
  {
    "index": 3,
    "SR #": "VR_2",
    "deduced_event_info": {
      "event": "Standby power Fault",
      "device_type": "BaseBoard",
      "event_trigger": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')]",
      "accessor": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')] (could not be deduced from an empty cell; row: 3, col: 'GPUOOB Property/OOB API')",
      "severity": "TODO: Severity level [type: string] (could not be deduced from an empty cell; row: 3, col: 'Severity')",
      "resolution": "Check the BaseBoard standby monitor from host BMC. Power cycle the BaseBoard. If the problem persists, isolate the server for RMA evaluation.",
      "trigger_count": "TODO: Trigger count [type: integer >= 0]",
      "event_counter_reset": {
        "type": "TODO: type [type: string]",
        "metadata": "TODO: metadata [type: string]"
      },
      "redfish": {
        "message_id": "TODO: Message Id [type: string] (could not be deduced from an empty cell; row: 3, col: 'MessageId')",
        "message_args": {
          "patterns": "TODO: Message patterns [type: array of strings] (could not be deduced from an empty cell; row: 3, col: 'MessageArgs')",
          "parameters": "TODO: Pattern placeholder values [type: array of objects] (could not be deduced from an empty cell; row: 3, col: 'MessageArgs')"
        }
      },
      "telemetries": []
    }
  },
  {
    "index": 4,
    "SR #": "VR_3",
    "deduced_event_info": {
      "event": "VR fault",
      "device_type": "Retimer[0-7]",
      "event_trigger": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')]",
      "accessor": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')] (could not be deduced from an empty cell; row: 4, col: 'GPUOOB Property/OOB API')",
      "severity": "Critical",
      "resolution": "Power cycle the BaseBoard. If the problem persists, isolate the server for RMA evaluation.",
      "trigger_count": "TODO: Trigger count [type: integer >= 0]",
      "event_counter_reset": {
        "type": "TODO: type [type: string]",
        "metadata": "TODO: metadata [type: string]"
      },
      "redfish": {
        "message_id": "ResourceEvent.1.0.ResourceErrorsDetected",
        "message_args": {
          "patterns": [
            "{RetimerId} PowerGood",
            "Abnormal Power Change"
          ],
          "parameters": [
            {
              "type": "DIRECT",
              "field": "CurrentDeviceName"
            }
          ]
        }
      },
      "telemetries": [
        "TODO: '{RetimerId} 0V9 Abnormal change' [type: object] (row: 4, col: 'AdditionalData')",
        "TODO: '{RetimerId} 1V8 VDD Abnormal change' [type: object] (row: 4, col: 'AdditionalData')",
        "TODO: '{RetimerId} 1V8 LDO Abnormal change' [type: object] (row: 4, col: 'AdditionalData')"
      ]
    }
  },
  {
    "index": 5,
    "SR #": "VR_4",
    "deduced_event_info": {
      "event": "ERoT VR fault",
      "device_type": "GPU[0-7]",
      "event_trigger": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')]",
      "accessor": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')] (could not be deduced from an empty cell; row: 5, col: 'GPUOOB Property/OOB API')",
      "severity": "Critical",
      "resolution": "Power cycle the BaseBoard. If the problem persists, isolate the server for RMA evaluation.",
      "trigger_count": "TODO: Trigger count [type: integer >= 0]",
      "event_counter_reset": {
        "type": "TODO: type [type: string]",
        "metadata": "TODO: metadata [type: string]"
      },
      "redfish": {
        "message_id": "ResourceEvent.1.0.ResourceErrorsDetected",
        "message_args": {
          "patterns": [
            "{ERoT_GPUId} PowerGood",
            "Abnormal Power Change"
          ],
          "parameters": [
            {
              "type": "DIRECT",
              "field": "CurrentDeviceName"
            }
          ]
        }
      },
      "telemetries": []
    }
  },
  {
    "index": 6,
    "SR #": "VR_6",
    "deduced_event_info": {
      "event": "ERoT VR fault",
      "device_type": "NVSwitch[0-3]",
      "event_trigger": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')]",
      "accessor": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')] (could not be deduced from an empty cell; row: 6, col: 'GPUOOB Property/OOB API')",
      "severity": "Critical",
      "resolution": "Power cycle the BaseBoard. If the problem persists, isolate the server for RMA evaluation.",
      "trigger_count": "TODO: Trigger count [type: integer >= 0]",
      "event_counter_reset": {
        "type": "TODO: type [type: string]",
        "metadata": "TODO: metadata [type: string]"
      },
      "redfish": {
        "message_id": "ResourceEvent.1.0.ResourceErrorsDetected",
        "message_args": {
          "patterns": [
            "{ERoT_NVSwitchId} PowerGood",
            "Abnormal Power Change"
          ],
          "parameters": [
            {
              "type": "DIRECT",
              "field": "CurrentDeviceName"
            }
          ]
        }
      },
      "telemetries": []
    }
  },
  {
    "index": 7,
    "SR #": "VR_7",
    "deduced_event_info": {
      "event": "VR fault",
      "device_type": "NVSwitch[0-3]",
      "event_trigger": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')]",
      "accessor": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')] (could not be deduced from an empty cell; row: 7, col: 'GPUOOB Property/OOB API')",
      "severity": "Critical",
      "resolution": "Power cycle the BaseBoard. If the problem persists, isolate the server for RMA evaluation.",
      "trigger_count": "TODO: Trigger count [type: integer >= 0]",
      "event_counter_reset": {
        "type": "TODO: type [type: string]",
        "metadata": "TODO: metadata [type: string]"
      },
      "redfish": {
        "message_id": "ResourceEvent.1.0.ResourceErrorsDetected",
        "message_args": {
          "patterns": [
            "{NVSwitchId} PowerGood",
            "Abnormal Power Change"
          ],
          "parameters": [
            {
              "type": "DIRECT",
              "field": "CurrentDeviceName"
            }
          ]
        }
      },
      "telemetries": [
        "TODO: '{NVSwitchId} VDD Abnormal change' [type: object] (row: 7, col: 'AdditionalData')",
        "TODO: '{NVSwitchId} DVDD Abnormal change' [type: object] (row: 7, col: 'AdditionalData')",
        "TODO: '{NVSwitchId} HVDD Abnormal change' [type: object] (row: 7, col: 'AdditionalData')",
        "TODO: '{NVSwitchId} 1V8 Abnormal change' [type: object] (row: 7, col: 'AdditionalData')",
        "TODO: '{NVSwitchId} 3V3 Abnormal change' [type: object] (row: 7, col: 'AdditionalData')",
        "TODO: '{NVSwitchId} 5V Abnormal change' [type: object] (row: 7, col: 'AdditionalData')",
        "TODO: '{NVSwitchId} IBC Abnormal change' [type: object] (row: 7, col: 'AdditionalData')"
      ]
    }
  },
  {
    "index": 8,
    "SR #": "VR_8",
    "deduced_event_info": {
      "event": "ERoT VR fault",
      "device_type": "PCIe Switch",
      "event_trigger": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')]",
      "accessor": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')] (could not be deduced from an empty cell; row: 8, col: 'GPUOOB Property/OOB API')",
      "severity": "Critical",
      "resolution": "Power cycle the BaseBoard. If the problem persists, isolate the server for RMA evaluation.",
      "trigger_count": "TODO: Trigger count [type: integer >= 0]",
      "event_counter_reset": {
        "type": "TODO: type [type: string]",
        "metadata": "TODO: metadata [type: string]"
      },
      "redfish": {
        "message_id": "ResourceEvent.1.0.ResourceErrorsDetected",
        "message_args": {
          "patterns": [
            "{ERoT_PCIeSwitchId} PowerGood",
            "Abnormal Power Change"
          ],
          "parameters": [
            {
              "type": "DIRECT",
              "field": "CurrentDeviceName"
            }
          ]
        }
      },
      "telemetries": []
    }
  },
  {
    "index": 9,
    "SR #": "VR_9",
    "deduced_event_info": {
      "event": "VR fault",
      "device_type": "PCIe Switch",
      "event_trigger": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')]",
      "accessor": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')] (could not be deduced from an empty cell; row: 9, col: 'GPUOOB Property/OOB API')",
      "severity": "Critical",
      "resolution": "Power cycle the BaseBoard. If the problem persists, isolate the server for RMA evaluation.",
      "trigger_count": "TODO: Trigger count [type: integer >= 0]",
      "event_counter_reset": {
        "type": "TODO: type [type: string]",
        "metadata": "TODO: metadata [type: string]"
      },
      "redfish": {
        "message_id": "ResourceEvent.1.0.ResourceErrorsDetected",
        "message_args": {
          "patterns": [
            "{PCIeSwitchId} PowerGood",
            "Abnormal Power Change"
          ],
          "parameters": [
            {
              "type": "DIRECT",
              "field": "CurrentDeviceName"
            }
          ]
        }
      },
      "telemetries": [
        "TODO: '{PCIeSwitchId} 0V8 Abnormal change' [type: object] (row: 9, col: 'AdditionalData')"
      ]
    }
  },
  {
    "index": 10,
    "SR #": "VR_10",
    "deduced_event_info": {
      "event": "HSC[0-11] fault(Thermtrip and PG)",
      "device_type": "BaseBoard",
      "event_trigger": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')]",
      "accessor": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')] (could not be deduced from an empty cell; row: 10, col: 'GPUOOB Property/OOB API')",
      "severity": "Critical",
      "resolution": "Power cycle the BaseBoard. If the problem persists, isolate the server for RMA evaluation.",
      "trigger_count": "TODO: Trigger count [type: integer >= 0]",
      "event_counter_reset": {
        "type": "TODO: type [type: string]",
        "metadata": "TODO: metadata [type: string]"
      },
      "redfish": {
        "message_id": "ResourceEvent.1.0.ResourceErrorsDetected",
        "message_args": {
          "patterns": [
            "{HSCId} PowerGood",
            "Abnormal Power Change"
          ],
          "parameters": [
            {
              "type": "DIRECT",
              "field": "CurrentDeviceName"
            }
          ]
        }
      },
      "telemetries": [
        "TODO: '{HSCId} detailed alert status' [type: object] (row: 10, col: 'AdditionalData')"
      ]
    }
  },
  {
    "index": 11,
    "SR #": "VR_11",
    "deduced_event_info": {
      "event": "VR fault",
      "device_type": "FPGA",
      "event_trigger": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')]",
      "accessor": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')] (could not be deduced from an empty cell; row: 11, col: 'GPUOOB Property/OOB API')",
      "severity": "Critical",
      "resolution": "Power cycle the BaseBoard. If the problem persists, isolate the server for RMA evaluation.",
      "trigger_count": "TODO: Trigger count [type: integer >= 0]",
      "event_counter_reset": {
        "type": "TODO: type [type: string]",
        "metadata": "TODO: metadata [type: string]"
      },
      "redfish": {
        "message_id": "ResourceEvent.1.0.ResourceErrorsDetected",
        "message_args": {
          "patterns": [
            "{FPGAId} PowerGood",
            "Abnormal Power Change"
          ],
          "parameters": [
            {
              "type": "DIRECT",
              "field": "CurrentDeviceName"
            }
          ]
        }
      },
      "telemetries": []
    }
  },
  {
    "index": 12,
    "SR #": "VR_12",
    "deduced_event_info": {
      "event": "ERoT VR fault",
      "device_type": "FPGA",
      "event_trigger": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')]",
      "accessor": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')] (could not be deduced from an empty cell; row: 12, col: 'GPUOOB Property/OOB API')",
      "severity": "Critical",
      "resolution": "Power cycle the BaseBoard. If the problem persists, isolate the server for RMA evaluation.",
      "trigger_count": "TODO: Trigger count [type: integer >= 0]",
      "event_counter_reset": {
        "type": "TODO: type [type: string]",
        "metadata": "TODO: metadata [type: string]"
      },
      "redfish": {
        "message_id": "ResourceEvent.1.0.ResourceErrorsDetected",
        "message_args": {
          "patterns": [
            "{ERoT_FPGAId} PowerGood",
            "Abnormal Power Change"
          ],
          "parameters": [
            {
              "type": "DIRECT",
              "field": "CurrentDeviceName"
            }
          ]
        }
      },
      "telemetries": []
    }
  },
  {
    "index": 13,
    "SR #": "VR_13",
    "deduced_event_info": {
      "event": "VR fault",
      "device_type": "HMC",
      "event_trigger": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')]",
      "accessor": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')] (could not be deduced from an empty cell; row: 13, col: 'GPUOOB Property/OOB API')",
      "severity": "Critical",
      "resolution": "It can be detected by HMC_PG not asserted (from FPGA).\n\nPower cycle the BaseBoard. If the problem persists, isolate the server for RMA evaluation.",
      "trigger_count": "TODO: Trigger count [type: integer >= 0]",
      "event_counter_reset": {
        "type": "TODO: type [type: string]",
        "metadata": "TODO: metadata [type: string]"
      },
      "redfish": {
        "message_id": "ResourceEvent.1.0.ResourceErrorsDetected",
        "message_args": {
          "patterns": [
            "{HSCId} PowerGood",
            "Abnormal Power Change"
          ],
          "parameters": [
            {
              "type": "DIRECT",
              "field": "CurrentDeviceName"
            }
          ]
        }
      },
      "telemetries": []
    }
  },
  {
    "index": 14,
    "SR #": "VR_14",
    "deduced_event_info": {
      "event": "VR fault",
      "device_type": "System",
      "event_trigger": {
        "type": "DBUS",
        "object": "/xyz/openbmc_project/GpioStatusHandler",
        "interface": "xyz.openbmc_project.GpioStatus",
        "property": "I2C4_ALERT",
        "check": {
          "equal": "false"
        }
      },
      "accessor": {
        "type": "DeviceCoreAPI",
        "property": "sysvr3v3.power.abnormalPowerChange sysvr1v8.power.abnormalPowerChange",
        "check": "TODO: Value checking definition [type: object]"
      },
      "severity": "Critical",
      "resolution": "Power cycle the BaseBoard. If the problem persists, isolate the server for RMA evaluation.",
      "trigger_count": "TODO: Trigger count [type: integer >= 0]",
      "event_counter_reset": {
        "type": "TODO: type [type: string]",
        "metadata": "TODO: metadata [type: string]"
      },
      "redfish": {
        "message_id": "ResourceEvent.1.0.ResourceErrorsDetected",
        "message_args": {
          "patterns": [
            "{SysVRId} PowerGood",
            "Abnormal Power Change"
          ],
          "parameters": [
            {
              "type": "DIRECT",
              "field": "CurrentDeviceName"
            }
          ]
        }
      },
      "telemetries": [
        "TODO: 'SysVR 3V3 Abnormal change' [type: object] (row: 14, col: 'AdditionalData')",
        "TODO: 'SysVR 1V8 Abnormal change' [type: object] (row: 14, col: 'AdditionalData')"
      ]
    }
  },
  {
    "index": 15,
    "SR #": "ERoT_1",
    "deduced_event_info": {
      "event": "Heartbeat failure",
      "device_type": "HMC",
      "event_trigger": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')]",
      "accessor": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')] (could not be deduced from an empty cell; row: 15, col: 'GPUOOB Property/OOB API')",
      "severity": "Critical",
      "resolution": "HostBMC to check HMC EROT for report. HostBMC can also extract EROT log from the SelfTest after HMC recovered and send to NVIDIA.",
      "trigger_count": "TODO: Trigger count [type: integer >= 0]",
      "event_counter_reset": {
        "type": "TODO: type [type: string]",
        "metadata": "TODO: metadata [type: string]"
      },
      "redfish": {
        "message_id": "ResourceEvent.1.0.ResourceErrorsDetected",
        "message_args": {
          "patterns": [
            "{HMCId} Firmware",
            "Heartbeat Failure"
          ],
          "parameters": [
            {
              "type": "DIRECT",
              "field": "CurrentDeviceName"
            }
          ]
        }
      },
      "telemetries": []
    }
  },
  {
    "index": 16,
    "SR #": "ERoT_2",
    "deduced_event_info": {
      "event": "Heartbeat failure",
      "device_type": "FPGA",
      "event_trigger": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')]",
      "accessor": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')] (could not be deduced from an empty cell; row: 16, col: 'GPUOOB Property/OOB API')",
      "severity": "Critical",
      "resolution": "HostBMC to check FPGA EROT for report. HostBMC can also extract EROT log from the SelfTest after FPGA recovered and send to NVIDIA.",
      "trigger_count": "TODO: Trigger count [type: integer >= 0]",
      "event_counter_reset": {
        "type": "TODO: type [type: string]",
        "metadata": "TODO: metadata [type: string]"
      },
      "redfish": {
        "message_id": "ResourceEvent.1.0.ResourceErrorsDetected",
        "message_args": {
          "patterns": [
            "{FPGAId} Firmware",
            "Heartbeat Failure"
          ],
          "parameters": [
            {
              "type": "DIRECT",
              "field": "CurrentDeviceName"
            }
          ]
        }
      },
      "telemetries": []
    }
  },
  {
    "index": 17,
    "SR #": "ERoT_3",
    "deduced_event_info": {
      "event": "Boot completed failure",
      "device_type": "HMC",
      "event_trigger": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')]",
      "accessor": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')] (could not be deduced from an empty cell; row: 17, col: 'GPUOOB Property/OOB API')",
      "severity": "Critical",
      "resolution": "HostBMC to check HMC EROT for report. HostBMC can also extract EROT log from the SelfTest after HMC recovered and send to NVIDIA.",
      "trigger_count": "TODO: Trigger count [type: integer >= 0]",
      "event_counter_reset": {
        "type": "TODO: type [type: string]",
        "metadata": "TODO: metadata [type: string]"
      },
      "redfish": {
        "message_id": "ResourceEvent.1.0.ResourceErrorsDetected",
        "message_args": {
          "patterns": [
            "{HMCId} Firmware",
            "Boot Complete Failure"
          ],
          "parameters": [
            {
              "type": "DIRECT",
              "field": "CurrentDeviceName"
            }
          ]
        }
      },
      "telemetries": []
    }
  },
  {
    "index": 18,
    "SR #": "ERoT_4",
    "deduced_event_info": {
      "event": "Boot completed failure",
      "device_type": "FPGA",
      "event_trigger": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')]",
      "accessor": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')] (could not be deduced from an empty cell; row: 18, col: 'GPUOOB Property/OOB API')",
      "severity": "Critical",
      "resolution": "HostBMC to check FPGA EROT for report. HostBMC can also extract EROT log from the SelfTest after FPGA recovered and send to NVIDIA.",
      "trigger_count": "TODO: Trigger count [type: integer >= 0]",
      "event_counter_reset": {
        "type": "TODO: type [type: string]",
        "metadata": "TODO: metadata [type: string]"
      },
      "redfish": {
        "message_id": "ResourceEvent.1.0.ResourceErrorsDetected",
        "message_args": {
          "patterns": [
            "{FPGAId} Firmware",
            "Boot Complete Failure"
          ],
          "parameters": [
            {
              "type": "DIRECT",
              "field": "CurrentDeviceName"
            }
          ]
        }
      },
      "telemetries": []
    }
  },
  {
    "index": 19,
    "SR #": "ERoT_5",
    "deduced_event_info": {
      "event": "Boot completed failure",
      "device_type": "GPU[0-7]",
      "event_trigger": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')]",
      "accessor": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')] (could not be deduced from an empty cell; row: 19, col: 'GPUOOB Property/OOB API')",
      "severity": "Critical",
      "resolution": "eROT will try to recover AP by a reset/reboot. If there is still a problem, AP FW needs to be re-flashed.",
      "trigger_count": "TODO: Trigger count [type: integer >= 0]",
      "event_counter_reset": {
        "type": "TODO: type [type: string]",
        "metadata": "TODO: metadata [type: string]"
      },
      "redfish": {
        "message_id": "ResourceEvent.1.0.ResourceErrorsDetected",
        "message_args": {
          "patterns": [
            "{GPUId} Firmware",
            "Boot Complete Failure"
          ],
          "parameters": [
            {
              "type": "DIRECT",
              "field": "CurrentDeviceName"
            }
          ]
        }
      },
      "telemetries": [
        "TODO: '{ERoTId} BootStatusCode' [type: object] (row: 19, col: 'AdditionalData')",
        "TODO: '{ERoTId} Log' [type: object] (row: 19, col: 'AdditionalData')"
      ]
    }
  },
  {
    "index": 20,
    "SR #": "ERoT_6",
    "deduced_event_info": {
      "event": "Boot completed failure",
      "device_type": "LS10[0-3]",
      "event_trigger": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')]",
      "accessor": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')] (could not be deduced from an empty cell; row: 20, col: 'GPUOOB Property/OOB API')",
      "severity": "Critical",
      "resolution": "eROT will try to recover AP by a reset/reboot. If there is still a problem, AP FW needs to be re-flashed.",
      "trigger_count": "TODO: Trigger count [type: integer >= 0]",
      "event_counter_reset": {
        "type": "TODO: type [type: string]",
        "metadata": "TODO: metadata [type: string]"
      },
      "redfish": {
        "message_id": "ResourceEvent.1.0.ResourceErrorsDetected",
        "message_args": {
          "patterns": [
            "{NVSwitchId} Firmware",
            "Boot Complete Failure"
          ],
          "parameters": [
            {
              "type": "DIRECT",
              "field": "CurrentDeviceName"
            }
          ]
        }
      },
      "telemetries": [
        "TODO: '{ERoTId} BootStatusCode' [type: object] (row: 20, col: 'AdditionalData')",
        "TODO: '{ERoTId} Log' [type: object] (row: 20, col: 'AdditionalData')"
      ]
    }
  },
  {
    "index": 21,
    "SR #": "ERoT_7",
    "deduced_event_info": {
      "event": "Boot completed failure",
      "device_type": "PCIe Switch",
      "event_trigger": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')]",
      "accessor": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')] (could not be deduced from an empty cell; row: 21, col: 'GPUOOB Property/OOB API')",
      "severity": "Critical",
      "resolution": "eROT will try to recover AP by a reset/reboot. If there is still a problem, AP FW needs to be re-flashed.",
      "trigger_count": "TODO: Trigger count [type: integer >= 0]",
      "event_counter_reset": {
        "type": "TODO: type [type: string]",
        "metadata": "TODO: metadata [type: string]"
      },
      "redfish": {
        "message_id": "ResourceEvent.1.0.ResourceErrorsDetected",
        "message_args": {
          "patterns": [
            "{PCIeSwitchId} Firmware",
            "Boot Complete Failure"
          ],
          "parameters": [
            {
              "type": "DIRECT",
              "field": "CurrentDeviceName"
            }
          ]
        }
      },
      "telemetries": [
        "TODO: '{ERoTId} BootStatusCode' [type: object] (row: 21, col: 'AdditionalData')",
        "TODO: '{ERoTId} Log' [type: object] (row: 21, col: 'AdditionalData')"
      ]
    }
  },
  {
    "index": 22,
    "SR #": "ERoT_8",
    "deduced_event_info": {
      "event": "Secure boot failure",
      "device_type": "HMC",
      "event_trigger": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')]",
      "accessor": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')] (could not be deduced from an empty cell; row: 22, col: 'GPUOOB Property/OOB API')",
      "severity": "Critical",
      "resolution": "HostBMC to check HMC EROT for report. HostBMC can also extract EROT log from the SelfTest after HMC recovered and send to NVIDIA.",
      "trigger_count": "TODO: Trigger count [type: integer >= 0]",
      "event_counter_reset": {
        "type": "TODO: type [type: string]",
        "metadata": "TODO: metadata [type: string]"
      },
      "redfish": {
        "message_id": "ResourceEvent.1.0.ResourceErrorsDetected",
        "message_args": {
          "patterns": [
            "{HMCId} Firmware",
            "Secure Boot Failure"
          ],
          "parameters": [
            {
              "type": "DIRECT",
              "field": "CurrentDeviceName"
            }
          ]
        }
      },
      "telemetries": []
    }
  },
  {
    "index": 23,
    "SR #": "ERoT_9",
    "deduced_event_info": {
      "event": "Secure boot failure",
      "device_type": "FPGA",
      "event_trigger": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')]",
      "accessor": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')] (could not be deduced from an empty cell; row: 23, col: 'GPUOOB Property/OOB API')",
      "severity": "Critical",
      "resolution": "HostBMC to check FPGA EROT for report. HostBMC can also extract EROT log from the SelfTest after FPGA recovered and send to NVIDIA.",
      "trigger_count": "TODO: Trigger count [type: integer >= 0]",
      "event_counter_reset": {
        "type": "TODO: type [type: string]",
        "metadata": "TODO: metadata [type: string]"
      },
      "redfish": {
        "message_id": "ResourceEvent.1.0.ResourceErrorsDetected",
        "message_args": {
          "patterns": [
            "{FPGAId} Firmware",
            "Secure Boot Failure"
          ],
          "parameters": [
            {
              "type": "DIRECT",
              "field": "CurrentDeviceName"
            }
          ]
        }
      },
      "telemetries": []
    }
  },
  {
    "index": 24,
    "SR #": "ERoT_10",
    "deduced_event_info": {
      "event": "Secure boot failure",
      "device_type": "GPU[0-7]",
      "event_trigger": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')]",
      "accessor": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')] (could not be deduced from an empty cell; row: 24, col: 'GPUOOB Property/OOB API')",
      "severity": "Critical",
      "resolution": "eROT will try to recover AP by a reset/reboot. If there is still a problem, AP FW needs to be re-flashed.",
      "trigger_count": "TODO: Trigger count [type: integer >= 0]",
      "event_counter_reset": {
        "type": "TODO: type [type: string]",
        "metadata": "TODO: metadata [type: string]"
      },
      "redfish": {
        "message_id": "ResourceEvent.1.0.ResourceErrorsDetected",
        "message_args": {
          "patterns": [
            "{GPUId} Firmware",
            "Secure Boot Failure"
          ],
          "parameters": [
            {
              "type": "DIRECT",
              "field": "CurrentDeviceName"
            }
          ]
        }
      },
      "telemetries": [
        "TODO: '{ERoTId} BootStatusCode' [type: object] (row: 24, col: 'AdditionalData')",
        "TODO: '{ERoTId} Log' [type: object] (row: 24, col: 'AdditionalData')"
      ]
    }
  },
  {
    "index": 25,
    "SR #": "ERoT_11",
    "deduced_event_info": {
      "event": "Secure boot failure",
      "device_type": "LS10[0-3]",
      "event_trigger": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')]",
      "accessor": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')] (could not be deduced from an empty cell; row: 25, col: 'GPUOOB Property/OOB API')",
      "severity": "Critical",
      "resolution": "eROT will try to recover AP by a reset/reboot. If there is still a problem, AP FW needs to be re-flashed.",
      "trigger_count": "TODO: Trigger count [type: integer >= 0]",
      "event_counter_reset": {
        "type": "TODO: type [type: string]",
        "metadata": "TODO: metadata [type: string]"
      },
      "redfish": {
        "message_id": "ResourceEvent.1.0.ResourceErrorsDetected",
        "message_args": {
          "patterns": [
            "{NVSwitchId} Firmware",
            "Secure Boot Failure"
          ],
          "parameters": [
            {
              "type": "DIRECT",
              "field": "CurrentDeviceName"
            }
          ]
        }
      },
      "telemetries": [
        "TODO: '{ERoTId} BootStatusCode' [type: object] (row: 25, col: 'AdditionalData')",
        "TODO: '{ERoTId} Log' [type: object] (row: 25, col: 'AdditionalData')"
      ]
    }
  },
  {
    "index": 26,
    "SR #": "ERoT_12",
    "deduced_event_info": {
      "event": "Secure boot failure",
      "device_type": "PCIe Switch",
      "event_trigger": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')]",
      "accessor": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')] (could not be deduced from an empty cell; row: 26, col: 'GPUOOB Property/OOB API')",
      "severity": "Critical",
      "resolution": "eROT will try to recover AP by a reset/reboot. If there is still a problem, AP FW needs to be re-flashed.",
      "trigger_count": "TODO: Trigger count [type: integer >= 0]",
      "event_counter_reset": {
        "type": "TODO: type [type: string]",
        "metadata": "TODO: metadata [type: string]"
      },
      "redfish": {
        "message_id": "ResourceEvent.1.0.ResourceErrorsDetected",
        "message_args": {
          "patterns": [
            "{PCIeSwitchId} Firmware",
            "Secure Boot Failure"
          ],
          "parameters": [
            {
              "type": "DIRECT",
              "field": "CurrentDeviceName"
            }
          ]
        }
      },
      "telemetries": [
        "TODO: '{ERoTId} BootStatusCode' [type: object] (row: 26, col: 'AdditionalData')",
        "TODO: '{ERoTId} Log' [type: object] (row: 26, col: 'AdditionalData')"
      ]
    }
  },
  {
    "index": 27,
    "SR #": "ERoT_13",
    "deduced_event_info": {
      "event": "VR fault",
      "device_type": "HMC",
      "event_trigger": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')]",
      "accessor": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')] (could not be deduced from an empty cell; row: 27, col: 'GPUOOB Property/OOB API')",
      "severity": "TODO: Severity level [type: string] (could not be deduced from an empty cell; row: 27, col: 'Severity')",
      "resolution": "Power cycle the BaseBoard. If the problem persists, isolate the server for RMA evaluation.",
      "trigger_count": "TODO: Trigger count [type: integer >= 0]",
      "event_counter_reset": {
        "type": "TODO: type [type: string]",
        "metadata": "TODO: metadata [type: string]"
      },
      "redfish": {
        "message_id": "TODO: Message Id [type: string] (could not be deduced from an empty cell; row: 27, col: 'MessageId')",
        "message_args": {
          "patterns": "TODO: Message patterns [type: array of strings] (could not be deduced from an empty cell; row: 27, col: 'MessageArgs')",
          "parameters": "TODO: Pattern placeholder values [type: array of objects] (could not be deduced from an empty cell; row: 27, col: 'MessageArgs')"
        }
      },
      "telemetries": []
    }
  },
  {
    "index": 28,
    "SR #": "ERoT_14",
    "deduced_event_info": {
      "event": "VR fault",
      "device_type": "FPGA",
      "event_trigger": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')]",
      "accessor": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')] (could not be deduced from an empty cell; row: 28, col: 'GPUOOB Property/OOB API')",
      "severity": "Critical",
      "resolution": "Power cycle the BaseBoard. If the problem persists, isolate the server for RMA evaluation.",
      "trigger_count": "TODO: Trigger count [type: integer >= 0]",
      "event_counter_reset": {
        "type": "TODO: type [type: string]",
        "metadata": "TODO: metadata [type: string]"
      },
      "redfish": {
        "message_id": "ResourceEvent.1.0.ResourceErrorsDetected",
        "message_args": {
          "patterns": "TODO: Message patterns [type: array of strings] (could not be deduced from an empty cell; row: 28, col: 'MessageArgs')",
          "parameters": "TODO: Pattern placeholder values [type: array of objects] (could not be deduced from an empty cell; row: 28, col: 'MessageArgs')"
        }
      },
      "telemetries": []
    }
  },
  {
    "index": 29,
    "SR #": "ERoT_15",
    "deduced_event_info": {
      "event": "VR fault",
      "device_type": "GPU[0-7]",
      "event_trigger": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')]",
      "accessor": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')] (could not be deduced from an empty cell; row: 29, col: 'GPUOOB Property/OOB API')",
      "severity": "Critical",
      "resolution": "Power cycle the BaseBoard. If the problem persists, isolate the server for RMA evaluation.",
      "trigger_count": "TODO: Trigger count [type: integer >= 0]",
      "event_counter_reset": {
        "type": "TODO: type [type: string]",
        "metadata": "TODO: metadata [type: string]"
      },
      "redfish": {
        "message_id": "ResourceEvent.1.0.ResourceErrorsDetected",
        "message_args": {
          "patterns": "TODO: Message patterns [type: array of strings] (could not be deduced from an empty cell; row: 29, col: 'MessageArgs')",
          "parameters": "TODO: Pattern placeholder values [type: array of objects] (could not be deduced from an empty cell; row: 29, col: 'MessageArgs')"
        }
      },
      "telemetries": []
    }
  },
  {
    "index": 30,
    "SR #": "ERoT_16",
    "deduced_event_info": {
      "event": "VR fault",
      "device_type": "LS10[0-3]",
      "event_trigger": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')]",
      "accessor": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')] (could not be deduced from an empty cell; row: 30, col: 'GPUOOB Property/OOB API')",
      "severity": "Critical",
      "resolution": "Power cycle the BaseBoard. If the problem persists, isolate the server for RMA evaluation.",
      "trigger_count": "TODO: Trigger count [type: integer >= 0]",
      "event_counter_reset": {
        "type": "TODO: type [type: string]",
        "metadata": "TODO: metadata [type: string]"
      },
      "redfish": {
        "message_id": "ResourceEvent.1.0.ResourceErrorsDetected",
        "message_args": {
          "patterns": "TODO: Message patterns [type: array of strings] (could not be deduced from an empty cell; row: 30, col: 'MessageArgs')",
          "parameters": "TODO: Pattern placeholder values [type: array of objects] (could not be deduced from an empty cell; row: 30, col: 'MessageArgs')"
        }
      },
      "telemetries": []
    }
  },
  {
    "index": 31,
    "SR #": "ERoT_17",
    "deduced_event_info": {
      "event": "VR fault",
      "device_type": "PCIe Switch",
      "event_trigger": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')]",
      "accessor": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')] (could not be deduced from an empty cell; row: 31, col: 'GPUOOB Property/OOB API')",
      "severity": "Critical",
      "resolution": "Power cycle the BaseBoard. If the problem persists, isolate the server for RMA evaluation.",
      "trigger_count": "TODO: Trigger count [type: integer >= 0]",
      "event_counter_reset": {
        "type": "TODO: type [type: string]",
        "metadata": "TODO: metadata [type: string]"
      },
      "redfish": {
        "message_id": "ResourceEvent.1.0.ResourceErrorsDetected",
        "message_args": {
          "patterns": "TODO: Message patterns [type: array of strings] (could not be deduced from an empty cell; row: 31, col: 'MessageArgs')",
          "parameters": "TODO: Pattern placeholder values [type: array of objects] (could not be deduced from an empty cell; row: 31, col: 'MessageArgs')"
        }
      },
      "telemetries": []
    }
  },
  {
    "index": 32,
    "SR #": "ERoT_18",
    "deduced_event_info": {
      "event": "SPI flash error",
      "device_type": "HMC",
      "event_trigger": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')]",
      "accessor": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')] (could not be deduced from an empty cell; row: 32, col: 'GPUOOB Property/OOB API')",
      "severity": "Critical",
      "resolution": "HostBMC to check HMC_READY and HMC EROT_FATAL signal, query the HMC EROT log for further debugging. Cordon HGX server from the cluster for RMA evaluation.",
      "trigger_count": "TODO: Trigger count [type: integer >= 0]",
      "event_counter_reset": {
        "type": "TODO: type [type: string]",
        "metadata": "TODO: metadata [type: string]"
      },
      "redfish": {
        "message_id": "ResourceEvent.1.0.ResourceErrorsDetected",
        "message_args": {
          "patterns": [
            "{HMCId} Firmware",
            "SPI Flash Error"
          ],
          "parameters": [
            {
              "type": "DIRECT",
              "field": "CurrentDeviceName"
            }
          ]
        }
      },
      "telemetries": []
    }
  },
  {
    "index": 33,
    "SR #": "ERoT_19",
    "deduced_event_info": {
      "event": "SPI flash error",
      "device_type": "FPGA",
      "event_trigger": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')]",
      "accessor": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')] (could not be deduced from an empty cell; row: 33, col: 'GPUOOB Property/OOB API')",
      "severity": "Critical",
      "resolution": "HostBMC to check FPGA_READY and FPGA EROT_FATAL signal, query the FPGA EROT log for further debugging. Cordon HGX server from the cluster for RMA evaluation.",
      "trigger_count": "TODO: Trigger count [type: integer >= 0]",
      "event_counter_reset": {
        "type": "TODO: type [type: string]",
        "metadata": "TODO: metadata [type: string]"
      },
      "redfish": {
        "message_id": "ResourceEvent.1.0.ResourceErrorsDetected",
        "message_args": {
          "patterns": [
            "{FPGAId} Firmware",
            "Communication Failure"
          ],
          "parameters": [
            {
              "type": "DIRECT",
              "field": "CurrentDeviceName"
            }
          ]
        }
      },
      "telemetries": []
    }
  },
  {
    "index": 34,
    "SR #": "ERoT_20",
    "deduced_event_info": {
      "event": "SPI flash error",
      "device_type": "GPU[0-7]",
      "event_trigger": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')]",
      "accessor": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')] (could not be deduced from an empty cell; row: 34, col: 'GPUOOB Property/OOB API')",
      "severity": "Critical",
      "resolution": "Cordon HGX server from the cluster for RMA evaluation.",
      "trigger_count": "TODO: Trigger count [type: integer >= 0]",
      "event_counter_reset": {
        "type": "TODO: type [type: string]",
        "metadata": "TODO: metadata [type: string]"
      },
      "redfish": {
        "message_id": "ResourceEvent.1.0.ResourceErrorsDetected",
        "message_args": {
          "patterns": [
            "{GPUId} Firmware",
            "SPI Flash Error"
          ],
          "parameters": [
            {
              "type": "DIRECT",
              "field": "CurrentDeviceName"
            }
          ]
        }
      },
      "telemetries": [
        "TODO: '{ERoTId} BootStatusCode' [type: object] (row: 34, col: 'AdditionalData')",
        "TODO: '{ERoTId} Log' [type: object] (row: 34, col: 'AdditionalData')"
      ]
    }
  },
  {
    "index": 35,
    "SR #": "ERoT_21",
    "deduced_event_info": {
      "event": "SPI flash error",
      "device_type": "LS10[0-3]",
      "event_trigger": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')]",
      "accessor": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')] (could not be deduced from an empty cell; row: 35, col: 'GPUOOB Property/OOB API')",
      "severity": "Critical",
      "resolution": "Cordon HGX server from the cluster for RMA evaluation.",
      "trigger_count": "TODO: Trigger count [type: integer >= 0]",
      "event_counter_reset": {
        "type": "TODO: type [type: string]",
        "metadata": "TODO: metadata [type: string]"
      },
      "redfish": {
        "message_id": "ResourceEvent.1.0.ResourceErrorsDetected",
        "message_args": {
          "patterns": [
            "{NVSwitchId} Firmware",
            "SPI Flash Error"
          ],
          "parameters": [
            {
              "type": "DIRECT",
              "field": "CurrentDeviceName"
            }
          ]
        }
      },
      "telemetries": [
        "TODO: '{ERoTId} BootStatusCode' [type: object] (row: 35, col: 'AdditionalData')",
        "TODO: '{ERoTId} Log' [type: object] (row: 35, col: 'AdditionalData')"
      ]
    }
  },
  {
    "index": 36,
    "SR #": "ERoT_22",
    "deduced_event_info": {
      "event": "EROT recovery",
      "device_type": "HMC",
      "event_trigger": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')]",
      "accessor": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')] (could not be deduced from an empty cell; row: 36, col: 'GPUOOB Property/OOB API')",
      "severity": "TODO: Severity level [type: string] (could not be deduced from an empty cell; row: 36, col: 'Severity')",
      "resolution": "EROT is in recovery mode, and HostBMC need to deassert EROT_RECOV and reboot the device. If proplem persists, cordon HGX server from the cluster for RMA evaluation.",
      "trigger_count": "TODO: Trigger count [type: integer >= 0]",
      "event_counter_reset": {
        "type": "TODO: type [type: string]",
        "metadata": "TODO: metadata [type: string]"
      },
      "redfish": {
        "message_id": "TODO: Message Id [type: string] (could not be deduced from an empty cell; row: 36, col: 'MessageId')",
        "message_args": {
          "patterns": "TODO: Message patterns [type: array of strings] (could not be deduced from an empty cell; row: 36, col: 'MessageArgs')",
          "parameters": "TODO: Pattern placeholder values [type: array of objects] (could not be deduced from an empty cell; row: 36, col: 'MessageArgs')"
        }
      },
      "telemetries": []
    }
  },
  {
    "index": 37,
    "SR #": "ERoT_23",
    "deduced_event_info": {
      "event": "EROT recovery",
      "device_type": "FPGA",
      "event_trigger": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')]",
      "accessor": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')] (could not be deduced from an empty cell; row: 37, col: 'GPUOOB Property/OOB API')",
      "severity": "Critical",
      "resolution": "EROT is in recovery mode, and HostBMC need to deassert EROT_RECOV and reboot the device. If proplem persists, cordon HGX server from the cluster for RMA evaluation.",
      "trigger_count": "TODO: Trigger count [type: integer >= 0]",
      "event_counter_reset": {
        "type": "TODO: type [type: string]",
        "metadata": "TODO: metadata [type: string]"
      },
      "redfish": {
        "message_id": "ResourceEvent.1.0.ResourceErrorsDetected",
        "message_args": {
          "patterns": [
            "{ERoTId} Firmware",
            "ERoT Recovery"
          ],
          "parameters": [
            {
              "type": "DIRECT",
              "field": "CurrentDeviceName"
            }
          ]
        }
      },
      "telemetries": []
    }
  },
  {
    "index": 38,
    "SR #": "ERoT_24",
    "deduced_event_info": {
      "event": "EROT recovery",
      "device_type": "GPU[0-7]",
      "event_trigger": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')]",
      "accessor": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')] (could not be deduced from an empty cell; row: 38, col: 'GPUOOB Property/OOB API')",
      "severity": "Critical",
      "resolution": "EROT is in recovery mode, and HostBMC need to deassert EROT_RECOV and reboot the device. If proplem persists, cordon HGX server from the cluster for RMA evaluation.",
      "trigger_count": "TODO: Trigger count [type: integer >= 0]",
      "event_counter_reset": {
        "type": "TODO: type [type: string]",
        "metadata": "TODO: metadata [type: string]"
      },
      "redfish": {
        "message_id": "ResourceEvent.1.0.ResourceErrorsDetected",
        "message_args": {
          "patterns": [
            "{ERoTId} Firmware",
            "ERoT Recovery"
          ],
          "parameters": [
            {
              "type": "DIRECT",
              "field": "CurrentDeviceName"
            }
          ]
        }
      },
      "telemetries": [
        "TODO: '{ERoTId} BootStatusCode' [type: object] (row: 38, col: 'AdditionalData')",
        "TODO: '{ERoTId} Log' [type: object] (row: 38, col: 'AdditionalData')"
      ]
    }
  },
  {
    "index": 39,
    "SR #": "ERoT_25",
    "deduced_event_info": {
      "event": "EROT recovery",
      "device_type": "LS10[0-3]",
      "event_trigger": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')]",
      "accessor": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')] (could not be deduced from an empty cell; row: 39, col: 'GPUOOB Property/OOB API')",
      "severity": "Critical",
      "resolution": "EROT is in recovery mode, and HostBMC need to deassert EROT_RECOV and reboot the device. If proplem persists, cordon HGX server from the cluster for RMA evaluation.",
      "trigger_count": "TODO: Trigger count [type: integer >= 0]",
      "event_counter_reset": {
        "type": "TODO: type [type: string]",
        "metadata": "TODO: metadata [type: string]"
      },
      "redfish": {
        "message_id": "ResourceEvent.1.0.ResourceErrorsDetected",
        "message_args": {
          "patterns": [
            "{ERoTId} Firmware",
            "ERoT Recovery"
          ],
          "parameters": [
            {
              "type": "DIRECT",
              "field": "CurrentDeviceName"
            }
          ]
        }
      },
      "telemetries": [
        "TODO: '{ERoTId} BootStatusCode' [type: object] (row: 39, col: 'AdditionalData')",
        "TODO: '{ERoTId} Log' [type: object] (row: 39, col: 'AdditionalData')"
      ]
    }
  },
  {
    "index": 40,
    "SR #": "ERoT_26",
    "deduced_event_info": {
      "event": "EROT recovery",
      "device_type": "PCIe Switch",
      "event_trigger": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')]",
      "accessor": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')] (could not be deduced from an empty cell; row: 40, col: 'GPUOOB Property/OOB API')",
      "severity": "Critical",
      "resolution": "EROT is in recovery mode, and HostBMC need to deassert EROT_RECOV and reboot the device. If proplem persists, cordon HGX server from the cluster for RMA evaluation.",
      "trigger_count": "TODO: Trigger count [type: integer >= 0]",
      "event_counter_reset": {
        "type": "TODO: type [type: string]",
        "metadata": "TODO: metadata [type: string]"
      },
      "redfish": {
        "message_id": "ResourceEvent.1.0.ResourceErrorsDetected",
        "message_args": {
          "patterns": [
            "{ERoTId} Firmware",
            "ERoT Recovery"
          ],
          "parameters": [
            {
              "type": "DIRECT",
              "field": "CurrentDeviceName"
            }
          ]
        }
      },
      "telemetries": [
        "TODO: '{ERoTId} BootStatusCode' [type: object] (row: 40, col: 'AdditionalData')",
        "TODO: '{ERoTId} Log' [type: object] (row: 40, col: 'AdditionalData')"
      ]
    }
  },
  {
    "index": 41,
    "SR #": "ERoT_27",
    "deduced_event_info": {
      "event": "MCTP runtime failures",
      "device_type": "HMC",
      "event_trigger": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')]",
      "accessor": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')] (could not be deduced from an empty cell; row: 41, col: 'GPUOOB Property/OOB API')",
      "severity": "Critical",
      "resolution": "BaseBoard components will retry if encounters errors. If problem persists, analyze FPGA log or ERoT log.",
      "trigger_count": "TODO: Trigger count [type: integer >= 0]",
      "event_counter_reset": {
        "type": "TODO: type [type: string]",
        "metadata": "TODO: metadata [type: string]"
      },
      "redfish": {
        "message_id": "ResourceEvent.1.0.ResourceErrorsDetected",
        "message_args": {
          "patterns": [
            "{ERoT_HMCId} Firmware",
            "MCTP Runtime Failure"
          ],
          "parameters": [
            {
              "type": "DIRECT",
              "field": "CurrentDeviceName"
            }
          ]
        }
      },
      "telemetries": []
    }
  },
  {
    "index": 42,
    "SR #": "ERoT_28",
    "deduced_event_info": {
      "event": "MCTP runtime failures",
      "device_type": "FPGA",
      "event_trigger": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')]",
      "accessor": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')] (could not be deduced from an empty cell; row: 42, col: 'GPUOOB Property/OOB API')",
      "severity": "Critical",
      "resolution": "BaseBoard components will retry if encounters errors. If problem persists, analyze FPGA log or ERoT log.",
      "trigger_count": "TODO: Trigger count [type: integer >= 0]",
      "event_counter_reset": {
        "type": "TODO: type [type: string]",
        "metadata": "TODO: metadata [type: string]"
      },
      "redfish": {
        "message_id": "ResourceEvent.1.0.ResourceErrorsDetected",
        "message_args": {
          "patterns": [
            "{ERoT_FPGAId} Firmware",
            "MCTP Runtime Failure"
          ],
          "parameters": [
            {
              "type": "DIRECT",
              "field": "CurrentDeviceName"
            }
          ]
        }
      },
      "telemetries": []
    }
  },
  {
    "index": 43,
    "SR #": "ERoT_29",
    "deduced_event_info": {
      "event": "MCTP runtime failures",
      "device_type": "GPU[0-7]",
      "event_trigger": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')]",
      "accessor": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')] (could not be deduced from an empty cell; row: 43, col: 'GPUOOB Property/OOB API')",
      "severity": "Critical",
      "resolution": "BaseBoard components will retry if encounters errors. If problem persists, analyze FPGA log or ERoT log.",
      "trigger_count": "TODO: Trigger count [type: integer >= 0]",
      "event_counter_reset": {
        "type": "TODO: type [type: string]",
        "metadata": "TODO: metadata [type: string]"
      },
      "redfish": {
        "message_id": "ResourceEvent.1.0.ResourceErrorsDetected",
        "message_args": {
          "patterns": [
            "{ERoT_GPUId} Firmware",
            "MCTP Runtime Failure"
          ],
          "parameters": [
            {
              "type": "DIRECT",
              "field": "CurrentDeviceName"
            }
          ]
        }
      },
      "telemetries": []
    }
  },
  {
    "index": 44,
    "SR #": "ERoT_30",
    "deduced_event_info": {
      "event": "MCTP runtime failures",
      "device_type": "LS10[0-3]",
      "event_trigger": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')]",
      "accessor": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')] (could not be deduced from an empty cell; row: 44, col: 'GPUOOB Property/OOB API')",
      "severity": "Critical",
      "resolution": "BaseBoard components will retry if encounters errors. If problem persists, analyze FPGA log or ERoT log.",
      "trigger_count": "TODO: Trigger count [type: integer >= 0]",
      "event_counter_reset": {
        "type": "TODO: type [type: string]",
        "metadata": "TODO: metadata [type: string]"
      },
      "redfish": {
        "message_id": "ResourceEvent.1.0.ResourceErrorsDetected",
        "message_args": {
          "patterns": [
            "{ERoT_NVSwitchId} Firmware",
            "MCTP Runtime Failure"
          ],
          "parameters": [
            {
              "type": "DIRECT",
              "field": "CurrentDeviceName"
            }
          ]
        }
      },
      "telemetries": []
    }
  },
  {
    "index": 45,
    "SR #": "ERoT_31",
    "deduced_event_info": {
      "event": "MCTP runtime failures",
      "device_type": "PCIe Switch",
      "event_trigger": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')]",
      "accessor": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')] (could not be deduced from an empty cell; row: 45, col: 'GPUOOB Property/OOB API')",
      "severity": "Critical",
      "resolution": "BaseBoard components will retry if encounters errors. If problem persists, analyze FPGA log or ERoT log.",
      "trigger_count": "TODO: Trigger count [type: integer >= 0]",
      "event_counter_reset": {
        "type": "TODO: type [type: string]",
        "metadata": "TODO: metadata [type: string]"
      },
      "redfish": {
        "message_id": "ResourceEvent.1.0.ResourceErrorsDetected",
        "message_args": {
          "patterns": [
            "{ERoT_PCIeSwitchId} Firmware",
            "MCTP Runtime Failure"
          ],
          "parameters": [
            {
              "type": "DIRECT",
              "field": "CurrentDeviceName"
            }
          ]
        }
      },
      "telemetries": []
    }
  },
  {
    "index": 46,
    "SR #": "ERoT_32",
    "deduced_event_info": {
      "event": "PLDM runtime failures",
      "device_type": "HMC",
      "event_trigger": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')]",
      "accessor": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')] (could not be deduced from an empty cell; row: 46, col: 'GPUOOB Property/OOB API')",
      "severity": "Critical",
      "resolution": "BaseBoard components will retry if encounters errors. If problem persists, analyze FPGA log or ERoT log.",
      "trigger_count": "TODO: Trigger count [type: integer >= 0]",
      "event_counter_reset": {
        "type": "TODO: type [type: string]",
        "metadata": "TODO: metadata [type: string]"
      },
      "redfish": {
        "message_id": "ResourceEvent.1.0.ResourceErrorsDetected",
        "message_args": {
          "patterns": [
            "{ERoT_HMCId} Firmware",
            "MCTP Runtime Failure"
          ],
          "parameters": [
            {
              "type": "DIRECT",
              "field": "CurrentDeviceName"
            }
          ]
        }
      },
      "telemetries": []
    }
  },
  {
    "index": 47,
    "SR #": "ERoT_33",
    "deduced_event_info": {
      "event": "PLDM runtime failures",
      "device_type": "FPGA",
      "event_trigger": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')]",
      "accessor": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')] (could not be deduced from an empty cell; row: 47, col: 'GPUOOB Property/OOB API')",
      "severity": "Critical",
      "resolution": "BaseBoard components will retry if encounters errors. If problem persists, analyze FPGA log or ERoT log.",
      "trigger_count": "TODO: Trigger count [type: integer >= 0]",
      "event_counter_reset": {
        "type": "TODO: type [type: string]",
        "metadata": "TODO: metadata [type: string]"
      },
      "redfish": {
        "message_id": "ResourceEvent.1.0.ResourceErrorsDetected",
        "message_args": {
          "patterns": [
            "{ERoT_FPGAId} Firmware",
            "PLDM Runtime Failure"
          ],
          "parameters": [
            {
              "type": "DIRECT",
              "field": "CurrentDeviceName"
            }
          ]
        }
      },
      "telemetries": []
    }
  },
  {
    "index": 48,
    "SR #": "ERoT_34",
    "deduced_event_info": {
      "event": "PLDM runtime failures",
      "device_type": "GPU[0-7]",
      "event_trigger": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')]",
      "accessor": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')] (could not be deduced from an empty cell; row: 48, col: 'GPUOOB Property/OOB API')",
      "severity": "Critical",
      "resolution": "BaseBoard components will retry if encounters errors. If problem persists, analyze FPGA log or ERoT log.",
      "trigger_count": "TODO: Trigger count [type: integer >= 0]",
      "event_counter_reset": {
        "type": "TODO: type [type: string]",
        "metadata": "TODO: metadata [type: string]"
      },
      "redfish": {
        "message_id": "ResourceEvent.1.0.ResourceErrorsDetected",
        "message_args": {
          "patterns": [
            "{ERoT_GPUId} Firmware",
            "PLDM Runtime Failure"
          ],
          "parameters": [
            {
              "type": "DIRECT",
              "field": "CurrentDeviceName"
            }
          ]
        }
      },
      "telemetries": []
    }
  },
  {
    "index": 49,
    "SR #": "ERoT_35",
    "deduced_event_info": {
      "event": "PLDM runtime failures",
      "device_type": "LS10[0-3]",
      "event_trigger": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')]",
      "accessor": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')] (could not be deduced from an empty cell; row: 49, col: 'GPUOOB Property/OOB API')",
      "severity": "Critical",
      "resolution": "BaseBoard components will retry if encounters errors. If problem persists, analyze FPGA log or ERoT log.",
      "trigger_count": "TODO: Trigger count [type: integer >= 0]",
      "event_counter_reset": {
        "type": "TODO: type [type: string]",
        "metadata": "TODO: metadata [type: string]"
      },
      "redfish": {
        "message_id": "ResourceEvent.1.0.ResourceErrorsDetected",
        "message_args": {
          "patterns": [
            "{ERoT_NVSwitchId} Firmware",
            "PLDM Runtime Failure"
          ],
          "parameters": [
            {
              "type": "DIRECT",
              "field": "CurrentDeviceName"
            }
          ]
        }
      },
      "telemetries": []
    }
  },
  {
    "index": 50,
    "SR #": "ERoT_36",
    "deduced_event_info": {
      "event": "PLDM runtime failures",
      "device_type": "PCIe Switch",
      "event_trigger": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')]",
      "accessor": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')] (could not be deduced from an empty cell; row: 50, col: 'GPUOOB Property/OOB API')",
      "severity": "Critical",
      "resolution": "BaseBoard components will retry if encounters errors. If problem persists, analyze FPGA log or ERoT log.",
      "trigger_count": "TODO: Trigger count [type: integer >= 0]",
      "event_counter_reset": {
        "type": "TODO: type [type: string]",
        "metadata": "TODO: metadata [type: string]"
      },
      "redfish": {
        "message_id": "ResourceEvent.1.0.ResourceErrorsDetected",
        "message_args": {
          "patterns": [
            "{ERoT_PCIeSwitchId} Firmware",
            "PLDM Runtime Failure"
          ],
          "parameters": [
            {
              "type": "DIRECT",
              "field": "CurrentDeviceName"
            }
          ]
        }
      },
      "telemetries": []
    }
  },
  {
    "index": 51,
    "SR #": "ERoT_37",
    "deduced_event_info": {
      "event": "FW Update with WP engaged",
      "device_type": "HMC",
      "event_trigger": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')]",
      "accessor": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')] (could not be deduced from an empty cell; row: 51, col: 'GPUOOB Property/OOB API')",
      "severity": "Critical",
      "resolution": "If WP enabled, Glacier/AP shall not be able to update SPI. This is a HW protection.",
      "trigger_count": "TODO: Trigger count [type: integer >= 0]",
      "event_counter_reset": {
        "type": "TODO: type [type: string]",
        "metadata": "TODO: metadata [type: string]"
      },
      "redfish": {
        "message_id": "ResourceEvent.1.0.ResourceErrorsDetected",
        "message_args": {
          "patterns": [
            "{HMCId} Firmware",
            "WriteProtected"
          ],
          "parameters": [
            {
              "type": "DIRECT",
              "field": "CurrentDeviceName"
            }
          ]
        }
      },
      "telemetries": []
    }
  },
  {
    "index": 52,
    "SR #": "ERoT_38",
    "deduced_event_info": {
      "event": "FW Update with WP engaged - LS10[0-3]",
      "device_type": "GPU[0-7]",
      "event_trigger": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')]",
      "accessor": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')] (could not be deduced from an empty cell; row: 52, col: 'GPUOOB Property/OOB API')",
      "severity": "Critical",
      "resolution": "If WP enabled, Glacier/AP shall not beable to update SPI. This is a HW protection.",
      "trigger_count": "TODO: Trigger count [type: integer >= 0]",
      "event_counter_reset": {
        "type": "TODO: type [type: string]",
        "metadata": "TODO: metadata [type: string]"
      },
      "redfish": {
        "message_id": "ResourceEvent.1.0.ResourceErrorsDetected",
        "message_args": {
          "patterns": [
            "{APId} Firmware",
            "WriteProtected"
          ],
          "parameters": [
            {
              "type": "DIRECT",
              "field": "CurrentDeviceName"
            }
          ]
        }
      },
      "telemetries": []
    }
  },
  {
    "index": 53,
    "SR #": "ERoT_39",
    "deduced_event_info": {
      "event": "TODO: Event name [type: string] (could not be deduced from the cell; cell value: 'any other WP?'; row: 53, col: 'Fault Scenario')",
      "device_type": "TODO: Device specification [type: string] (could not be deduced from the cell; cell value: 'any other WP?'; row: 53, col: 'Fault Scenario')",
      "event_trigger": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')]",
      "accessor": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')] (could not be deduced from an empty cell; row: 53, col: 'GPUOOB Property/OOB API')",
      "severity": "TODO: Severity level [type: string] (could not be deduced from an empty cell; row: 53, col: 'Severity')",
      "resolution": "TODO: Resolution description [type: string] (could not be deduced from an empty cell; row: 53, col: 'Recovery')",
      "trigger_count": "TODO: Trigger count [type: integer >= 0]",
      "event_counter_reset": {
        "type": "TODO: type [type: string]",
        "metadata": "TODO: metadata [type: string]"
      },
      "redfish": {
        "message_id": "TODO: Message Id [type: string] (could not be deduced from an empty cell; row: 53, col: 'MessageId')",
        "message_args": {
          "patterns": "TODO: Message patterns [type: array of strings] (could not be deduced from an empty cell; row: 53, col: 'MessageArgs')",
          "parameters": "TODO: Pattern placeholder values [type: array of objects] (could not be deduced from an empty cell; row: 53, col: 'MessageArgs')"
        }
      },
      "telemetries": []
    }
  },
  {
    "index": 54,
    "SR #": "ERoT_40",
    "deduced_event_info": {
      "event": "TODO: Event name [type: string] (could not be deduced from the cell; cell value: 'Switch EEPROM Error'; row: 54, col: 'Fault Scenario')",
      "device_type": "TODO: Device specification [type: string] (could not be deduced from the cell; cell value: 'Switch EEPROM Error'; row: 54, col: 'Fault Scenario')",
      "event_trigger": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')]",
      "accessor": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')] (could not be deduced from an empty cell; row: 54, col: 'GPUOOB Property/OOB API')",
      "severity": "Critical",
      "resolution": "Cordon HGX server from the cluster for RMA evaluation.",
      "trigger_count": "TODO: Trigger count [type: integer >= 0]",
      "event_counter_reset": {
        "type": "TODO: type [type: string]",
        "metadata": "TODO: metadata [type: string]"
      },
      "redfish": {
        "message_id": "ResourceEvent.1.0.ResourceErrorsDetected",
        "message_args": {
          "patterns": [
            "{PCIeSwitchId} Firmware",
            "SPI Flash Error"
          ],
          "parameters": [
            {
              "type": "DIRECT",
              "field": "CurrentDeviceName"
            }
          ]
        }
      },
      "telemetries": [
        "TODO: '{ERoTId} BootStatusCode' [type: object] (row: 54, col: 'AdditionalData')",
        "TODO: '{ERoTId} Log' [type: object] (row: 54, col: 'AdditionalData')"
      ]
    }
  },
  {
    "index": 55,
    "SR #": "ERoT_41",
    "deduced_event_info": {
      "event": "ERoT in Recovery Mode",
      "device_type": "GPU[0-7]",
      "event_trigger": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')]",
      "accessor": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')] (could not be deduced from an empty cell; row: 55, col: 'GPUOOB Property/OOB API')",
      "severity": "TODO: Severity level [type: string] (could not be deduced from an empty cell; row: 55, col: 'Severity')",
      "resolution": "Same as ERoT_24",
      "trigger_count": "TODO: Trigger count [type: integer >= 0]",
      "event_counter_reset": {
        "type": "TODO: type [type: string]",
        "metadata": "TODO: metadata [type: string]"
      },
      "redfish": {
        "message_id": "TODO: Message Id [type: string] (could not be deduced from an empty cell; row: 55, col: 'MessageId')",
        "message_args": {
          "patterns": "TODO: Message patterns [type: array of strings] (could not be deduced from an empty cell; row: 55, col: 'MessageArgs')",
          "parameters": "TODO: Pattern placeholder values [type: array of objects] (could not be deduced from an empty cell; row: 55, col: 'MessageArgs')"
        }
      },
      "telemetries": []
    }
  },
  {
    "index": 56,
    "SR #": "ERoT_42",
    "deduced_event_info": {
      "event": "ERoT restart notify failure",
      "device_type": "HMC",
      "event_trigger": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')]",
      "accessor": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')] (could not be deduced from an empty cell; row: 56, col: 'GPUOOB Property/OOB API')",
      "severity": "TODO: Severity level [type: string] (could not be deduced from an empty cell; row: 56, col: 'Severity')",
      "resolution": "TODO: Resolution description [type: string] (could not be deduced from an empty cell; row: 56, col: 'Recovery')",
      "trigger_count": "TODO: Trigger count [type: integer >= 0]",
      "event_counter_reset": {
        "type": "TODO: type [type: string]",
        "metadata": "TODO: metadata [type: string]"
      },
      "redfish": {
        "message_id": "TODO: Message Id [type: string] (could not be deduced from an empty cell; row: 56, col: 'MessageId')",
        "message_args": {
          "patterns": "TODO: Message patterns [type: array of strings] (could not be deduced from an empty cell; row: 56, col: 'MessageArgs')",
          "parameters": "TODO: Pattern placeholder values [type: array of objects] (could not be deduced from an empty cell; row: 56, col: 'MessageArgs')"
        }
      },
      "telemetries": []
    }
  },
  {
    "index": 57,
    "SR #": "ERoT_43",
    "deduced_event_info": {
      "event": "FPGA ready/not ready",
      "device_type": "HMC",
      "event_trigger": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')]",
      "accessor": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')] (could not be deduced from an empty cell; row: 57, col: 'GPUOOB Property/OOB API')",
      "severity": "TODO: Severity level [type: string] (could not be deduced from an empty cell; row: 57, col: 'Severity')",
      "resolution": "TODO: Resolution description [type: string] (could not be deduced from an empty cell; row: 57, col: 'Recovery')",
      "trigger_count": "TODO: Trigger count [type: integer >= 0]",
      "event_counter_reset": {
        "type": "TODO: type [type: string]",
        "metadata": "TODO: metadata [type: string]"
      },
      "redfish": {
        "message_id": "TODO: Message Id [type: string] (could not be deduced from an empty cell; row: 57, col: 'MessageId')",
        "message_args": {
          "patterns": "TODO: Message patterns [type: array of strings] (could not be deduced from an empty cell; row: 57, col: 'MessageArgs')",
          "parameters": "TODO: Pattern placeholder values [type: array of objects] (could not be deduced from an empty cell; row: 57, col: 'MessageArgs')"
        }
      },
      "telemetries": []
    }
  },
  {
    "index": 58,
    "SR #": "ERoT_44",
    "deduced_event_info": {
      "event": "Reboot in the middle of Vulcan FW update",
      "device_type": "HMC",
      "event_trigger": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')]",
      "accessor": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')] (could not be deduced from an empty cell; row: 58, col: 'GPUOOB Property/OOB API')",
      "severity": "TODO: Severity level [type: string] (could not be deduced from an empty cell; row: 58, col: 'Severity')",
      "resolution": "TODO: Resolution description [type: string] (could not be deduced from an empty cell; row: 58, col: 'Recovery')",
      "trigger_count": "TODO: Trigger count [type: integer >= 0]",
      "event_counter_reset": {
        "type": "TODO: type [type: string]",
        "metadata": "TODO: metadata [type: string]"
      },
      "redfish": {
        "message_id": "TODO: Message Id [type: string] (could not be deduced from an empty cell; row: 58, col: 'MessageId')",
        "message_args": {
          "patterns": "TODO: Message patterns [type: array of strings] (could not be deduced from an empty cell; row: 58, col: 'MessageArgs')",
          "parameters": "TODO: Pattern placeholder values [type: array of objects] (could not be deduced from an empty cell; row: 58, col: 'MessageArgs')"
        }
      },
      "telemetries": []
    }
  },
  {
    "index": 59,
    "SR #": "ERoT_45",
    "deduced_event_info": {
      "event": "TODO: Event name [type: string] (could not be deduced from the cell; cell value: 'Impact specific ERoT in the middle of FW update'; row: 59, col: 'Fault Scenario')",
      "device_type": "TODO: Device specification [type: string] (could not be deduced from the cell; cell value: 'Impact specific ERoT in the middle of FW update'; row: 59, col: 'Fault Scenario')",
      "event_trigger": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')]",
      "accessor": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')] (could not be deduced from an empty cell; row: 59, col: 'GPUOOB Property/OOB API')",
      "severity": "TODO: Severity level [type: string] (could not be deduced from an empty cell; row: 59, col: 'Severity')",
      "resolution": "TODO: Resolution description [type: string] (could not be deduced from an empty cell; row: 59, col: 'Recovery')",
      "trigger_count": "TODO: Trigger count [type: integer >= 0]",
      "event_counter_reset": {
        "type": "TODO: type [type: string]",
        "metadata": "TODO: metadata [type: string]"
      },
      "redfish": {
        "message_id": "TODO: Message Id [type: string] (could not be deduced from an empty cell; row: 59, col: 'MessageId')",
        "message_args": {
          "patterns": "TODO: Message patterns [type: array of strings] (could not be deduced from an empty cell; row: 59, col: 'MessageArgs')",
          "parameters": "TODO: Pattern placeholder values [type: array of objects] (could not be deduced from an empty cell; row: 59, col: 'MessageArgs')"
        }
      },
      "telemetries": []
    }
  },
  {
    "index": 60,
    "SR #": "ERoT_46",
    "deduced_event_info": {
      "event": "EROT internal flash error - all APs (exclude",
      "device_type": "HMC",
      "event_trigger": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')]",
      "accessor": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')] (could not be deduced from an empty cell; row: 60, col: 'GPUOOB Property/OOB API')",
      "severity": "Critical",
      "resolution": "HostBMC to recovery the EROT. If proplem persists, cordon HGX server from the cluster for RMA evaluation.",
      "trigger_count": "TODO: Trigger count [type: integer >= 0]",
      "event_counter_reset": {
        "type": "TODO: type [type: string]",
        "metadata": "TODO: metadata [type: string]"
      },
      "redfish": {
        "message_id": "ResourceEvent.1.0.ResourceErrorsDetected",
        "message_args": {
          "patterns": [
            "{ERoT_APId} ERoT_Fatal",
            "Abnormal State Change"
          ],
          "parameters": [
            {
              "type": "DIRECT",
              "field": "CurrentDeviceName"
            }
          ]
        }
      },
      "telemetries": []
    }
  },
  {
    "index": 61,
    "SR #": "GPU_1",
    "deduced_event_info": {
      "event": "Over Temp",
      "device_type": "GPU[0-7]",
      "event_trigger": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')]",
      "accessor": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')] (could not be deduced from an empty cell; row: 61, col: 'GPUOOB Property/OOB API')",
      "severity": "Critical",
      "resolution": "Power off the BaseBoard within 1 second, and GPU will shutdown autonomously. Check thermal environmental to ensure the GPU operates under UpperFatal threshold and power cycle the Baseboard to recover.",
      "trigger_count": "TODO: Trigger count [type: integer >= 0]",
      "event_counter_reset": {
        "type": "TODO: type [type: string]",
        "metadata": "TODO: metadata [type: string]"
      },
      "redfish": {
        "message_id": "ResourceEvent.1.0.ResourceErrorThresholdExceeded",
        "message_args": {
          "patterns": [
            "{GPUId} Temperature",
            "{UpperFatal Threshold}"
          ],
          "parameters": [
            {
              "type": "DIRECT",
              "field": "CurrentDeviceName"
            },
            "TODO: Value accessor [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')] (could not be deduced from the cell; cell value: '[\"{GPUId} Temperature\", \"{UpperFatal Threshold}\"]'; row: 61, col: 'MessageArgs')"
          ]
        }
      },
      "telemetries": [
        "TODO: '{GPUId} Temperature' [type: object] (row: 61, col: 'AdditionalData')",
        "TODO: '{GPUId} Thermal Parameters' [type: object] (row: 61, col: 'AdditionalData')"
      ]
    }
  },
  {
    "index": 62,
    "SR #": "GPU_2",
    "deduced_event_info": {
      "event": "PWR BRAKE Asserted",
      "device_type": "GPU",
      "event_trigger": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')]",
      "accessor": {
        "type": "DeviceCoreAPI",
        "property": "gpu.clock.throttleReason/GPUGetThrottleReason",
        "check": "TODO: Value checking definition [type: object]"
      },
      "severity": "Warning",
      "resolution": "De-assert the power brake on the host BMC.",
      "trigger_count": "TODO: Trigger count [type: integer >= 0]",
      "event_counter_reset": {
        "type": "TODO: type [type: string]",
        "metadata": "TODO: metadata [type: string]"
      },
      "redfish": {
        "message_id": "ResourceEvent.1.0.ResourceErrorsDetected",
        "message_args": {
          "patterns": [
            "{GPUId} ThrottleReason",
            "HW Power Brake Slowdown"
          ],
          "parameters": [
            {
              "type": "DIRECT",
              "field": "CurrentDeviceName"
            }
          ]
        }
      },
      "telemetries": []
    }
  },
  {
    "index": 63,
    "SR #": "GPU_3",
    "deduced_event_info": {
      "event": "VR Failure",
      "device_type": "GPU[0-7]",
      "event_trigger": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')]",
      "accessor": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')] (could not be deduced from an empty cell; row: 63, col: 'GPUOOB Property/OOB API')",
      "severity": "Critical",
      "resolution": "Power cycle the BaseBoard. If the problem persists, isolate the server for RMA evaluation.",
      "trigger_count": "TODO: Trigger count [type: integer >= 0]",
      "event_counter_reset": {
        "type": "TODO: type [type: string]",
        "metadata": "TODO: metadata [type: string]"
      },
      "redfish": {
        "message_id": "ResourceEvent.1.0.ResourceErrorsDetected",
        "message_args": {
          "patterns": [
            "{GPUId} PowerGood",
            "Abnormal Power Change"
          ],
          "parameters": [
            {
              "type": "DIRECT",
              "field": "CurrentDeviceName"
            }
          ]
        }
      },
      "telemetries": [
        "TODO: '{GPUId} Power Status' [type: object] (row: 63, col: 'AdditionalData')"
      ]
    }
  },
  {
    "index": 64,
    "SR #": "GPU_4",
    "deduced_event_info": {
      "event": "Row remapping failure",
      "device_type": "GPU[0-7]",
      "event_trigger": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')]",
      "accessor": {
        "type": "DeviceCoreAPI",
        "property": "gpu.device.RowRemappingStats.stateFlagPage0/GPUGetRowRemappingFailureState",
        "check": "TODO: Value checking definition [type: object]"
      },
      "severity": "Critical",
      "resolution": "Cordon the HGX server node from the cluster for RMA evaluation.",
      "trigger_count": "TODO: Trigger count [type: integer >= 0]",
      "event_counter_reset": {
        "type": "TODO: type [type: string]",
        "metadata": "TODO: metadata [type: string]"
      },
      "redfish": {
        "message_id": "ResourceEvent.1.0.ResourceErrorsDetected",
        "message_args": {
          "patterns": [
            "{GPUId} Memory",
            "Row-Remapping Failure"
          ],
          "parameters": [
            {
              "type": "DIRECT",
              "field": "CurrentDeviceName"
            }
          ]
        }
      },
      "telemetries": [
        "TODO: '{GPUId} Row remapping statistics' [type: object] (row: 64, col: 'AdditionalData')"
      ]
    }
  },
  {
    "index": 65,
    "SR #": "GPU_5",
    "deduced_event_info": {
      "event": "Row remapping pending",
      "device_type": "GPU[0-7]",
      "event_trigger": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')]",
      "accessor": {
        "type": "DeviceCoreAPI",
        "property": "gpu.device.RowRemappingStats.stateFlagPage0/GPUGetRowRemappingPendingState",
        "check": "TODO: Value checking definition [type: object]"
      },
      "severity": "Warning",
      "resolution": "No immediate recovery required. Reset the GPU at next service window.",
      "trigger_count": "TODO: Trigger count [type: integer >= 0]",
      "event_counter_reset": {
        "type": "TODO: type [type: string]",
        "metadata": "TODO: metadata [type: string]"
      },
      "redfish": {
        "message_id": "ResourceEvent.1.0.ResourceErrorsDetected",
        "message_args": {
          "patterns": [
            "{GPUId} Memory",
            "Row-Remapping Pending"
          ],
          "parameters": [
            {
              "type": "DIRECT",
              "field": "CurrentDeviceName"
            }
          ]
        }
      },
      "telemetries": [
        "TODO: '{GPUId} Row remapping statistics' [type: object] (row: 65, col: 'AdditionalData')"
      ]
    }
  },
  {
    "index": 66,
    "SR #": "GPU_6",
    "deduced_event_info": {
      "event": "SRAM Uncorrectable error",
      "device_type": "GPU[0-7]",
      "event_trigger": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')]",
      "accessor": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')] (could not be deduced from an empty cell; row: 66, col: 'GPUOOB Property/OOB API')",
      "severity": "Critical",
      "resolution": "Reset the GPU. If the GPU continues to exhibit the problem, isolate the server for RMA evaluation.",
      "trigger_count": "TODO: Trigger count [type: integer >= 0]",
      "event_counter_reset": {
        "type": "TODO: type [type: string]",
        "metadata": "TODO: metadata [type: string]"
      },
      "redfish": {
        "message_id": "ResourceEvent.1.0.ResourceErrorsDetected",
        "message_args": {
          "patterns": [
            "{GPUId} SRAM",
            "Uncorrectable ECC Error"
          ],
          "parameters": [
            {
              "type": "DIRECT",
              "field": "CurrentDeviceName"
            }
          ]
        }
      },
      "telemetries": [
        "TODO: '{GPUId} SRAM Uncorrectable error count' [type: object] (row: 66, col: 'AdditionalData')",
        "TODO: '{GPUId} SRAM Correctable error count' [type: object] (row: 66, col: 'AdditionalData')"
      ]
    }
  },
  {
    "index": 67,
    "SR #": "GPU_7",
    "deduced_event_info": {
      "event": "DRAM Contained ECC Error",
      "device_type": "GPU[0-7]",
      "event_trigger": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')]",
      "accessor": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')] (could not be deduced from an empty cell; row: 67, col: 'GPUOOB Property/OOB API')",
      "severity": "Warning",
      "resolution": "Restart the affected application",
      "trigger_count": "TODO: Trigger count [type: integer >= 0]",
      "event_counter_reset": {
        "type": "TODO: type [type: string]",
        "metadata": "TODO: metadata [type: string]"
      },
      "redfish": {
        "message_id": "ResourceEvent.1.0.ResourceErrorsDetected",
        "message_args": {
          "patterns": [
            "{GPUId} Memory",
            "Contained ECC Error"
          ],
          "parameters": [
            {
              "type": "DIRECT",
              "field": "CurrentDeviceName"
            }
          ]
        }
      },
      "telemetries": [
        "TODO: '{GPUId} DRAM Uncorrectable error count' [type: object] (row: 67, col: 'AdditionalData')",
        "TODO: '{GPUId} DRAM Correctable error count' [type: object] (row: 67, col: 'AdditionalData')"
      ]
    }
  },
  {
    "index": 68,
    "SR #": "GPU_8",
    "deduced_event_info": {
      "event": "DRAM Uncontained ECC Error",
      "device_type": "GPU[0-7]",
      "event_trigger": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')]",
      "accessor": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')] (could not be deduced from an empty cell; row: 68, col: 'GPUOOB Property/OOB API')",
      "severity": "Critical",
      "resolution": "Reset the GPU and restart affected applications.",
      "trigger_count": "TODO: Trigger count [type: integer >= 0]",
      "event_counter_reset": {
        "type": "TODO: type [type: string]",
        "metadata": "TODO: metadata [type: string]"
      },
      "redfish": {
        "message_id": "ResourceEvent.1.0.ResourceErrorsDetected",
        "message_args": {
          "patterns": [
            "{GPUId} Memory",
            "Uncontained ECC Error"
          ],
          "parameters": [
            {
              "type": "DIRECT",
              "field": "CurrentDeviceName"
            }
          ]
        }
      },
      "telemetries": [
        "TODO: '{GPUId} DRAM Uncorrectable error count' [type: object] (row: 68, col: 'AdditionalData')",
        "TODO: '{GPUId} DRAM Correctable error count' [type: object] (row: 68, col: 'AdditionalData')"
      ]
    }
  },
  {
    "index": 69,
    "SR #": "GPU_9",
    "deduced_event_info": {
      "event": "in Throttled state",
      "device_type": "GPU[0-7]",
      "event_trigger": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')]",
      "accessor": {
        "type": "DeviceCoreAPI",
        "property": "gpu.clock.throttleReason/GPUGetThrottleReason",
        "check": "TODO: Value checking definition [type: object]"
      },
      "severity": "Warning",
      "resolution": "No recovery required.",
      "trigger_count": "TODO: Trigger count [type: integer >= 0]",
      "event_counter_reset": {
        "type": "TODO: type [type: string]",
        "metadata": "TODO: metadata [type: string]"
      },
      "redfish": {
        "message_id": "ResourceEvent.1.0.ResourceErrorsDetected",
        "message_args": {}
      },
      "telemetries": [
        "TODO: '{GPUId} ThrottleReason' [type: object] (row: 69, col: 'AdditionalData')"
      ]
    }
  },
  {
    "index": 70,
    "SR #": "GPU_10",
    "deduced_event_info": {
      "event": "PCIe link speed state change",
      "device_type": "GPU[0-7]",
      "event_trigger": {
        "type": "DBUS",
        "object": "/xyz/openbmc_project/GpioStatusHandler",
        "interface": "xyz.openbmc_project.GpioStatus",
        "property": "IC23_ALERT",
        "check": {
          "equal": "false"
        }
      },
      "accessor": {
        "type": "DeviceCoreAPI",
        "property": "gpu.pcie.linkStatus.page0/GPUGetPCIeLinkSpeed",
        "check": "TODO: Value checking definition [type: object]"
      },
      "severity": "Warning",
      "resolution": "Reset the link. If problem persists, isolate the server for RMA evaluation.",
      "trigger_count": "TODO: Trigger count [type: integer >= 0]",
      "event_counter_reset": {
        "type": "TODO: type [type: string]",
        "metadata": "TODO: metadata [type: string]"
      },
      "redfish": {
        "message_id": "ResourceEvent.1.0.ResourceErrorsDetected",
        "message_args": {
          "patterns": [
            "{GPUId} PCIe",
            "Abnormal Speed Change"
          ],
          "parameters": [
            {
              "type": "DIRECT",
              "field": "CurrentDeviceName"
            }
          ]
        }
      },
      "telemetries": [
        "TODO: '{GPUId} PCIe link speed' [type: object] (row: 70, col: 'AdditionalData')"
      ]
    }
  },
  {
    "index": 71,
    "SR #": "GPU_11",
    "deduced_event_info": {
      "event": "PCIe link width state change",
      "device_type": "GPU[0-7]",
      "event_trigger": {
        "type": "DBUS",
        "object": "/xyz/openbmc_project/GpioStatusHandler",
        "interface": "xyz.openbmc_project.GpioStatus",
        "property": "IC23_ALERT",
        "check": {
          "equal": "false"
        }
      },
      "accessor": {
        "type": "DeviceCoreAPI",
        "property": "gpu.pcie.linkStatus.page0/GPUGetPCIeLinkWidth",
        "check": "TODO: Value checking definition [type: object]"
      },
      "severity": "Critical",
      "resolution": "Reset the link. If problem persists, isolate the server for RMA evaluation.",
      "trigger_count": "TODO: Trigger count [type: integer >= 0]",
      "event_counter_reset": {
        "type": "TODO: type [type: string]",
        "metadata": "TODO: metadata [type: string]"
      },
      "redfish": {
        "message_id": "ResourceEvent.1.0.ResourceErrorsDetected",
        "message_args": {
          "patterns": [
            "{GPUId} PCIe",
            "Abnormal Width Change"
          ],
          "parameters": [
            {
              "type": "DIRECT",
              "field": "CurrentDeviceName"
            }
          ]
        }
      },
      "telemetries": [
        "TODO: '{GPUId} PCIe link width' [type: object] (row: 71, col: 'AdditionalData')"
      ]
    }
  },
  {
    "index": 72,
    "SR #": "GPU_12",
    "deduced_event_info": {
      "event": "PMU Microcontroller Halt",
      "device_type": "GPU[0-7]",
      "event_trigger": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')]",
      "accessor": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')] (could not be deduced from an empty cell; row: 72, col: 'GPUOOB Property/OOB API')",
      "severity": "TODO: Severity level [type: string] (could not be deduced from an empty cell; row: 72, col: 'Severity')",
      "resolution": "Reset the GPU. If the GPU continues to exhibit the problem, isolate the server for RMA evaluation.",
      "trigger_count": "TODO: Trigger count [type: integer >= 0]",
      "event_counter_reset": {
        "type": "TODO: type [type: string]",
        "metadata": "TODO: metadata [type: string]"
      },
      "redfish": {
        "message_id": "ResourceEvent.1.0.ResourceErrorsDetected",
        "message_args": {
          "patterns": [
            "{GPUId} DriverEventMessage",
            "(Xid: {Xid errno}) {Information about the Xid}"
          ],
          "parameters": [
            {
              "type": "DIRECT",
              "field": "CurrentDeviceName"
            },
            "TODO: Value accessor [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')] (could not be deduced from the cell; cell value: '[\"{GPUId} DriverEventMessage\", \"(Xid: {Xid errno}) {Information about the Xid}\"]'; row: 72, col: 'MessageArgs')",
            "TODO: Value accessor [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')] (could not be deduced from the cell; cell value: '[\"{GPUId} DriverEventMessage\", \"(Xid: {Xid errno}) {Information about the Xid}\"]'; row: 72, col: 'MessageArgs')"
          ]
        }
      },
      "telemetries": []
    }
  },
  {
    "index": 73,
    "SR #": "GPU_13",
    "deduced_event_info": {
      "event": "I2C Hang",
      "device_type": "GPU[0-7]",
      "event_trigger": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')]",
      "accessor": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')] (could not be deduced from an empty cell; row: 73, col: 'GPUOOB Property/OOB API')",
      "severity": "OK",
      "resolution": "No recovery required since FPGA will recover the fault automatically",
      "trigger_count": "TODO: Trigger count [type: integer >= 0]",
      "event_counter_reset": {
        "type": "TODO: type [type: string]",
        "metadata": "TODO: metadata [type: string]"
      },
      "redfish": {
        "message_id": "ResourceEvent.1.0.ResourceErrorsDetected",
        "message_args": {
          "patterns": [
            "{GPUId} I2C",
            "Hang"
          ],
          "parameters": [
            {
              "type": "DIRECT",
              "field": "CurrentDeviceName"
            }
          ]
        }
      },
      "telemetries": []
    }
  },
  {
    "index": 74,
    "SR #": "GPU_14",
    "deduced_event_info": {
      "event": "Physically Missing",
      "device_type": "GPU[0-7]",
      "event_trigger": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')]",
      "accessor": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')] (could not be deduced from an empty cell; row: 74, col: 'GPUOOB Property/OOB API')",
      "severity": "Crtical",
      "resolution": "Cordon the HGX server node for further diagnosis.",
      "trigger_count": "TODO: Trigger count [type: integer >= 0]",
      "event_counter_reset": {
        "type": "TODO: type [type: string]",
        "metadata": "TODO: metadata [type: string]"
      },
      "redfish": {
        "message_id": "ResourceEvent.1.1.ResourceStateChanged",
        "message_args": {
          "patterns": [
            "{GPUId}",
            "Absent"
          ],
          "parameters": [
            {
              "type": "DIRECT",
              "field": "CurrentDeviceName"
            }
          ]
        }
      },
      "telemetries": []
    }
  },
  {
    "index": 75,
    "SR #": "GPU_15",
    "deduced_event_info": {
      "event": "Inforom Corruption",
      "device_type": "GPU [0-7]",
      "event_trigger": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')]",
      "accessor": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')] (could not be deduced from an empty cell; row: 75, col: 'GPUOOB Property/OOB API')",
      "severity": "Warning",
      "resolution": "Use NVIDIA GPU InfoROM File System Recovery Utility to recover. If the problem persists, restore infoROM to default settings using in-band tools such as nvflash.",
      "trigger_count": "TODO: Trigger count [type: integer >= 0]",
      "event_counter_reset": {
        "type": "TODO: type [type: string]",
        "metadata": "TODO: metadata [type: string]"
      },
      "redfish": {
        "message_id": "ResourceEvent.1.0.ResourceErrorsDetected",
        "message_args": {
          "patterns": [
            "{GPUId} InfoROM",
            "Corruption"
          ],
          "parameters": [
            {
              "type": "DIRECT",
              "field": "CurrentDeviceName"
            }
          ]
        }
      },
      "telemetries": []
    }
  },
  {
    "index": 76,
    "SR #": "GPU_16",
    "deduced_event_info": {
      "event": "Destination FLA Translation Error",
      "device_type": "GPU[0-7]",
      "event_trigger": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')]",
      "accessor": {
        "type": "DeviceCoreAPI",
        "property": "gpu.xid.event",
        "check": "TODO: Value checking definition [type: object]"
      },
      "severity": "Warning",
      "resolution": "TBD",
      "trigger_count": "TODO: Trigger count [type: integer >= 0]",
      "event_counter_reset": {
        "type": "TODO: type [type: string]",
        "metadata": "TODO: metadata [type: string]"
      },
      "redfish": {
        "message_id": "ResourceEvent.1.0.ResourceErrorsDetected",
        "message_args": {
          "patterns": [
            "{GPUId} DriverEventMessage",
            "(Xid: {Xid errno}) {Information about the Xid}"
          ],
          "parameters": [
            {
              "type": "DIRECT",
              "field": "CurrentDeviceName"
            },
            "TODO: Value accessor [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')] (could not be deduced from the cell; cell value: '[\"{GPUId} DriverEventMessage\", \"(Xid: {Xid errno}) {Information about the Xid}\"]'; row: 76, col: 'MessageArgs')",
            "TODO: Value accessor [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')] (could not be deduced from the cell; cell value: '[\"{GPUId} DriverEventMessage\", \"(Xid: {Xid errno}) {Information about the Xid}\"]'; row: 76, col: 'MessageArgs')"
          ]
        }
      },
      "telemetries": []
    }
  },
  {
    "index": 77,
    "SR #": "GPU_17",
    "deduced_event_info": {
      "event": "NVJPEG Error",
      "device_type": "GPU[0-7]",
      "event_trigger": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')]",
      "accessor": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')] (could not be deduced from an empty cell; row: 77, col: 'GPUOOB Property/OOB API')",
      "severity": "Warning",
      "resolution": "Restart application.  If the application continues to trigger the same event, investigate application changes and logs to investigate potential application problem.",
      "trigger_count": "TODO: Trigger count [type: integer >= 0]",
      "event_counter_reset": {
        "type": "TODO: type [type: string]",
        "metadata": "TODO: metadata [type: string]"
      },
      "redfish": {
        "message_id": "ResourceEvent.1.0.ResourceErrorsDetected",
        "message_args": {
          "patterns": [
            "{GPUId} DriverEventMessage",
            "(Xid: {Xid errno}) {Information about the Xid}"
          ],
          "parameters": [
            {
              "type": "DIRECT",
              "field": "CurrentDeviceName"
            },
            "TODO: Value accessor [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')] (could not be deduced from the cell; cell value: '[\"{GPUId} DriverEventMessage\", \"(Xid: {Xid errno}) {Information about the Xid}\"]'; row: 77, col: 'MessageArgs')",
            "TODO: Value accessor [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')] (could not be deduced from the cell; cell value: '[\"{GPUId} DriverEventMessage\", \"(Xid: {Xid errno}) {Information about the Xid}\"]'; row: 77, col: 'MessageArgs')"
          ]
        }
      },
      "telemetries": []
    }
  },
  {
    "index": 78,
    "SR #": "GPU_18",
    "deduced_event_info": {
      "event": "NVDEC Error",
      "device_type": "GPU[0-7]",
      "event_trigger": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')]",
      "accessor": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')] (could not be deduced from an empty cell; row: 78, col: 'GPUOOB Property/OOB API')",
      "severity": "Warning",
      "resolution": "Restart application. If the application continues to trigger the same event, investigate application changes and logs to investigate potential application problem.",
      "trigger_count": "TODO: Trigger count [type: integer >= 0]",
      "event_counter_reset": {
        "type": "TODO: type [type: string]",
        "metadata": "TODO: metadata [type: string]"
      },
      "redfish": {
        "message_id": "ResourceEvent.1.0.ResourceErrorsDetected",
        "message_args": {
          "patterns": [
            "{GPUId} DriverEventMessage",
            "(Xid: {Xid errno}) {Information about the Xid}"
          ],
          "parameters": [
            {
              "type": "DIRECT",
              "field": "CurrentDeviceName"
            },
            "TODO: Value accessor [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')] (could not be deduced from the cell; cell value: '[\"{GPUId} DriverEventMessage\", \"(Xid: {Xid errno}) {Information about the Xid}\"]'; row: 78, col: 'MessageArgs')",
            "TODO: Value accessor [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')] (could not be deduced from the cell; cell value: '[\"{GPUId} DriverEventMessage\", \"(Xid: {Xid errno}) {Information about the Xid}\"]'; row: 78, col: 'MessageArgs')"
          ]
        }
      },
      "telemetries": []
    }
  },
  {
    "index": 79,
    "SR #": "GPU_19",
    "deduced_event_info": {
      "event": "OFA Error",
      "device_type": "GPU[0-7]",
      "event_trigger": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')]",
      "accessor": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')] (could not be deduced from an empty cell; row: 79, col: 'GPUOOB Property/OOB API')",
      "severity": "Warning",
      "resolution": "Restart application.  If the application continues to trigger the same event, investigate application changes and logs to investigate potential application problem.",
      "trigger_count": "TODO: Trigger count [type: integer >= 0]",
      "event_counter_reset": {
        "type": "TODO: type [type: string]",
        "metadata": "TODO: metadata [type: string]"
      },
      "redfish": {
        "message_id": "ResourceEvent.1.0.ResourceErrorsDetected",
        "message_args": {
          "patterns": [
            "{GPUId} DriverEventMessage",
            "(Xid: {Xid errno}) {Information about the Xid}"
          ],
          "parameters": [
            {
              "type": "DIRECT",
              "field": "CurrentDeviceName"
            },
            "TODO: Value accessor [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')] (could not be deduced from the cell; cell value: '[\"{GPUId} DriverEventMessage\", \"(Xid: {Xid errno}) {Information about the Xid}\"]'; row: 79, col: 'MessageArgs')",
            "TODO: Value accessor [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')] (could not be deduced from the cell; cell value: '[\"{GPUId} DriverEventMessage\", \"(Xid: {Xid errno}) {Information about the Xid}\"]'; row: 79, col: 'MessageArgs')"
          ]
        }
      },
      "telemetries": []
    }
  },
  {
    "index": 80,
    "SR #": "GPU_20",
    "deduced_event_info": {
      "event": "Nvlink Error",
      "device_type": "GPU [0-7]",
      "event_trigger": {
        "type": "DBUS",
        "object": "/xyz/openbmc_project/GpioStatusHandler",
        "interface": "xyz.openbmc_project.GpioStatus",
        "property": "I2C3_ALERT",
        "check": {
          "equal": "false"
        }
      },
      "accessor": {
        "type": "DeviceCoreAPI",
        "property": "gpu.nvlink.aggregateReplayErrCount/GPUGetAggregateNVLinkReplayCount gpu.nvlink.aggregateRecoveryErrCount/GPUGetAggregateNVLinkRecoveryErrorCount gpu.nvlink.aggregateFlitCRCErrCount/GPUGetAggregateNVLinkFlitCRCErrorCount gpu.nvlink.aggregateDataCRCErrCount/GPUGetAggregateNVLinkDataCRCErrorCount",
        "check": "TODO: Value checking definition [type: object]"
      },
      "severity": "Critical",
      "resolution": "Reset the GPU or power cycle the BaseBoard.  If problem persists, isolate the server for RMA evaluation.",
      "trigger_count": "TODO: Trigger count [type: integer >= 0]",
      "event_counter_reset": {
        "type": "TODO: type [type: string]",
        "metadata": "TODO: metadata [type: string]"
      },
      "redfish": {
        "message_id": "ResourceEvent.1.0.ResourceErrorsDetected",
        "message_args": {
          "patterns": [
            "{GPUId} {NVLinkId}",
            "Error"
          ],
          "parameters": [
            {
              "type": "DIRECT",
              "field": "CurrentDeviceName"
            },
            {
              "type": "DIRECT",
              "field": "CurrentDeviceName"
            }
          ]
        }
      },
      "telemetries": [
        "TODO: '{GPUId} {NVLinkId} replay error count' [type: object] (row: 80, col: 'AdditionalData')",
        "TODO: '{GPUId} {NVLinkId} recovery error count' [type: object] (row: 80, col: 'AdditionalData')",
        "TODO: '{GPUId} {NVLinkId} flit CRC error count' [type: object] (row: 80, col: 'AdditionalData')",
        "TODO: '{GPUId} {NVLinkId} data CRC error count' [type: object] (row: 80, col: 'AdditionalData')"
      ]
    }
  },
  {
    "index": 81,
    "SR #": "GPU_21",
    "deduced_event_info": {
      "event": "MMU Fault",
      "device_type": "GPU [0-7]",
      "event_trigger": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')]",
      "accessor": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')] (could not be deduced from an empty cell; row: 81, col: 'GPUOOB Property/OOB API')",
      "severity": "OK",
      "resolution": "Restart application.  If the application continues to trigger the same event, investigate application changes and logs to investigate potential application problem.",
      "trigger_count": "TODO: Trigger count [type: integer >= 0]",
      "event_counter_reset": {
        "type": "TODO: type [type: string]",
        "metadata": "TODO: metadata [type: string]"
      },
      "redfish": {
        "message_id": "ResourceEvent.1.0.ResourceErrorsDetected",
        "message_args": {
          "patterns": [
            "{GPUId} DriverEventMessage",
            "(Xid: {Xid errno}) {Information about the Xid}"
          ],
          "parameters": [
            {
              "type": "DIRECT",
              "field": "CurrentDeviceName"
            },
            "TODO: Value accessor [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')] (could not be deduced from the cell; cell value: '[\"{GPUId} DriverEventMessage\", \"(Xid: {Xid errno}) {Information about the Xid}\"]'; row: 81, col: 'MessageArgs')",
            "TODO: Value accessor [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')] (could not be deduced from the cell; cell value: '[\"{GPUId} DriverEventMessage\", \"(Xid: {Xid errno}) {Information about the Xid}\"]'; row: 81, col: 'MessageArgs')"
          ]
        }
      },
      "telemetries": []
    }
  },
  {
    "index": 82,
    "SR #": "GPU_22",
    "deduced_event_info": {
      "event": "SM Warp Exception",
      "device_type": "GPU [0-7]",
      "event_trigger": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')]",
      "accessor": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')] (could not be deduced from an empty cell; row: 82, col: 'GPUOOB Property/OOB API')",
      "severity": "OK",
      "resolution": "Restart application.  If the application continues to trigger the same event, investigate application changes and application logs to investigate potential application problem.",
      "trigger_count": "TODO: Trigger count [type: integer >= 0]",
      "event_counter_reset": {
        "type": "TODO: type [type: string]",
        "metadata": "TODO: metadata [type: string]"
      },
      "redfish": {
        "message_id": "ResourceEvent.1.0.ResourceErrorsDetected",
        "message_args": {
          "patterns": [
            "{GPUId} DriverEventMessage",
            "(Xid: {Xid errno}) {Information about the Xid}"
          ],
          "parameters": [
            {
              "type": "DIRECT",
              "field": "CurrentDeviceName"
            },
            "TODO: Value accessor [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')] (could not be deduced from the cell; cell value: '[\"{GPUId} DriverEventMessage\", \"(Xid: {Xid errno}) {Information about the Xid}\"]'; row: 82, col: 'MessageArgs')",
            "TODO: Value accessor [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')] (could not be deduced from the cell; cell value: '[\"{GPUId} DriverEventMessage\", \"(Xid: {Xid errno}) {Information about the Xid}\"]'; row: 82, col: 'MessageArgs')"
          ]
        }
      },
      "telemetries": []
    }
  },
  {
    "index": 83,
    "SR #": "GPU_23",
    "deduced_event_info": {
      "event": "CUDA Channel Reset",
      "device_type": "GPU [0-7]",
      "event_trigger": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')]",
      "accessor": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')] (could not be deduced from an empty cell; row: 83, col: 'GPUOOB Property/OOB API')",
      "severity": "OK",
      "resolution": "Restart application.  Review other Xids for indications of other hardware failures.\nIf the application continues to trigger the same event, investigate application changes and application logs to investigate potential application problem.",
      "trigger_count": "TODO: Trigger count [type: integer >= 0]",
      "event_counter_reset": {
        "type": "TODO: type [type: string]",
        "metadata": "TODO: metadata [type: string]"
      },
      "redfish": {
        "message_id": "ResourceEvent.1.0.ResourceErrorsDetected",
        "message_args": {
          "patterns": [
            "{GPUId} DriverEventMessage",
            "(Xid: {Xid errno}) {Information about the Xid}"
          ],
          "parameters": [
            {
              "type": "DIRECT",
              "field": "CurrentDeviceName"
            },
            "TODO: Value accessor [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')] (could not be deduced from the cell; cell value: '[\"{GPUId} DriverEventMessage\", \"(Xid: {Xid errno}) {Information about the Xid}\"]'; row: 83, col: 'MessageArgs')",
            "TODO: Value accessor [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')] (could not be deduced from the cell; cell value: '[\"{GPUId} DriverEventMessage\", \"(Xid: {Xid errno}) {Information about the Xid}\"]'; row: 83, col: 'MessageArgs')"
          ]
        }
      },
      "telemetries": []
    }
  },
  {
    "index": 84,
    "SR #": "GPU_24",
    "deduced_event_info": {
      "event": "Reset Required",
      "device_type": "GPU [0-7]",
      "event_trigger": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')]",
      "accessor": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')] (could not be deduced from an empty cell; row: 84, col: 'GPUOOB Property/OOB API')",
      "severity": "Critical",
      "resolution": "Reset the GPU or power cycle the BaseBoard.  If problem persists, isolate the server for RMA evaluation.",
      "trigger_count": "TODO: Trigger count [type: integer >= 0]",
      "event_counter_reset": {
        "type": "TODO: type [type: string]",
        "metadata": "TODO: metadata [type: string]"
      },
      "redfish": {
        "message_id": "Base.1.13.ResetRequired",
        "message_args": {
          "patterns": [
            "/redfish/v1/Systems/{ComputerSystemId}/Processors/{GPUId}",
            "ForceRestart"
          ],
          "parameters": [
            {
              "type": "DIRECT",
              "field": "CurrentDeviceName"
            },
            {
              "type": "DIRECT",
              "field": "CurrentDeviceName"
            }
          ]
        }
      },
      "telemetries": []
    }
  },
  {
    "index": 85,
    "SR #": "GPU_25",
    "deduced_event_info": {
      "event": "Drain and Reset Recommended",
      "device_type": "GPU [0-7]",
      "event_trigger": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')]",
      "accessor": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')] (could not be deduced from an empty cell; row: 85, col: 'GPUOOB Property/OOB API')",
      "severity": "Warning",
      "resolution": "Reset the GPU or power cycle the BaseBoard.  If problem persists, isolate the server for RMA evaluation.",
      "trigger_count": "TODO: Trigger count [type: integer >= 0]",
      "event_counter_reset": {
        "type": "TODO: type [type: string]",
        "metadata": "TODO: metadata [type: string]"
      },
      "redfish": {
        "message_id": "Base.1.13.ResetRecommended",
        "message_args": {
          "patterns": [
            "/redfish/v1/Systems/{ComputerSystemId}/Processors/{GPUId}",
            "ForceRestart"
          ],
          "parameters": [
            {
              "type": "DIRECT",
              "field": "CurrentDeviceName"
            },
            {
              "type": "DIRECT",
              "field": "CurrentDeviceName"
            }
          ]
        }
      },
      "telemetries": []
    }
  },
  {
    "index": 86,
    "SR #": "GPU_26",
    "deduced_event_info": {
      "event": "Disabled single bit interrupts",
      "device_type": "GPU[0-7]",
      "event_trigger": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')]",
      "accessor": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')] (could not be deduced from an empty cell; row: 86, col: 'GPUOOB Property/OOB API')",
      "severity": "Critical",
      "resolution": "No recovery required",
      "trigger_count": "TODO: Trigger count [type: integer >= 0]",
      "event_counter_reset": {
        "type": "TODO: type [type: string]",
        "metadata": "TODO: metadata [type: string]"
      },
      "redfish": {
        "message_id": "ResourceEvent.1.0.ResourceErrorsDetected",
        "message_args": {
          "patterns": [
            "{GPUId} Memory",
            "High SingleBit ECC Error Rate"
          ],
          "parameters": [
            {
              "type": "DIRECT",
              "field": "CurrentDeviceName"
            }
          ]
        }
      },
      "telemetries": [
        "TODO: '{GPUId} Dynamic Page Retirement SBE errors' [type: object] (row: 86, col: 'AdditionalData')",
        "TODO: '{GPUId} Dynamic Page Retirement DBE errors' [type: object] (row: 86, col: 'AdditionalData')"
      ]
    }
  },
  {
    "index": 87,
    "SR #": "NVSwitch_1",
    "deduced_event_info": {
      "event": "fallen off of bus",
      "device_type": "NVSwitch[0-3]",
      "event_trigger": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')]",
      "accessor": {
        "type": "DeviceCoreAPI",
        "property": "nvswitch.device.stateFlags.page0/NVSwitchGetDriverLoaded",
        "check": "TODO: Value checking definition [type: object]"
      },
      "severity": "Critical",
      "resolution": "(Covered by different scenarios as listed below)",
      "trigger_count": "TODO: Trigger count [type: integer >= 0]",
      "event_counter_reset": {
        "type": "TODO: type [type: string]",
        "metadata": "TODO: metadata [type: string]"
      },
      "redfish": {
        "message_id": "ResourceEvent.1.0.ResourceErrorsDetected",
        "message_args": {
          "patterns": [
            "{NVSwitchId} DriverEventMessage",
            "(SXid: {SXid errno}) {Information about the SXid}"
          ],
          "parameters": [
            {
              "type": "DIRECT",
              "field": "CurrentDeviceName"
            },
            "TODO: Value accessor [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')] (could not be deduced from the cell; cell value: '[\"{NVSwitchId} DriverEventMessage\", \"(SXid: {SXid errno}) {Information about the SXid}\"]'; row: 87, col: 'MessageArgs')",
            "TODO: Value accessor [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')] (could not be deduced from the cell; cell value: '[\"{NVSwitchId} DriverEventMessage\", \"(SXid: {SXid errno}) {Information about the SXid}\"]'; row: 87, col: 'MessageArgs')"
          ]
        }
      },
      "telemetries": []
    }
  },
  {
    "index": 88,
    "SR #": "NVSwitch_2",
    "deduced_event_info": {
      "event": "Over Temp",
      "device_type": "NVSwitch[0-3]",
      "event_trigger": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')]",
      "accessor": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')] (could not be deduced from an empty cell; row: 88, col: 'GPUOOB Property/OOB API')",
      "severity": "Critical",
      "resolution": "Power off the BaseBoard within 1 second, the NVSwitch will be held in reset. Check thermal environmental to ensure the NVSwitch operates under UpperFatal threshold and power cycle the BaseBoard to recover.",
      "trigger_count": "TODO: Trigger count [type: integer >= 0]",
      "event_counter_reset": {
        "type": "TODO: type [type: string]",
        "metadata": "TODO: metadata [type: string]"
      },
      "redfish": {
        "message_id": "ResourceEvent.1.0.ResourceErrorThresholdExceeded",
        "message_args": {
          "patterns": [
            "{NVSwitchId} Temperature",
            "{UpperFatal Threshold}"
          ],
          "parameters": [
            {
              "type": "DIRECT",
              "field": "CurrentDeviceName"
            },
            "TODO: Value accessor [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')] (could not be deduced from the cell; cell value: '[\"{NVSwitchId} Temperature\", \"{UpperFatal Threshold}\"]'; row: 88, col: 'MessageArgs')"
          ]
        }
      },
      "telemetries": [
        "TODO: '{NVSwitchId} Temperature' [type: object] (row: 88, col: 'AdditionalData')",
        "TODO: '{NVSwitchId} Thermal Parameters' [type: object] (row: 88, col: 'AdditionalData')"
      ]
    }
  },
  {
    "index": 89,
    "SR #": "NVSwitch_3",
    "deduced_event_info": {
      "event": "Thermal warning",
      "device_type": "NVSwitch[0-3]",
      "event_trigger": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')]",
      "accessor": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')] (could not be deduced from an empty cell; row: 89, col: 'GPUOOB Property/OOB API')",
      "severity": "Warning",
      "resolution": "Increase the BaseBoard cooling and check thermal environmental to ensure the NVSwitch operates under UpperCritical threshold.",
      "trigger_count": "TODO: Trigger count [type: integer >= 0]",
      "event_counter_reset": {
        "type": "TODO: type [type: string]",
        "metadata": "TODO: metadata [type: string]"
      },
      "redfish": {
        "message_id": "ResourceEvent.1.0.ResourceWaringThresholdExceeded",
        "message_args": {
          "patterns": [
            "{NVSwitchId} Temperature",
            "{UpperCritical Threshold}"
          ],
          "parameters": [
            {
              "type": "DIRECT",
              "field": "CurrentDeviceName"
            },
            "TODO: Value accessor [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')] (could not be deduced from the cell; cell value: '[\"{NVSwitchId} Temperature\", \"{UpperCritical Threshold}\"]'; row: 89, col: 'MessageArgs')"
          ]
        }
      },
      "telemetries": [
        "TODO: '{NVSwitchId} Temperature' [type: object] (row: 89, col: 'AdditionalData')",
        "TODO: '{NVSwitchId} Thermal Parameters' [type: object] (row: 89, col: 'AdditionalData')"
      ]
    }
  },
  {
    "index": 90,
    "SR #": "NVSwitch_4",
    "deduced_event_info": {
      "event": "VR failure",
      "device_type": "NVSwitch[0-3]",
      "event_trigger": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')]",
      "accessor": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')] (could not be deduced from an empty cell; row: 90, col: 'GPUOOB Property/OOB API')",
      "severity": "Critical",
      "resolution": "Power cycle the BaseBoard. If the problem persists, isolate the server for RMA evaluation.",
      "trigger_count": "TODO: Trigger count [type: integer >= 0]",
      "event_counter_reset": {
        "type": "TODO: type [type: string]",
        "metadata": "TODO: metadata [type: string]"
      },
      "redfish": {
        "message_id": "ResourceEvent.1.0.ResourceErrorsDetected",
        "message_args": {
          "patterns": [
            "{NVSwitchId} PowerGood",
            "Abnormal Power Change"
          ],
          "parameters": [
            {
              "type": "DIRECT",
              "field": "CurrentDeviceName"
            }
          ]
        }
      },
      "telemetries": [
        "TODO: '{NVSwitchId} VDD Abnormal change' [type: object] (row: 90, col: 'AdditionalData')",
        "TODO: '{NVSwitchId} DVDD Abnormal change' [type: object] (row: 90, col: 'AdditionalData')",
        "TODO: '{NVSwitchId} HVDD Abnormal change' [type: object] (row: 90, col: 'AdditionalData')",
        "TODO: '{NVSwitchId} 1V8 Abnormal change' [type: object] (row: 90, col: 'AdditionalData')",
        "TODO: '{NVSwitchId} 3V3 Abnormal change' [type: object] (row: 90, col: 'AdditionalData')",
        "TODO: '{NVSwitchId} 5V Abnormal change' [type: object] (row: 90, col: 'AdditionalData')",
        "TODO: '{NVSwitchId} IBC Abnormal change' [type: object] (row: 90, col: 'AdditionalData')"
      ]
    }
  },
  {
    "index": 91,
    "SR #": "NVSwitch_5",
    "deduced_event_info": {
      "event": "I2C Hang",
      "device_type": "NVSwitch[0-3]",
      "event_trigger": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')]",
      "accessor": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')] (could not be deduced from an empty cell; row: 91, col: 'GPUOOB Property/OOB API')",
      "severity": "OK",
      "resolution": "No recovery required.",
      "trigger_count": "TODO: Trigger count [type: integer >= 0]",
      "event_counter_reset": {
        "type": "TODO: type [type: string]",
        "metadata": "TODO: metadata [type: string]"
      },
      "redfish": {
        "message_id": "ResourceEvent.1.0.ResourceErrorsDetected",
        "message_args": {
          "patterns": [
            "{NVSwitchId} I2C",
            "Hang"
          ],
          "parameters": [
            {
              "type": "DIRECT",
              "field": "CurrentDeviceName"
            }
          ]
        }
      },
      "telemetries": []
    }
  },
  {
    "index": 92,
    "SR #": "NVSwitch_6",
    "deduced_event_info": {
      "event": "SMBPBI server unavailable",
      "device_type": "NVSwitch[0-3]",
      "event_trigger": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')]",
      "accessor": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')] (could not be deduced from an empty cell; row: 92, col: 'GPUOOB Property/OOB API')",
      "severity": "Critical",
      "resolution": "TBD",
      "trigger_count": "TODO: Trigger count [type: integer >= 0]",
      "event_counter_reset": {
        "type": "TODO: type [type: string]",
        "metadata": "TODO: metadata [type: string]"
      },
      "redfish": {
        "message_id": "ResourceEvent.1.0.ResourceErrorsDetected",
        "message_args": {
          "patterns": [
            "{NVSwitchId} SMBPBI",
            "Server Unavailable"
          ],
          "parameters": [
            {
              "type": "DIRECT",
              "field": "CurrentDeviceName"
            }
          ]
        }
      },
      "telemetries": []
    }
  },
  {
    "index": 93,
    "SR #": "NVSwitch_7",
    "deduced_event_info": {
      "event": "PCIe link speed state",
      "device_type": "NVSwitch[0-3]",
      "event_trigger": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')]",
      "accessor": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')] (could not be deduced from an empty cell; row: 93, col: 'GPUOOB Property/OOB API')",
      "severity": "Critical",
      "resolution": "Reset the link. If problem persists, isolate the server for RMA evaluation.",
      "trigger_count": "TODO: Trigger count [type: integer >= 0]",
      "event_counter_reset": {
        "type": "TODO: type [type: string]",
        "metadata": "TODO: metadata [type: string]"
      },
      "redfish": {
        "message_id": "ResourceEvent.1.0.ResourceErrorsDetected",
        "message_args": {
          "patterns": [
            "{NVSwitchId} PCIe",
            "Abnormal Speed Change"
          ],
          "parameters": [
            {
              "type": "DIRECT",
              "field": "CurrentDeviceName"
            }
          ]
        }
      },
      "telemetries": [
        "TODO: '{NVSwitchId} PCIe link speed' [type: object] (row: 93, col: 'AdditionalData')"
      ]
    }
  },
  {
    "index": 94,
    "SR #": "NVSwitch_8",
    "deduced_event_info": {
      "event": "PCIe link width state",
      "device_type": "NVSwitch[0-3]",
      "event_trigger": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')]",
      "accessor": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')] (could not be deduced from an empty cell; row: 94, col: 'GPUOOB Property/OOB API')",
      "severity": "Critical",
      "resolution": "Reset the link. If problem persists, isolate the server for RMA evaluation.",
      "trigger_count": "TODO: Trigger count [type: integer >= 0]",
      "event_counter_reset": {
        "type": "TODO: type [type: string]",
        "metadata": "TODO: metadata [type: string]"
      },
      "redfish": {
        "message_id": "ResourceEvent.1.0.ResourceErrorsDetected",
        "message_args": {
          "patterns": [
            "{NVSwitchId} PCIe",
            "Abnormal Width Change"
          ],
          "parameters": [
            {
              "type": "DIRECT",
              "field": "CurrentDeviceName"
            }
          ]
        }
      },
      "telemetries": [
        "TODO: '{NVSwitchId} PCIe link width' [type: object] (row: 94, col: 'AdditionalData')"
      ]
    }
  },
  {
    "index": 95,
    "SR #": "NVSwitch_9",
    "deduced_event_info": {
      "event": "PCIe link error",
      "device_type": "NVSwitch[0-3]",
      "event_trigger": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')]",
      "accessor": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')] (could not be deduced from an empty cell; row: 95, col: 'GPUOOB Property/OOB API')",
      "severity": "Critical",
      "resolution": "Reset the link. If problem persists, isolate the server for RMA evaluation.",
      "trigger_count": "TODO: Trigger count [type: integer >= 0]",
      "event_counter_reset": {
        "type": "TODO: type [type: string]",
        "metadata": "TODO: metadata [type: string]"
      },
      "redfish": {
        "message_id": "ResourceEvent.1.0.ResourceErrorsDetected",
        "message_args": {
          "patterns": [
            "{NVSwitchId} PCIe",
            "{PCIe Uncorrectable Error}"
          ],
          "parameters": [
            {
              "type": "DIRECT",
              "field": "CurrentDeviceName"
            },
            "TODO: Value accessor [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')] (could not be deduced from the cell; cell value: '[\"{NVSwitchId} PCIe\", \"{PCIe Uncorrectable Error}\"]'; row: 95, col: 'MessageArgs')"
          ]
        }
      },
      "telemetries": [
        "TODO: '{NVSwitchId} PCIe non-fatal error counts' [type: object] (row: 95, col: 'AdditionalData')",
        "TODO: '{NVSwitchId} PCIe fatal error counts' [type: object] (row: 95, col: 'AdditionalData')"
      ]
    }
  },
  {
    "index": 96,
    "SR #": "NVSwitch_10",
    "deduced_event_info": {
      "event": "Link training error",
      "device_type": "NVSwitch[0-3]",
      "event_trigger": {
        "type": "DBUS",
        "object": "/xyz/openbmc_project/GpioStatusHandler",
        "interface": "xyz.openbmc_project.GpioStatus",
        "property": "I2C3_ALERT",
        "check": {
          "equal": "false"
        }
      },
      "accessor": {
        "type": "DeviceCoreAPI",
        "property": "nvswitch.nvlink.TrainingErrCountStatus/NVSwitchGetNVLinkTrainingErrorCount",
        "check": "TODO: Value checking definition [type: object]"
      },
      "severity": "Critical",
      "resolution": "Restart Fabric Manager or power cycle the BaseBoard. If problem persists, isolate the server for RMA evaluation.",
      "trigger_count": "TODO: Trigger count [type: integer >= 0]",
      "event_counter_reset": {
        "type": "TODO: type [type: string]",
        "metadata": "TODO: metadata [type: string]"
      },
      "redfish": {
        "message_id": "ResourceEvent.1.0.ResourceErrorsDetected",
        "message_args": {
          "patterns": [
            "{NVSwitchId} {NVLinkId}",
            "Training Error"
          ],
          "parameters": [
            {
              "type": "DIRECT",
              "field": "CurrentDeviceName"
            },
            {
              "type": "DIRECT",
              "field": "CurrentDeviceName"
            }
          ]
        }
      },
      "telemetries": [
        "TODO: '{NVSwitchId} {NVLinkId} Link training error count' [type: object] (row: 96, col: 'AdditionalData')"
      ]
    }
  },
  {
    "index": 97,
    "SR #": "NVSwitch_11",
    "deduced_event_info": {
      "event": "Successful link replays or recoveries",
      "device_type": "NVSwitch[0-3]",
      "event_trigger": {
        "type": "DBUS",
        "object": "/xyz/openbmc_project/GpioStatusHandler",
        "interface": "xyz.openbmc_project.GpioStatus",
        "property": "I2C3_ALERT",
        "check": {
          "equal": "false"
        }
      },
      "accessor": {
        "type": "DeviceCoreAPI",
        "property": "nvswitch.nvlink.replayErrCount.page/NVSwitchGetNVLinkReplayCount nvswitch.nvlink.recoveryErrCount.page/NVSwitchGetNVLinkRecoveryErrorCount",
        "check": "TODO: Value checking definition [type: object]"
      },
      "severity": "OK",
      "resolution": "No recovery required.",
      "trigger_count": "TODO: Trigger count [type: integer >= 0]",
      "event_counter_reset": {
        "type": "TODO: type [type: string]",
        "metadata": "TODO: metadata [type: string]"
      },
      "redfish": {
        "message_id": "ResourceEvent.1.0.ResourceErrorsDetected",
        "message_args": {}
      },
      "telemetries": [
        "TODO: '{NVSwitchId} {NVLinkId} replay rollover correctable error count' [type: object] (row: 97, col: 'AdditionalData')"
      ]
    }
  },
  {
    "index": 98,
    "SR #": "NVSwitch_12",
    "deduced_event_info": {
      "event": "Link CRC Errors",
      "device_type": "NVSwitch[0-3]",
      "event_trigger": {
        "type": "DBUS",
        "object": "/xyz/openbmc_project/GpioStatusHandler",
        "interface": "xyz.openbmc_project.GpioStatus",
        "property": "I2C3_ALERT",
        "check": {
          "equal": "false"
        }
      },
      "accessor": {
        "type": "DeviceCoreAPI",
        "property": "nvswitch.nvlink.flitCRCErrCount.page/NVSwitchGetNVLinkFlitCRCErrorCount nvswitch.nvlink.dataCRCErrCount.page/NVSwitchGetNVLinkDataCRCErrorCount",
        "check": "TODO: Value checking definition [type: object]"
      },
      "severity": "OK",
      "resolution": "No recovery required.",
      "trigger_count": "TODO: Trigger count [type: integer >= 0]",
      "event_counter_reset": {
        "type": "TODO: type [type: string]",
        "metadata": "TODO: metadata [type: string]"
      },
      "redfish": {
        "message_id": "ResourceEvent.1.0.ResourceErrorsDetected",
        "message_args": {}
      },
      "telemetries": [
        "TODO: '{GPUId} {NVLinkId} replay error count' [type: object] (row: 98, col: 'AdditionalData')",
        "TODO: '{GPUId} {NVLinkId} recovery error count' [type: object] (row: 98, col: 'AdditionalData')",
        "TODO: '{GPUId} {NVLinkId} flit CRC error count' [type: object] (row: 98, col: 'AdditionalData')",
        "TODO: '{GPUId} {NVLinkId} data CRC error count' [type: object] (row: 98, col: 'AdditionalData')"
      ]
    }
  },
  {
    "index": 99,
    "SR #": "NVSwitch_13",
    "deduced_event_info": {
      "event": "ERR_HW_HOST",
      "device_type": "NVSWITCH",
      "event_trigger": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')]",
      "accessor": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')] (could not be deduced from an empty cell; row: 99, col: 'GPUOOB Property/OOB API')",
      "severity": "TODO: Severity level [type: string] (could not be deduced from an empty cell; row: 99, col: 'Severity')",
      "resolution": "IO failures - This is a fatal error requiring chip reset.\nThermal - Check system cooling",
      "trigger_count": "TODO: Trigger count [type: integer >= 0]",
      "event_counter_reset": {
        "type": "TODO: type [type: string]",
        "metadata": "TODO: metadata [type: string]"
      },
      "redfish": {
        "message_id": "TODO: Message Id [type: string] (could not be deduced from an empty cell; row: 99, col: 'MessageId')",
        "message_args": {
          "patterns": "TODO: Message patterns [type: array of strings] (could not be deduced from an empty cell; row: 99, col: 'MessageArgs')",
          "parameters": "TODO: Pattern placeholder values [type: array of objects] (could not be deduced from an empty cell; row: 99, col: 'MessageArgs')"
        }
      },
      "telemetries": []
    }
  },
  {
    "index": 100,
    "SR #": "NVSwitch_14",
    "deduced_event_info": {
      "event": "ERR_HW_NPORT_INGRESS",
      "device_type": "NVSWITCH",
      "event_trigger": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')]",
      "accessor": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')] (could not be deduced from an empty cell; row: 100, col: 'GPUOOB Property/OOB API')",
      "severity": "TODO: Severity level [type: string] (could not be deduced from an empty cell; row: 100, col: 'Severity')",
      "resolution": "Check routing configuration of the topology\nSingle bit errors are self-correcting and non-fatal\nDouble bit errors are fatal, logged, and may indicate on-chip RAM degradation",
      "trigger_count": "TODO: Trigger count [type: integer >= 0]",
      "event_counter_reset": {
        "type": "TODO: type [type: string]",
        "metadata": "TODO: metadata [type: string]"
      },
      "redfish": {
        "message_id": "TODO: Message Id [type: string] (could not be deduced from an empty cell; row: 100, col: 'MessageId')",
        "message_args": {
          "patterns": "TODO: Message patterns [type: array of strings] (could not be deduced from an empty cell; row: 100, col: 'MessageArgs')",
          "parameters": "TODO: Pattern placeholder values [type: array of objects] (could not be deduced from an empty cell; row: 100, col: 'MessageArgs')"
        }
      },
      "telemetries": []
    }
  },
  {
    "index": 101,
    "SR #": "NVSwitch_15",
    "deduced_event_info": {
      "event": "ERR_HW_NPORT_EGRESS",
      "device_type": "NVSWITCH",
      "event_trigger": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')]",
      "accessor": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')] (could not be deduced from an empty cell; row: 101, col: 'GPUOOB Property/OOB API')",
      "severity": "TODO: Severity level [type: string] (could not be deduced from an empty cell; row: 101, col: 'Severity')",
      "resolution": "TODO: Resolution description [type: string] (could not be deduced from an empty cell; row: 101, col: 'Recovery')",
      "trigger_count": "TODO: Trigger count [type: integer >= 0]",
      "event_counter_reset": {
        "type": "TODO: type [type: string]",
        "metadata": "TODO: metadata [type: string]"
      },
      "redfish": {
        "message_id": "TODO: Message Id [type: string] (could not be deduced from an empty cell; row: 101, col: 'MessageId')",
        "message_args": {
          "patterns": "TODO: Message patterns [type: array of strings] (could not be deduced from an empty cell; row: 101, col: 'MessageArgs')",
          "parameters": "TODO: Pattern placeholder values [type: array of objects] (could not be deduced from an empty cell; row: 101, col: 'MessageArgs')"
        }
      },
      "telemetries": []
    }
  },
  {
    "index": 102,
    "SR #": "NVSwitch_16",
    "deduced_event_info": {
      "event": "ERR_HW_NPORT_TSTATE",
      "device_type": "NVSWITCH",
      "event_trigger": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')]",
      "accessor": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')] (could not be deduced from an empty cell; row: 102, col: 'GPUOOB Property/OOB API')",
      "severity": "TODO: Severity level [type: string] (could not be deduced from an empty cell; row: 102, col: 'Severity')",
      "resolution": "TODO: Resolution description [type: string] (could not be deduced from an empty cell; row: 102, col: 'Recovery')",
      "trigger_count": "TODO: Trigger count [type: integer >= 0]",
      "event_counter_reset": {
        "type": "TODO: type [type: string]",
        "metadata": "TODO: metadata [type: string]"
      },
      "redfish": {
        "message_id": "TODO: Message Id [type: string] (could not be deduced from an empty cell; row: 102, col: 'MessageId')",
        "message_args": {
          "patterns": "TODO: Message patterns [type: array of strings] (could not be deduced from an empty cell; row: 102, col: 'MessageArgs')",
          "parameters": "TODO: Pattern placeholder values [type: array of objects] (could not be deduced from an empty cell; row: 102, col: 'MessageArgs')"
        }
      },
      "telemetries": []
    }
  },
  {
    "index": 103,
    "SR #": "NVSwitch_17",
    "deduced_event_info": {
      "event": "ERR_HW_NPORT_ROUTE",
      "device_type": "NVSWITCH",
      "event_trigger": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')]",
      "accessor": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')] (could not be deduced from an empty cell; row: 103, col: 'GPUOOB Property/OOB API')",
      "severity": "TODO: Severity level [type: string] (could not be deduced from an empty cell; row: 103, col: 'Severity')",
      "resolution": "TODO: Resolution description [type: string] (could not be deduced from an empty cell; row: 103, col: 'Recovery')",
      "trigger_count": "TODO: Trigger count [type: integer >= 0]",
      "event_counter_reset": {
        "type": "TODO: type [type: string]",
        "metadata": "TODO: metadata [type: string]"
      },
      "redfish": {
        "message_id": "TODO: Message Id [type: string] (could not be deduced from an empty cell; row: 103, col: 'MessageId')",
        "message_args": {
          "patterns": "TODO: Message patterns [type: array of strings] (could not be deduced from an empty cell; row: 103, col: 'MessageArgs')",
          "parameters": "TODO: Pattern placeholder values [type: array of objects] (could not be deduced from an empty cell; row: 103, col: 'MessageArgs')"
        }
      },
      "telemetries": []
    }
  },
  {
    "index": 104,
    "SR #": "NVSwitch_18",
    "deduced_event_info": {
      "event": "ERR_HW_NVLCTRL",
      "device_type": "NVSWITCH",
      "event_trigger": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')]",
      "accessor": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')] (could not be deduced from an empty cell; row: 104, col: 'GPUOOB Property/OOB API')",
      "severity": "TODO: Severity level [type: string] (could not be deduced from an empty cell; row: 104, col: 'Severity')",
      "resolution": "Check NVLink status and error counts\nCheck NVLink integrity",
      "trigger_count": "TODO: Trigger count [type: integer >= 0]",
      "event_counter_reset": {
        "type": "TODO: type [type: string]",
        "metadata": "TODO: metadata [type: string]"
      },
      "redfish": {
        "message_id": "TODO: Message Id [type: string] (could not be deduced from an empty cell; row: 104, col: 'MessageId')",
        "message_args": {
          "patterns": "TODO: Message patterns [type: array of strings] (could not be deduced from an empty cell; row: 104, col: 'MessageArgs')",
          "parameters": "TODO: Pattern placeholder values [type: array of objects] (could not be deduced from an empty cell; row: 104, col: 'MessageArgs')"
        }
      },
      "telemetries": []
    }
  },
  {
    "index": 105,
    "SR #": "NVSwitch_19",
    "deduced_event_info": {
      "event": "ERR_HW_NVLIPT",
      "device_type": "NVSWITCH",
      "event_trigger": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')]",
      "accessor": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')] (could not be deduced from an empty cell; row: 105, col: 'GPUOOB Property/OOB API')",
      "severity": "TODO: Severity level [type: string] (could not be deduced from an empty cell; row: 105, col: 'Severity')",
      "resolution": "Check NVLink status and error counts\nCheck NVLink integrity",
      "trigger_count": "TODO: Trigger count [type: integer >= 0]",
      "event_counter_reset": {
        "type": "TODO: type [type: string]",
        "metadata": "TODO: metadata [type: string]"
      },
      "redfish": {
        "message_id": "TODO: Message Id [type: string] (could not be deduced from an empty cell; row: 105, col: 'MessageId')",
        "message_args": {
          "patterns": "TODO: Message patterns [type: array of strings] (could not be deduced from an empty cell; row: 105, col: 'MessageArgs')",
          "parameters": "TODO: Pattern placeholder values [type: array of objects] (could not be deduced from an empty cell; row: 105, col: 'MessageArgs')"
        }
      },
      "telemetries": []
    }
  },
  {
    "index": 106,
    "SR #": "NVSwitch_20",
    "deduced_event_info": {
      "event": "ERR_HW_NVLTLC",
      "device_type": "NVSWITCH",
      "event_trigger": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')]",
      "accessor": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')] (could not be deduced from an empty cell; row: 106, col: 'GPUOOB Property/OOB API')",
      "severity": "TODO: Severity level [type: string] (could not be deduced from an empty cell; row: 106, col: 'Severity')",
      "resolution": "Check NVLink status and error counts\nCheck NVLink integrity",
      "trigger_count": "TODO: Trigger count [type: integer >= 0]",
      "event_counter_reset": {
        "type": "TODO: type [type: string]",
        "metadata": "TODO: metadata [type: string]"
      },
      "redfish": {
        "message_id": "TODO: Message Id [type: string] (could not be deduced from an empty cell; row: 106, col: 'MessageId')",
        "message_args": {
          "patterns": "TODO: Message patterns [type: array of strings] (could not be deduced from an empty cell; row: 106, col: 'MessageArgs')",
          "parameters": "TODO: Pattern placeholder values [type: array of objects] (could not be deduced from an empty cell; row: 106, col: 'MessageArgs')"
        }
      },
      "telemetries": []
    }
  },
  {
    "index": 107,
    "SR #": "NVSwitch_21",
    "deduced_event_info": {
      "event": "ERR_HW_DLPL",
      "device_type": "NVSWITCH",
      "event_trigger": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')]",
      "accessor": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')] (could not be deduced from an empty cell; row: 107, col: 'GPUOOB Property/OOB API')",
      "severity": "TODO: Severity level [type: string] (could not be deduced from an empty cell; row: 107, col: 'Severity')",
      "resolution": "Check NVLink status and error counts\nCheck NVLink integrity",
      "trigger_count": "TODO: Trigger count [type: integer >= 0]",
      "event_counter_reset": {
        "type": "TODO: type [type: string]",
        "metadata": "TODO: metadata [type: string]"
      },
      "redfish": {
        "message_id": "TODO: Message Id [type: string] (could not be deduced from an empty cell; row: 107, col: 'MessageId')",
        "message_args": {
          "patterns": "TODO: Message patterns [type: array of strings] (could not be deduced from an empty cell; row: 107, col: 'MessageArgs')",
          "parameters": "TODO: Pattern placeholder values [type: array of objects] (could not be deduced from an empty cell; row: 107, col: 'MessageArgs')"
        }
      },
      "telemetries": []
    }
  },
  {
    "index": 108,
    "SR #": "NVSwitch_22",
    "deduced_event_info": {
      "event": "ERR_HW_MINION",
      "device_type": "NVSWITCH",
      "event_trigger": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')]",
      "accessor": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')] (could not be deduced from an empty cell; row: 108, col: 'GPUOOB Property/OOB API')",
      "severity": "TODO: Severity level [type: string] (could not be deduced from an empty cell; row: 108, col: 'Severity')",
      "resolution": "Chip reset",
      "trigger_count": "TODO: Trigger count [type: integer >= 0]",
      "event_counter_reset": {
        "type": "TODO: type [type: string]",
        "metadata": "TODO: metadata [type: string]"
      },
      "redfish": {
        "message_id": "TODO: Message Id [type: string] (could not be deduced from an empty cell; row: 108, col: 'MessageId')",
        "message_args": {
          "patterns": "TODO: Message patterns [type: array of strings] (could not be deduced from an empty cell; row: 108, col: 'MessageArgs')",
          "parameters": "TODO: Pattern placeholder values [type: array of objects] (could not be deduced from an empty cell; row: 108, col: 'MessageArgs')"
        }
      },
      "telemetries": []
    }
  },
  {
    "index": 109,
    "SR #": "NVSwitch_23",
    "deduced_event_info": {
      "event": "ERR_HW_NXBAR",
      "device_type": "NVSWITCH",
      "event_trigger": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')]",
      "accessor": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')] (could not be deduced from an empty cell; row: 109, col: 'GPUOOB Property/OOB API')",
      "severity": "TODO: Severity level [type: string] (could not be deduced from an empty cell; row: 109, col: 'Severity')",
      "resolution": "Fatal error requiring chip reset",
      "trigger_count": "TODO: Trigger count [type: integer >= 0]",
      "event_counter_reset": {
        "type": "TODO: type [type: string]",
        "metadata": "TODO: metadata [type: string]"
      },
      "redfish": {
        "message_id": "TODO: Message Id [type: string] (could not be deduced from an empty cell; row: 109, col: 'MessageId')",
        "message_args": {
          "patterns": "TODO: Message patterns [type: array of strings] (could not be deduced from an empty cell; row: 109, col: 'MessageArgs')",
          "parameters": "TODO: Pattern placeholder values [type: array of objects] (could not be deduced from an empty cell; row: 109, col: 'MessageArgs')"
        }
      },
      "telemetries": []
    }
  },
  {
    "index": 110,
    "SR #": "NVSwitch_24",
    "deduced_event_info": {
      "event": "ERR_HW_NPORT_SOURCETRACK",
      "device_type": "NVSWITCH",
      "event_trigger": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')]",
      "accessor": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')] (could not be deduced from an empty cell; row: 110, col: 'GPUOOB Property/OOB API')",
      "severity": "TODO: Severity level [type: string] (could not be deduced from an empty cell; row: 110, col: 'Severity')",
      "resolution": "TODO: Resolution description [type: string] (could not be deduced from an empty cell; row: 110, col: 'Recovery')",
      "trigger_count": "TODO: Trigger count [type: integer >= 0]",
      "event_counter_reset": {
        "type": "TODO: type [type: string]",
        "metadata": "TODO: metadata [type: string]"
      },
      "redfish": {
        "message_id": "TODO: Message Id [type: string] (could not be deduced from an empty cell; row: 110, col: 'MessageId')",
        "message_args": {
          "patterns": "TODO: Message patterns [type: array of strings] (could not be deduced from an empty cell; row: 110, col: 'MessageArgs')",
          "parameters": "TODO: Pattern placeholder values [type: array of objects] (could not be deduced from an empty cell; row: 110, col: 'MessageArgs')"
        }
      },
      "telemetries": []
    }
  },
  {
    "index": 111,
    "SR #": "NVSwitch_25",
    "deduced_event_info": {
      "event": "ERR_HW_NVLIPT_LNK",
      "device_type": "NVSWITCH",
      "event_trigger": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')]",
      "accessor": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')] (could not be deduced from an empty cell; row: 111, col: 'GPUOOB Property/OOB API')",
      "severity": "TODO: Severity level [type: string] (could not be deduced from an empty cell; row: 111, col: 'Severity')",
      "resolution": "TODO: Resolution description [type: string] (could not be deduced from an empty cell; row: 111, col: 'Recovery')",
      "trigger_count": "TODO: Trigger count [type: integer >= 0]",
      "event_counter_reset": {
        "type": "TODO: type [type: string]",
        "metadata": "TODO: metadata [type: string]"
      },
      "redfish": {
        "message_id": "TODO: Message Id [type: string] (could not be deduced from an empty cell; row: 111, col: 'MessageId')",
        "message_args": {
          "patterns": "TODO: Message patterns [type: array of strings] (could not be deduced from an empty cell; row: 111, col: 'MessageArgs')",
          "parameters": "TODO: Pattern placeholder values [type: array of objects] (could not be deduced from an empty cell; row: 111, col: 'MessageArgs')"
        }
      },
      "telemetries": []
    }
  },
  {
    "index": 112,
    "SR #": "NVSwitch_26",
    "deduced_event_info": {
      "event": "ERR_HW_SOE",
      "device_type": "NVSWITCH",
      "event_trigger": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')]",
      "accessor": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')] (could not be deduced from an empty cell; row: 112, col: 'GPUOOB Property/OOB API')",
      "severity": "TODO: Severity level [type: string] (could not be deduced from an empty cell; row: 112, col: 'Severity')",
      "resolution": "Chip reset",
      "trigger_count": "TODO: Trigger count [type: integer >= 0]",
      "event_counter_reset": {
        "type": "TODO: type [type: string]",
        "metadata": "TODO: metadata [type: string]"
      },
      "redfish": {
        "message_id": "TODO: Message Id [type: string] (could not be deduced from an empty cell; row: 112, col: 'MessageId')",
        "message_args": {
          "patterns": "TODO: Message patterns [type: array of strings] (could not be deduced from an empty cell; row: 112, col: 'MessageArgs')",
          "parameters": "TODO: Pattern placeholder values [type: array of objects] (could not be deduced from an empty cell; row: 112, col: 'MessageArgs')"
        }
      },
      "telemetries": []
    }
  },
  {
    "index": 113,
    "SR #": "NVSwitch_27",
    "deduced_event_info": {
      "event": "ERR_HW_CCI",
      "device_type": "NVSWITCH",
      "event_trigger": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')]",
      "accessor": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')] (could not be deduced from an empty cell; row: 113, col: 'GPUOOB Property/OOB API')",
      "severity": "TODO: Severity level [type: string] (could not be deduced from an empty cell; row: 113, col: 'Severity')",
      "resolution": "Check cable integrity",
      "trigger_count": "TODO: Trigger count [type: integer >= 0]",
      "event_counter_reset": {
        "type": "TODO: type [type: string]",
        "metadata": "TODO: metadata [type: string]"
      },
      "redfish": {
        "message_id": "TODO: Message Id [type: string] (could not be deduced from an empty cell; row: 113, col: 'MessageId')",
        "message_args": {
          "patterns": "TODO: Message patterns [type: array of strings] (could not be deduced from an empty cell; row: 113, col: 'MessageArgs')",
          "parameters": "TODO: Pattern placeholder values [type: array of objects] (could not be deduced from an empty cell; row: 113, col: 'MessageArgs')"
        }
      },
      "telemetries": []
    }
  },
  {
    "index": 114,
    "SR #": "NVSwitch_28",
    "deduced_event_info": {
      "event": "ERR_HW_NPORT_MULTICASTTSTATE",
      "device_type": "NVSWITCH",
      "event_trigger": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')]",
      "accessor": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')] (could not be deduced from an empty cell; row: 114, col: 'GPUOOB Property/OOB API')",
      "severity": "TODO: Severity level [type: string] (could not be deduced from an empty cell; row: 114, col: 'Severity')",
      "resolution": "TODO: Resolution description [type: string] (could not be deduced from an empty cell; row: 114, col: 'Recovery')",
      "trigger_count": "TODO: Trigger count [type: integer >= 0]",
      "event_counter_reset": {
        "type": "TODO: type [type: string]",
        "metadata": "TODO: metadata [type: string]"
      },
      "redfish": {
        "message_id": "TODO: Message Id [type: string] (could not be deduced from an empty cell; row: 114, col: 'MessageId')",
        "message_args": {
          "patterns": "TODO: Message patterns [type: array of strings] (could not be deduced from an empty cell; row: 114, col: 'MessageArgs')",
          "parameters": "TODO: Pattern placeholder values [type: array of objects] (could not be deduced from an empty cell; row: 114, col: 'MessageArgs')"
        }
      },
      "telemetries": []
    }
  },
  {
    "index": 115,
    "SR #": "NVSwitch_29",
    "deduced_event_info": {
      "event": "ERR_HW_NPORT_REDUCTIONTSTATE",
      "device_type": "NVSWITCH",
      "event_trigger": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')]",
      "accessor": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')] (could not be deduced from an empty cell; row: 115, col: 'GPUOOB Property/OOB API')",
      "severity": "TODO: Severity level [type: string] (could not be deduced from an empty cell; row: 115, col: 'Severity')",
      "resolution": "TODO: Resolution description [type: string] (could not be deduced from an empty cell; row: 115, col: 'Recovery')",
      "trigger_count": "TODO: Trigger count [type: integer >= 0]",
      "event_counter_reset": {
        "type": "TODO: type [type: string]",
        "metadata": "TODO: metadata [type: string]"
      },
      "redfish": {
        "message_id": "TODO: Message Id [type: string] (could not be deduced from an empty cell; row: 115, col: 'MessageId')",
        "message_args": {
          "patterns": "TODO: Message patterns [type: array of strings] (could not be deduced from an empty cell; row: 115, col: 'MessageArgs')",
          "parameters": "TODO: Pattern placeholder values [type: array of objects] (could not be deduced from an empty cell; row: 115, col: 'MessageArgs')"
        }
      },
      "telemetries": []
    }
  },
  {
    "index": 116,
    "SR #": "Thermal_1",
    "deduced_event_info": {
      "event": "Over Temp",
      "device_type": "GPU[0-7]",
      "event_trigger": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')]",
      "accessor": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')] (could not be deduced from an empty cell; row: 116, col: 'GPUOOB Property/OOB API')",
      "severity": "Critical",
      "resolution": "Power off the BaseBoard within 1 second, and GPU will shutdown autonomously. Check thermal environmental to ensure the GPU operates under UpperFatal threshold and power cycle the Baseboard to recover.",
      "trigger_count": "TODO: Trigger count [type: integer >= 0]",
      "event_counter_reset": {
        "type": "TODO: type [type: string]",
        "metadata": "TODO: metadata [type: string]"
      },
      "redfish": {
        "message_id": "ResourceEvent.1.0.ResourceErrorThresholdExceeded",
        "message_args": {
          "patterns": [
            "{GPUId} Temperature",
            "{UpperFatal Threshold}"
          ],
          "parameters": [
            {
              "type": "DIRECT",
              "field": "CurrentDeviceName"
            },
            "TODO: Value accessor [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')] (could not be deduced from the cell; cell value: '[\"{GPUId} Temperature\", \"{UpperFatal Threshold}\"]'; row: 116, col: 'MessageArgs')"
          ]
        }
      },
      "telemetries": [
        "TODO: '{GPUId} Temperature' [type: object] (row: 116, col: 'AdditionalData')",
        "TODO: '{GPUId} Thermal Parameters' [type: object] (row: 116, col: 'AdditionalData')"
      ]
    }
  },
  {
    "index": 117,
    "SR #": "Thermal_2",
    "deduced_event_info": {
      "event": "Thermal Warning",
      "device_type": "GPU",
      "event_trigger": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')]",
      "accessor": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')] (could not be deduced from an empty cell; row: 117, col: 'GPUOOB Property/OOB API')",
      "severity": "Warning",
      "resolution": "Increase the BaseBoard cooling and check thermal environmental to ensure the GPU operates under UpperCritical threshold.",
      "trigger_count": "TODO: Trigger count [type: integer >= 0]",
      "event_counter_reset": {
        "type": "TODO: type [type: string]",
        "metadata": "TODO: metadata [type: string]"
      },
      "redfish": {
        "message_id": "ResourceEvent.1.0.ResourceWaringThresholdExceeded",
        "message_args": {
          "patterns": [
            "{GPUId} Temperature",
            "{UpperCritical Threshold}"
          ],
          "parameters": [
            {
              "type": "DIRECT",
              "field": "CurrentDeviceName"
            },
            "TODO: Value accessor [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')] (could not be deduced from the cell; cell value: '[\"{GPUId} Temperature\", \"{UpperCritical Threshold}\"]'; row: 117, col: 'MessageArgs')"
          ]
        }
      },
      "telemetries": [
        "TODO: '{GPUId} Temperature' [type: object] (row: 117, col: 'AdditionalData')",
        "TODO: '{GPUId} Thermal Parameters' [type: object] (row: 117, col: 'AdditionalData')"
      ]
    }
  },
  {
    "index": 118,
    "SR #": "Thermal_3",
    "deduced_event_info": {
      "event": "Over Temp",
      "device_type": "Retimer[0-3, 4-7]",
      "event_trigger": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')]",
      "accessor": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')] (could not be deduced from an empty cell; row: 118, col: 'GPUOOB Property/OOB API')",
      "severity": "Critical",
      "resolution": "Power off the BaseBoard within 1 second, and the Retimer will be held in reset. Check thermal environmental to ensure the Retimer operates under UpperFatal threshold and power cycle the BaseBoard to recover.",
      "trigger_count": "TODO: Trigger count [type: integer >= 0]",
      "event_counter_reset": {
        "type": "TODO: type [type: string]",
        "metadata": "TODO: metadata [type: string]"
      },
      "redfish": {
        "message_id": "ResourceEvent.1.0.ResourceErrorThresholdExceeded",
        "message_args": {
          "patterns": [
            "{PCIeRetimerId} Temperature",
            "{UpperFatal Threshold}"
          ],
          "parameters": [
            {
              "type": "DIRECT",
              "field": "CurrentDeviceName"
            },
            "TODO: Value accessor [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')] (could not be deduced from the cell; cell value: '[\"{PCIeRetimerId} Temperature\", \"{UpperFatal Threshold}\"]'; row: 118, col: 'MessageArgs')"
          ]
        }
      },
      "telemetries": [
        "TODO: '{PCIeRetimerId} Temperature' [type: object] (row: 118, col: 'AdditionalData')",
        "TODO: '{PCIeRetimerId} Thermal Parameters' [type: object] (row: 118, col: 'AdditionalData')"
      ]
    }
  },
  {
    "index": 119,
    "SR #": "Thermal_4",
    "deduced_event_info": {
      "event": "Over Temp",
      "device_type": "NVSwitch[0-3]",
      "event_trigger": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')]",
      "accessor": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')] (could not be deduced from an empty cell; row: 119, col: 'GPUOOB Property/OOB API')",
      "severity": "Critical",
      "resolution": "Power off the BaseBoard within 1 second, the NVSwitch will be held in reset. Check thermal environmental to ensure the NVSwitch operates under UpperFatal threshold and power cycle the BaseBoard to recover.",
      "trigger_count": "TODO: Trigger count [type: integer >= 0]",
      "event_counter_reset": {
        "type": "TODO: type [type: string]",
        "metadata": "TODO: metadata [type: string]"
      },
      "redfish": {
        "message_id": "ResourceEvent.1.0.ResourceErrorThresholdExceeded",
        "message_args": {
          "patterns": [
            "{NVSwitchId} Temperature",
            "{UpperFatal Threshold}"
          ],
          "parameters": [
            {
              "type": "DIRECT",
              "field": "CurrentDeviceName"
            },
            "TODO: Value accessor [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')] (could not be deduced from the cell; cell value: '[\"{NVSwitchId} Temperature\", \"{UpperFatal Threshold}\"]'; row: 119, col: 'MessageArgs')"
          ]
        }
      },
      "telemetries": [
        "TODO: '{NVSwitchId} Temperature' [type: object] (row: 119, col: 'AdditionalData')",
        "TODO: '{NVSwitchId} Thermal Parameters' [type: object] (row: 119, col: 'AdditionalData')"
      ]
    }
  },
  {
    "index": 120,
    "SR #": "Thermal_5",
    "deduced_event_info": {
      "event": "Thermal warning",
      "device_type": "NVSwitch[0-3]",
      "event_trigger": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')]",
      "accessor": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')] (could not be deduced from an empty cell; row: 120, col: 'GPUOOB Property/OOB API')",
      "severity": "Warning",
      "resolution": "Increase the BaseBoard cooling and check thermal environmental to ensure the NVSwitch operates under UpperCritical threshold.",
      "trigger_count": "TODO: Trigger count [type: integer >= 0]",
      "event_counter_reset": {
        "type": "TODO: type [type: string]",
        "metadata": "TODO: metadata [type: string]"
      },
      "redfish": {
        "message_id": "ResourceEvent.1.0.ResourceWaringThresholdExceeded",
        "message_args": {
          "patterns": [
            "{NVSwitchId} Temperature",
            "{UpperCritical Threshold}"
          ],
          "parameters": [
            {
              "type": "DIRECT",
              "field": "CurrentDeviceName"
            },
            "TODO: Value accessor [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')] (could not be deduced from the cell; cell value: '[\"{NVSwitchId} Temperature\", \"{UpperCritical Threshold}\"]'; row: 120, col: 'MessageArgs')"
          ]
        }
      },
      "telemetries": [
        "TODO: '{NVSwitchId} Temperature' [type: object] (row: 120, col: 'AdditionalData')",
        "TODO: '{NVSwitchId} Thermal Parameters' [type: object] (row: 120, col: 'AdditionalData')"
      ]
    }
  },
  {
    "index": 121,
    "SR #": "Thermal_6",
    "deduced_event_info": {
      "event": "Over Temp",
      "device_type": "PCIe Switch",
      "event_trigger": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')]",
      "accessor": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')] (could not be deduced from an empty cell; row: 121, col: 'GPUOOB Property/OOB API')",
      "severity": "Critical",
      "resolution": "Power off the BaseBoard within 1 second, the PCIe Switch will be held in reset. Check thermal environmental to ensure the PCIe Switch operates under UpperFatal threshold and power cycle the BaseBoard to recover.",
      "trigger_count": "TODO: Trigger count [type: integer >= 0]",
      "event_counter_reset": {
        "type": "TODO: type [type: string]",
        "metadata": "TODO: metadata [type: string]"
      },
      "redfish": {
        "message_id": "ResourceEvent.1.0.ResourceErrorThresholdExceeded",
        "message_args": {
          "patterns": [
            "{PCIeSwitchId} Temperature",
            "{UpperFatal Threshold}"
          ],
          "parameters": [
            {
              "type": "DIRECT",
              "field": "CurrentDeviceName"
            },
            "TODO: Value accessor [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')] (could not be deduced from the cell; cell value: '[\"{PCIeSwitchId} Temperature\", \"{UpperFatal Threshold}\"]'; row: 121, col: 'MessageArgs')"
          ]
        }
      },
      "telemetries": [
        "TODO: '{PCIeSwitchId} Temperature' [type: object] (row: 121, col: 'AdditionalData')",
        "TODO: '{PCIeSwitchId} Thermal Parameters' [type: object] (row: 121, col: 'AdditionalData')"
      ]
    }
  },
  {
    "index": 122,
    "SR #": "Thermal_7",
    "deduced_event_info": {
      "event": "Over Temp",
      "device_type": "FPGA",
      "event_trigger": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')]",
      "accessor": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')] (could not be deduced from an empty cell; row: 122, col: 'GPUOOB Property/OOB API')",
      "severity": "Critical",
      "resolution": "Power off the BaseBoard within 1 second. Check thermal environmental to ensure FPGA operates under UpperFatal threshold and power cycle the BaseBoard to recover.",
      "trigger_count": "TODO: Trigger count [type: integer >= 0]",
      "event_counter_reset": {
        "type": "TODO: type [type: string]",
        "metadata": "TODO: metadata [type: string]"
      },
      "redfish": {
        "message_id": "ResourceEvent.1.0.ResourceErrorThresholdExceeded",
        "message_args": {
          "patterns": [
            "{FPGAId} Temperature",
            "{UpperFatal Threshold}"
          ],
          "parameters": [
            {
              "type": "DIRECT",
              "field": "CurrentDeviceName"
            },
            "TODO: Value accessor [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')] (could not be deduced from the cell; cell value: '[\"{FPGAId} Temperature\", \"{UpperFatal Threshold}\"]'; row: 122, col: 'MessageArgs')"
          ]
        }
      },
      "telemetries": []
    }
  },
  {
    "index": 123,
    "SR #": "Thermal_8",
    "deduced_event_info": {
      "event": "Thermal warning",
      "device_type": "FPGA",
      "event_trigger": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')]",
      "accessor": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')] (could not be deduced from an empty cell; row: 123, col: 'GPUOOB Property/OOB API')",
      "severity": "Warning",
      "resolution": "TODO: Resolution description [type: string] (could not be deduced from an empty cell; row: 123, col: 'Recovery')",
      "trigger_count": "TODO: Trigger count [type: integer >= 0]",
      "event_counter_reset": {
        "type": "TODO: type [type: string]",
        "metadata": "TODO: metadata [type: string]"
      },
      "redfish": {
        "message_id": "ResourceEvent.1.0.ResourceWaringThresholdExceeded",
        "message_args": {
          "patterns": [
            "{FPGAId} Temperature",
            "{UpperCritical Threshold}"
          ],
          "parameters": [
            {
              "type": "DIRECT",
              "field": "CurrentDeviceName"
            },
            "TODO: Value accessor [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')] (could not be deduced from the cell; cell value: '[\"{FPGAId} Temperature\", \"{UpperCritical Threshold}\"]'; row: 123, col: 'MessageArgs')"
          ]
        }
      },
      "telemetries": []
    }
  },
  {
    "index": 124,
    "SR #": "Thermal_9",
    "deduced_event_info": {
      "event": "OVERT Temp",
      "device_type": "HMC",
      "event_trigger": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')]",
      "accessor": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')] (could not be deduced from an empty cell; row: 124, col: 'GPUOOB Property/OOB API')",
      "severity": "Critical",
      "resolution": "Power off the BaseBoard within 1 second. Check thermal environmental to ensure HMC operates under UpperFatal threshold and power cycle the BaseBoard to recover.",
      "trigger_count": "TODO: Trigger count [type: integer >= 0]",
      "event_counter_reset": {
        "type": "TODO: type [type: string]",
        "metadata": "TODO: metadata [type: string]"
      },
      "redfish": {
        "message_id": "ResourceEvent.1.0.ResourceErrorThresholdExceeded",
        "message_args": {
          "patterns": [
            "{HMCId} Temperature",
            "{UpperFatal Threshold}"
          ],
          "parameters": [
            {
              "type": "DIRECT",
              "field": "CurrentDeviceName"
            },
            "TODO: Value accessor [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')] (could not be deduced from the cell; cell value: '[\"{HMCId} Temperature\", \"{UpperFatal Threshold}\"]'; row: 124, col: 'MessageArgs')"
          ]
        }
      },
      "telemetries": []
    }
  },
  {
    "index": 125,
    "SR #": "Thermal_10",
    "deduced_event_info": {
      "event": "PCB Thermal Warning",
      "device_type": "BaseBoard",
      "event_trigger": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')]",
      "accessor": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')] (could not be deduced from an empty cell; row: 125, col: 'GPUOOB Property/OOB API')",
      "severity": "Warning",
      "resolution": "Increase the BaseBoard cooling and check thermal environmental to ensure the PCB Temperature reading is under UpperCritical threshold.",
      "trigger_count": "TODO: Trigger count [type: integer >= 0]",
      "event_counter_reset": {
        "type": "TODO: type [type: string]",
        "metadata": "TODO: metadata [type: string]"
      },
      "redfish": {
        "message_id": "ResourceEvent.1.0.ResourceWaringThresholdExceeded",
        "message_args": {
          "patterns": [
            "{PCBTempId} Temperature",
            "{UpperCritical Threshold}"
          ],
          "parameters": [
            {
              "type": "DIRECT",
              "field": "CurrentDeviceName"
            },
            "TODO: Value accessor [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')] (could not be deduced from the cell; cell value: '[\"{PCBTempId} Temperature\", \"{UpperCritical Threshold}\"]'; row: 125, col: 'MessageArgs')"
          ]
        }
      },
      "telemetries": [
        "TODO: '{PCBTempId} Temperature' [type: object] (row: 125, col: 'AdditionalData')",
        "TODO: '{PCBTempId} Thermal Parameters' [type: object] (row: 125, col: 'AdditionalData')"
      ]
    }
  },
  {
    "index": 126,
    "SR #": "Thermal_11",
    "deduced_event_info": {
      "event": "TODO: Event name [type: string] (could not be deduced from the cell; cell value: 'Inlet Thermal Warning'; row: 126, col: 'Fault Scenario')",
      "device_type": "TODO: Device specification [type: string] (could not be deduced from the cell; cell value: 'Inlet Thermal Warning'; row: 126, col: 'Fault Scenario')",
      "event_trigger": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')]",
      "accessor": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')] (could not be deduced from an empty cell; row: 126, col: 'GPUOOB Property/OOB API')",
      "severity": "Warning",
      "resolution": "Increase the BaseBoard cooling and check thermal environmental to ensure Inlet Temperature reading is under UpperCritical threshold.",
      "trigger_count": "TODO: Trigger count [type: integer >= 0]",
      "event_counter_reset": {
        "type": "TODO: type [type: string]",
        "metadata": "TODO: metadata [type: string]"
      },
      "redfish": {
        "message_id": "ResourceEvent.1.0.ResourceWaringThresholdExceeded",
        "message_args": {
          "patterns": [
            "{InletTempId} Temperature",
            "{UpperCritical Threshold}"
          ],
          "parameters": [
            {
              "type": "DIRECT",
              "field": "CurrentDeviceName"
            },
            "TODO: Value accessor [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')] (could not be deduced from the cell; cell value: '[\"{InletTempId} Temperature\", \"{UpperCritical Threshold}\"]'; row: 126, col: 'MessageArgs')"
          ]
        }
      },
      "telemetries": [
        "TODO: '{InletTempId} Temperature' [type: object] (row: 126, col: 'AdditionalData')",
        "TODO: '{InletTempId} Thermal Parameters' [type: object] (row: 126, col: 'AdditionalData')"
      ]
    }
  },
  {
    "index": 127,
    "SR #": "HMC_1",
    "deduced_event_info": {
      "event": "OVERT Temp",
      "device_type": "HMC",
      "event_trigger": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')]",
      "accessor": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')] (could not be deduced from an empty cell; row: 127, col: 'GPUOOB Property/OOB API')",
      "severity": "Critical",
      "resolution": "Power off the BaseBoard within 1 second. Check thermal environmental to ensure HMC operates under UpperFatal threshold and power cycle the BaseBoard to recover.",
      "trigger_count": "TODO: Trigger count [type: integer >= 0]",
      "event_counter_reset": {
        "type": "TODO: type [type: string]",
        "metadata": "TODO: metadata [type: string]"
      },
      "redfish": {
        "message_id": "ResourceEvent.1.0.ResourceErrorThresholdExceeded",
        "message_args": {
          "patterns": [
            "{HMCId} Temperature",
            "{UpperFatal Threshold}"
          ],
          "parameters": [
            {
              "type": "DIRECT",
              "field": "CurrentDeviceName"
            },
            "TODO: Value accessor [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')] (could not be deduced from the cell; cell value: '[\"{HMCId} Temperature\", \"{UpperFatal Threshold}\"]'; row: 127, col: 'MessageArgs')"
          ]
        }
      },
      "telemetries": []
    }
  },
  {
    "index": 128,
    "SR #": "HMC_2",
    "deduced_event_info": {
      "event": "unavailable",
      "device_type": "HMC",
      "event_trigger": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')]",
      "accessor": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')] (could not be deduced from an empty cell; row: 128, col: 'GPUOOB Property/OOB API')",
      "severity": "TODO: Severity level [type: string] (could not be deduced from an empty cell; row: 128, col: 'Severity')",
      "resolution": "Power cycle the BaseBoard. If the problem persists, isolate the server for RMA evaluation.",
      "trigger_count": "TODO: Trigger count [type: integer >= 0]",
      "event_counter_reset": {
        "type": "TODO: type [type: string]",
        "metadata": "TODO: metadata [type: string]"
      },
      "redfish": {
        "message_id": "TODO: Message Id [type: string] (could not be deduced from an empty cell; row: 128, col: 'MessageId')",
        "message_args": {
          "patterns": "TODO: Message patterns [type: array of strings] (could not be deduced from an empty cell; row: 128, col: 'MessageArgs')",
          "parameters": "TODO: Pattern placeholder values [type: array of objects] (could not be deduced from an empty cell; row: 128, col: 'MessageArgs')"
        }
      },
      "telemetries": []
    }
  },
  {
    "index": 129,
    "SR #": "HMC_3",
    "deduced_event_info": {
      "event": "Redfish service not available",
      "device_type": "HMC",
      "event_trigger": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')]",
      "accessor": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')] (could not be deduced from an empty cell; row: 129, col: 'GPUOOB Property/OOB API')",
      "severity": "Critical",
      "resolution": "Power cycle the BaseBoard. If the problem persists, isolate the server for RMA evaluation.",
      "trigger_count": "TODO: Trigger count [type: integer >= 0]",
      "event_counter_reset": {
        "type": "TODO: type [type: string]",
        "metadata": "TODO: metadata [type: string]"
      },
      "redfish": {
        "message_id": "ResourceEvent.1.0.ResourceErrorsDetected",
        "message_args": {
          "patterns": [
            "{HMCId} Redfish",
            "Service Unavailable"
          ],
          "parameters": [
            {
              "type": "DIRECT",
              "field": "CurrentDeviceName"
            }
          ]
        }
      },
      "telemetries": []
    }
  },
  {
    "index": 130,
    "SR #": "HMC_4",
    "deduced_event_info": {
      "event": "USB network not accessible",
      "device_type": "HMC",
      "event_trigger": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')]",
      "accessor": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')] (could not be deduced from an empty cell; row: 130, col: 'GPUOOB Property/OOB API')",
      "severity": "TODO: Severity level [type: string] (could not be deduced from an empty cell; row: 130, col: 'Severity')",
      "resolution": "Power cycle the BaseBoard. If the problem persists, isolate the server for RMA evaluation.",
      "trigger_count": "TODO: Trigger count [type: integer >= 0]",
      "event_counter_reset": {
        "type": "TODO: type [type: string]",
        "metadata": "TODO: metadata [type: string]"
      },
      "redfish": {
        "message_id": "TODO: Message Id [type: string] (could not be deduced from an empty cell; row: 130, col: 'MessageId')",
        "message_args": {
          "patterns": "TODO: Message patterns [type: array of strings] (could not be deduced from an empty cell; row: 130, col: 'MessageArgs')",
          "parameters": "TODO: Pattern placeholder values [type: array of objects] (could not be deduced from an empty cell; row: 130, col: 'MessageArgs')"
        }
      },
      "telemetries": []
    }
  },
  {
    "index": 131,
    "SR #": "HMC_5",
    "deduced_event_info": {
      "event": "USB connection not available",
      "device_type": "HMC",
      "event_trigger": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')]",
      "accessor": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')] (could not be deduced from an empty cell; row: 131, col: 'GPUOOB Property/OOB API')",
      "severity": "TODO: Severity level [type: string] (could not be deduced from an empty cell; row: 131, col: 'Severity')",
      "resolution": "Power cycle the BaseBoard. If the problem persists, isolate the server for RMA evaluation.",
      "trigger_count": "TODO: Trigger count [type: integer >= 0]",
      "event_counter_reset": {
        "type": "TODO: type [type: string]",
        "metadata": "TODO: metadata [type: string]"
      },
      "redfish": {
        "message_id": "TODO: Message Id [type: string] (could not be deduced from an empty cell; row: 131, col: 'MessageId')",
        "message_args": {
          "patterns": "TODO: Message patterns [type: array of strings] (could not be deduced from an empty cell; row: 131, col: 'MessageArgs')",
          "parameters": "TODO: Pattern placeholder values [type: array of objects] (could not be deduced from an empty cell; row: 131, col: 'MessageArgs')"
        }
      },
      "telemetries": []
    }
  },
  {
    "index": 132,
    "SR #": "HMC_6",
    "deduced_event_info": {
      "event": "not ready",
      "device_type": "HMC",
      "event_trigger": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')]",
      "accessor": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')] (could not be deduced from an empty cell; row: 132, col: 'GPUOOB Property/OOB API')",
      "severity": "TODO: Severity level [type: string] (could not be deduced from an empty cell; row: 132, col: 'Severity')",
      "resolution": "Power cycle the BaseBoard. If the problem persists, isolate the server for RMA evaluation.",
      "trigger_count": "TODO: Trigger count [type: integer >= 0]",
      "event_counter_reset": {
        "type": "TODO: type [type: string]",
        "metadata": "TODO: metadata [type: string]"
      },
      "redfish": {
        "message_id": "TODO: Message Id [type: string] (could not be deduced from an empty cell; row: 132, col: 'MessageId')",
        "message_args": {
          "patterns": "TODO: Message patterns [type: array of strings] (could not be deduced from an empty cell; row: 132, col: 'MessageArgs')",
          "parameters": "TODO: Pattern placeholder values [type: array of objects] (could not be deduced from an empty cell; row: 132, col: 'MessageArgs')"
        }
      },
      "telemetries": []
    }
  },
  {
    "index": 133,
    "SR #": "HMC_7",
    "deduced_event_info": {
      "event": "SMBPBI Fencing state change",
      "device_type": "HMC",
      "event_trigger": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')]",
      "accessor": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')] (could not be deduced from an empty cell; row: 133, col: 'GPUOOB Property/OOB API')",
      "severity": "Warning",
      "resolution": "Controlled by Host BMC or a power cycle of baseboard would re-enable SMBPBI access privilege to HMC",
      "trigger_count": "TODO: Trigger count [type: integer >= 0]",
      "event_counter_reset": {
        "type": "TODO: type [type: string]",
        "metadata": "TODO: metadata [type: string]"
      },
      "redfish": {
        "message_id": "ResourceEvent.1.0.ResourceErrorsDetected",
        "message_args": {
          "patterns": [
            "{HMCId} SMBPBI",
            "Fencing Privilege Disabled"
          ],
          "parameters": [
            {
              "type": "DIRECT",
              "field": "CurrentDeviceName"
            }
          ]
        }
      },
      "telemetries": []
    }
  },
  {
    "index": 134,
    "SR #": "HMC_8",
    "deduced_event_info": {
      "event": "SMBPBI Failover to Redundant Interface",
      "device_type": "HMC",
      "event_trigger": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')]",
      "accessor": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')] (could not be deduced from an empty cell; row: 134, col: 'GPUOOB Property/OOB API')",
      "severity": "Critical",
      "resolution": "Power cycle the BaseBoard. If the problem persists, isolate the server for RMA evaluation.",
      "trigger_count": "TODO: Trigger count [type: integer >= 0]",
      "event_counter_reset": {
        "type": "TODO: type [type: string]",
        "metadata": "TODO: metadata [type: string]"
      },
      "redfish": {
        "message_id": "ResourceEvent.1.0.ResourceErrorsDetected",
        "message_args": {
          "patterns": [
            "{HMCId} SMBPBI",
            "Failover to Redundant Interface(i2c)"
          ],
          "parameters": [
            {
              "type": "DIRECT",
              "field": "CurrentDeviceName"
            }
          ]
        }
      },
      "telemetries": []
    }
  },
  {
    "index": 135,
    "SR #": "PEXSW_1",
    "deduced_event_info": {
      "event": "PCIe link Error",
      "device_type": "PCIe Switch",
      "event_trigger": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')]",
      "accessor": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')] (could not be deduced from an empty cell; row: 135, col: 'GPUOOB Property/OOB API')",
      "severity": "Critical",
      "resolution": "Reset the link. If problem persists, isolate the server for RMA evaluation.",
      "trigger_count": "TODO: Trigger count [type: integer >= 0]",
      "event_counter_reset": {
        "type": "TODO: type [type: string]",
        "metadata": "TODO: metadata [type: string]"
      },
      "redfish": {
        "message_id": "ResourceEvent.1.0.ResourceErrorsDetected",
        "message_args": {
          "patterns": [
            "{PCIeSwitchId} PCIe",
            "{PCIe Uncorrectable Error}"
          ],
          "parameters": [
            {
              "type": "DIRECT",
              "field": "CurrentDeviceName"
            },
            "TODO: Value accessor [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')] (could not be deduced from the cell; cell value: '[\"{PCIeSwitchId} PCIe\", \"{PCIe Uncorrectable Error}\"]'; row: 135, col: 'MessageArgs')"
          ]
        }
      },
      "telemetries": [
        "TODO: '{PCIeSwitchId} PCIe non-fatal error counts' [type: object] (row: 135, col: 'AdditionalData')",
        "TODO: '{PCIeSwitchId} PCIe fatal error counts' [type: object] (row: 135, col: 'AdditionalData')"
      ]
    }
  },
  {
    "index": 136,
    "SR #": "PEXSW_2",
    "deduced_event_info": {
      "event": "PCIe link Goes down",
      "device_type": "PCIe Switch",
      "event_trigger": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')]",
      "accessor": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')] (could not be deduced from an empty cell; row: 136, col: 'GPUOOB Property/OOB API')",
      "severity": "Critical",
      "resolution": "No immediate recovery required. If this event occurs multiple times in a short period, check other PCIe error status for further diagnostics.",
      "trigger_count": "TODO: Trigger count [type: integer >= 0]",
      "event_counter_reset": {
        "type": "TODO: type [type: string]",
        "metadata": "TODO: metadata [type: string]"
      },
      "redfish": {
        "message_id": "ResourceEvent.1.0.ResourceErrorsDetected",
        "message_args": {
          "patterns": [
            "{PCIeSwitchId} PCIe",
            "LTSSM Link Down"
          ],
          "parameters": [
            {
              "type": "DIRECT",
              "field": "CurrentDeviceName"
            }
          ]
        }
      },
      "telemetries": [
        "TODO: '{PCIeSwitchId} PCIe link status' [type: object] (row: 136, col: 'AdditionalData')"
      ]
    }
  },
  {
    "index": 137,
    "SR #": "PEXSW_3",
    "deduced_event_info": {
      "event": "Over Temp",
      "device_type": "PCIe Switch",
      "event_trigger": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')]",
      "accessor": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')] (could not be deduced from an empty cell; row: 137, col: 'GPUOOB Property/OOB API')",
      "severity": "Critical",
      "resolution": "Power off the BaseBoard within 1 second, the PCIe Switch will be held in reset. Check thermal environmental to ensure the PCIe Switch operates under UpperFatal threshold and power cycle the BaseBoard to recover.",
      "trigger_count": "TODO: Trigger count [type: integer >= 0]",
      "event_counter_reset": {
        "type": "TODO: type [type: string]",
        "metadata": "TODO: metadata [type: string]"
      },
      "redfish": {
        "message_id": "ResourceEvent.1.0.ResourceErrorThresholdExceeded",
        "message_args": {
          "patterns": [
            "{PCIeSwitchId} Temperature",
            "{UpperFatal Threshold}"
          ],
          "parameters": [
            {
              "type": "DIRECT",
              "field": "CurrentDeviceName"
            },
            "TODO: Value accessor [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')] (could not be deduced from the cell; cell value: '[\"{PCIeSwitchId} Temperature\", \"{UpperFatal Threshold}\"]'; row: 137, col: 'MessageArgs')"
          ]
        }
      },
      "telemetries": [
        "TODO: '{PCIeSwitchId} Temperature' [type: object] (row: 137, col: 'AdditionalData')",
        "TODO: '{PCIeSwitchId} Thermal Parameters' [type: object] (row: 137, col: 'AdditionalData')"
      ]
    }
  },
  {
    "index": 138,
    "SR #": "PEXSW_4",
    "deduced_event_info": {
      "event": "TODO: Event name [type: string] (could not be deduced from the cell; cell value: 'PCIe AER status notification'; row: 138, col: 'Fault Scenario')",
      "device_type": "TODO: Device specification [type: string] (could not be deduced from the cell; cell value: 'PCIe AER status notification'; row: 138, col: 'Fault Scenario')",
      "event_trigger": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')]",
      "accessor": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')] (could not be deduced from an empty cell; row: 138, col: 'GPUOOB Property/OOB API')",
      "severity": "OK",
      "resolution": "No recovery required.",
      "trigger_count": "TODO: Trigger count [type: integer >= 0]",
      "event_counter_reset": {
        "type": "TODO: type [type: string]",
        "metadata": "TODO: metadata [type: string]"
      },
      "redfish": {
        "message_id": "ResourceEvent.1.0.ResourceErrorsDetected",
        "message_args": {
          "patterns": [
            "{PCIeSwitchId} PCIe",
            "{PCIe AER Notification}"
          ],
          "parameters": [
            {
              "type": "DIRECT",
              "field": "CurrentDeviceName"
            },
            "TODO: Value accessor [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')] (could not be deduced from the cell; cell value: '[\"{PCIeSwitchId} PCIe\", \"{PCIe AER Notification}\"]'; row: 138, col: 'MessageArgs')"
          ]
        }
      },
      "telemetries": [
        "TODO: '{PCIeSwitchId} PCIe non-fatal error counts' [type: object] (row: 138, col: 'AdditionalData')",
        "TODO: '{PCIeSwitchId} PCIe fatal error counts' [type: object] (row: 138, col: 'AdditionalData')"
      ]
    }
  },
  {
    "index": 139,
    "SR #": "PEXSW_5",
    "deduced_event_info": {
      "event": "TODO: Event name [type: string] (could not be deduced from the cell; cell value: 'Incorrect link width'; row: 139, col: 'Fault Scenario')",
      "device_type": "TODO: Device specification [type: string] (could not be deduced from the cell; cell value: 'Incorrect link width'; row: 139, col: 'Fault Scenario')",
      "event_trigger": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')]",
      "accessor": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')] (could not be deduced from an empty cell; row: 139, col: 'GPUOOB Property/OOB API')",
      "severity": "Critical",
      "resolution": "Reset the link. If problem persists, isolate the server for RMA evaluation.",
      "trigger_count": "TODO: Trigger count [type: integer >= 0]",
      "event_counter_reset": {
        "type": "TODO: type [type: string]",
        "metadata": "TODO: metadata [type: string]"
      },
      "redfish": {
        "message_id": "ResourceEvent.1.0.ResourceErrorsDetected",
        "message_args": {
          "patterns": [
            "{PCIeSwitchId} PCIe",
            "Abnormal Width Change"
          ],
          "parameters": [
            {
              "type": "DIRECT",
              "field": "CurrentDeviceName"
            }
          ]
        }
      },
      "telemetries": [
        "TODO: '{PCIeSwitchId} PCIe link width' [type: object] (row: 139, col: 'AdditionalData')"
      ]
    }
  },
  {
    "index": 140,
    "SR #": "PEXSW_6",
    "deduced_event_info": {
      "event": "TODO: Event name [type: string] (could not be deduced from the cell; cell value: 'Incorrect link speed'; row: 140, col: 'Fault Scenario')",
      "device_type": "TODO: Device specification [type: string] (could not be deduced from the cell; cell value: 'Incorrect link speed'; row: 140, col: 'Fault Scenario')",
      "event_trigger": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')]",
      "accessor": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')] (could not be deduced from an empty cell; row: 140, col: 'GPUOOB Property/OOB API')",
      "severity": "Critical",
      "resolution": "Reset the link. If problem persists, isolate the server for RMA evaluation.",
      "trigger_count": "TODO: Trigger count [type: integer >= 0]",
      "event_counter_reset": {
        "type": "TODO: type [type: string]",
        "metadata": "TODO: metadata [type: string]"
      },
      "redfish": {
        "message_id": "ResourceEvent.1.0.ResourceErrorsDetected",
        "message_args": {
          "patterns": [
            "{PCIeSwitchId} PCIe",
            "Abnormal Speed Change"
          ],
          "parameters": [
            {
              "type": "DIRECT",
              "field": "CurrentDeviceName"
            }
          ]
        }
      },
      "telemetries": [
        "TODO: '{PCIeSwitchId} PCIe link speed' [type: object] (row: 140, col: 'AdditionalData')",
        "TODO: '{PCIeSwitchId} PCIe requested link speed' [type: object] (row: 140, col: 'AdditionalData')"
      ]
    }
  },
  {
    "index": 141,
    "SR #": "FPGA_1",
    "deduced_event_info": {
      "event": "Temp Alert (FPGA_LM95233_0_TEMP_CRIT(1))",
      "device_type": "FPGA",
      "event_trigger": {
        "type": "DBUS",
        "object": "/xyz/openbmc_project/GpioStatusHandler",
        "interface": "xyz.openbmc_project.GpioStatus",
        "property": "I2C4_ALERT",
        "check": {
          "equal": "false"
        }
      },
      "accessor": {
        "type": "DeviceCoreAPI",
        "property": "Inlet Sensor #1 is for FPGA Temp monitoring. fpga.thermal.alert Opcode B2, Arg1: 83 -> Bit 6 fpga.thermal.alert",
        "check": "TODO: Value checking definition [type: object]"
      },
      "severity": "Critical",
      "resolution": "Power off the BaseBoard within 1 second. Check thermal environmental to ensure FPGA operates under UpperFatal threshold and power cycle the BaseBoard to recover.",
      "trigger_count": "TODO: Trigger count [type: integer >= 0]",
      "event_counter_reset": {
        "type": "TODO: type [type: string]",
        "metadata": "TODO: metadata [type: string]"
      },
      "redfish": {
        "message_id": "ResourceEvent.1.0.ResourceErrorThresholdExceeded",
        "message_args": {
          "patterns": [
            "{FPGAId} Temperature",
            "{UpperFatal Threshold}"
          ],
          "parameters": [
            {
              "type": "DIRECT",
              "field": "CurrentDeviceName"
            },
            "TODO: Value accessor [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')] (could not be deduced from the cell; cell value: '[\"{FPGAId} Temperature\", \"{UpperFatal Threshold}\"]'; row: 141, col: 'MessageArgs')"
          ]
        }
      },
      "telemetries": [
        "TODO: '{FPGAId} Temperature' [type: object] (row: 141, col: 'AdditionalData')",
        "TODO: '{FPGAId} Thermal Parameter' [type: object] (row: 141, col: 'AdditionalData')"
      ]
    }
  },
  {
    "index": 142,
    "SR #": "FPGA_2",
    "deduced_event_info": {
      "event": "BMC PCIe Error",
      "device_type": "FPGA",
      "event_trigger": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')]",
      "accessor": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')] (could not be deduced from an empty cell; row: 142, col: 'GPUOOB Property/OOB API')",
      "severity": "Critical",
      "resolution": "Reset the link. If problem persists, isolate the server for RMA evaluation.",
      "trigger_count": "TODO: Trigger count [type: integer >= 0]",
      "event_counter_reset": {
        "type": "TODO: type [type: string]",
        "metadata": "TODO: metadata [type: string]"
      },
      "redfish": {
        "message_id": "ResourceEvent.1.0.ResourceErrorsDetected",
        "message_args": {
          "patterns": [
            "{FPGAId} PCIe",
            "BMC {PCIe Uncorrectable Error}"
          ],
          "parameters": [
            {
              "type": "DIRECT",
              "field": "CurrentDeviceName"
            },
            "TODO: Value accessor [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')] (could not be deduced from the cell; cell value: '[\"{FPGAId} PCIe\", \"BMC {PCIe Uncorrectable Error}\"]'; row: 142, col: 'MessageArgs')"
          ]
        }
      },
      "telemetries": [
        "TODO: '{FPGAId} BMC PCIe non-fatal error counts' [type: object] (row: 142, col: 'AdditionalData')",
        "TODO: '{FPGAId} BMC PCIe fatal error counts' [type: object] (row: 142, col: 'AdditionalData')"
      ]
    }
  },
  {
    "index": 143,
    "SR #": "FPGA_3",
    "deduced_event_info": {
      "event": "HMC PCIe Error",
      "device_type": "FPGA",
      "event_trigger": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')]",
      "accessor": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')] (could not be deduced from an empty cell; row: 143, col: 'GPUOOB Property/OOB API')",
      "severity": "Critical",
      "resolution": "Reset the link. If problem persists, isolate the server for RMA evaluation.",
      "trigger_count": "TODO: Trigger count [type: integer >= 0]",
      "event_counter_reset": {
        "type": "TODO: type [type: string]",
        "metadata": "TODO: metadata [type: string]"
      },
      "redfish": {
        "message_id": "ResourceEvent.1.0.ResourceErrorsDetected",
        "message_args": {
          "patterns": [
            "{FPGAId} PCIe",
            "HMC {PCIe Uncorrectable Error}"
          ],
          "parameters": [
            {
              "type": "DIRECT",
              "field": "CurrentDeviceName"
            },
            "TODO: Value accessor [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')] (could not be deduced from the cell; cell value: '[\"{FPGAId} PCIe\", \"HMC {PCIe Uncorrectable Error}\"]'; row: 143, col: 'MessageArgs')"
          ]
        }
      },
      "telemetries": [
        "TODO: '{FPGAId} HMC PCIe non-fatal error counts' [type: object] (row: 143, col: 'AdditionalData')",
        "TODO: '{FPGAId} HMC PCIe fatal error counts' [type: object] (row: 143, col: 'AdditionalData')"
      ]
    }
  },
  {
    "index": 144,
    "SR #": "FPGA_4",
    "deduced_event_info": {
      "event": "Thermal warning",
      "device_type": "FPGA",
      "event_trigger": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')]",
      "accessor": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')] (could not be deduced from an empty cell; row: 144, col: 'GPUOOB Property/OOB API')",
      "severity": "Warning",
      "resolution": "TODO: Resolution description [type: string] (could not be deduced from an empty cell; row: 144, col: 'Recovery')",
      "trigger_count": "TODO: Trigger count [type: integer >= 0]",
      "event_counter_reset": {
        "type": "TODO: type [type: string]",
        "metadata": "TODO: metadata [type: string]"
      },
      "redfish": {
        "message_id": "ResourceEvent.1.0.ResourceErrorsDetected",
        "message_args": {
          "patterns": [
            "{FPGAId} Temp",
            "Warning"
          ],
          "parameters": [
            {
              "type": "DIRECT",
              "field": "CurrentDeviceName"
            }
          ]
        }
      },
      "telemetries": []
    }
  },
  {
    "index": 145,
    "SR #": "FPGA_5",
    "deduced_event_info": {
      "event": "OVERT alert",
      "device_type": "GPU",
      "event_trigger": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')]",
      "accessor": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')] (could not be deduced from an empty cell; row: 145, col: 'GPUOOB Property/OOB API')",
      "severity": "Critical",
      "resolution": "Power off the BaseBoard within 1 second, and GPU will shutdown autonomously. Check thermal environmental to ensure the GPU operates under UpperFatal threshold and power cycle the Baseboard to recover.",
      "trigger_count": "TODO: Trigger count [type: integer >= 0]",
      "event_counter_reset": {
        "type": "TODO: type [type: string]",
        "metadata": "TODO: metadata [type: string]"
      },
      "redfish": {
        "message_id": "ResourceEvent.1.0.ResourceErrorThresholdExceeded",
        "message_args": {
          "patterns": [
            "{GPUId} Temperature",
            "{UpperFatal Threshold}"
          ],
          "parameters": [
            {
              "type": "DIRECT",
              "field": "CurrentDeviceName"
            },
            "TODO: Value accessor [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')] (could not be deduced from the cell; cell value: '[\"{GPUId} Temperature\", \"{UpperFatal Threshold}\"]'; row: 145, col: 'MessageArgs')"
          ]
        }
      },
      "telemetries": [
        "TODO: '{GPUId} Temperature' [type: object] (row: 145, col: 'AdditionalData')",
        "TODO: '{GPUId} Thermal Parameters' [type: object] (row: 145, col: 'AdditionalData')"
      ]
    }
  },
  {
    "index": 146,
    "SR #": "FPGA_6",
    "deduced_event_info": {
      "event": "TODO: Event name [type: string] (could not be deduced from the cell; cell value: 'NVSW OVERT alert'; row: 146, col: 'Fault Scenario')",
      "device_type": "TODO: Device specification [type: string] (could not be deduced from the cell; cell value: 'NVSW OVERT alert'; row: 146, col: 'Fault Scenario')",
      "event_trigger": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')]",
      "accessor": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')] (could not be deduced from an empty cell; row: 146, col: 'GPUOOB Property/OOB API')",
      "severity": "Critical",
      "resolution": "Power off the BaseBoard within 1 second, the NVSwitch will be held in reset. Check thermal environmental to ensure the NVSwitch operates under UpperFatal threshold and power cycle the BaseBoard to recover.",
      "trigger_count": "TODO: Trigger count [type: integer >= 0]",
      "event_counter_reset": {
        "type": "TODO: type [type: string]",
        "metadata": "TODO: metadata [type: string]"
      },
      "redfish": {
        "message_id": "ResourceEvent.1.0.ResourceErrorThresholdExceeded",
        "message_args": {
          "patterns": [
            "{NVSwitchId} Temperature",
            "{UpperFatal Threshold}"
          ],
          "parameters": [
            {
              "type": "DIRECT",
              "field": "CurrentDeviceName"
            },
            "TODO: Value accessor [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')] (could not be deduced from the cell; cell value: '[\"{NVSwitchId} Temperature\", \"{UpperFatal Threshold}\"]'; row: 146, col: 'MessageArgs')"
          ]
        }
      },
      "telemetries": [
        "TODO: '{NVSwitchId} Temperature' [type: object] (row: 146, col: 'AdditionalData')",
        "TODO: '{NVSwitchId} Thermal Parameters' [type: object] (row: 146, col: 'AdditionalData')"
      ]
    }
  },
  {
    "index": 147,
    "SR #": "FPGA_7",
    "deduced_event_info": {
      "event": "TODO: Event name [type: string] (could not be deduced from the cell; cell value: 'PEXSW OVERT alert'; row: 147, col: 'Fault Scenario')",
      "device_type": "TODO: Device specification [type: string] (could not be deduced from the cell; cell value: 'PEXSW OVERT alert'; row: 147, col: 'Fault Scenario')",
      "event_trigger": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')]",
      "accessor": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')] (could not be deduced from an empty cell; row: 147, col: 'GPUOOB Property/OOB API')",
      "severity": "Critical",
      "resolution": "Power off the BaseBoard within 1 second, the PCIe Switch will be held in reset. Check thermal environmental to ensure the PCIe Switch operates under UpperFatal threshold and power cycle the BaseBoard to recover.",
      "trigger_count": "TODO: Trigger count [type: integer >= 0]",
      "event_counter_reset": {
        "type": "TODO: type [type: string]",
        "metadata": "TODO: metadata [type: string]"
      },
      "redfish": {
        "message_id": "ResourceEvent.1.0.ResourceErrorThresholdExceeded",
        "message_args": {
          "patterns": [
            "{PCIeSwitchId} Temperature",
            "{UpperFatal Threshold}"
          ],
          "parameters": [
            {
              "type": "DIRECT",
              "field": "CurrentDeviceName"
            },
            "TODO: Value accessor [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')] (could not be deduced from the cell; cell value: '[\"{PCIeSwitchId} Temperature\", \"{UpperFatal Threshold}\"]'; row: 147, col: 'MessageArgs')"
          ]
        }
      },
      "telemetries": [
        "TODO: '{PCIeSwitchId} Temperature' [type: object] (row: 147, col: 'AdditionalData')",
        "TODO: '{PCIeSwitchId} Thermal Parameters' [type: object] (row: 147, col: 'AdditionalData')"
      ]
    }
  },
  {
    "index": 148,
    "SR #": "FPGA_8",
    "deduced_event_info": {
      "event": "OVERT alert",
      "device_type": "Retimer",
      "event_trigger": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')]",
      "accessor": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')] (could not be deduced from an empty cell; row: 148, col: 'GPUOOB Property/OOB API')",
      "severity": "Critical",
      "resolution": "Power off the BaseBoard within 1 second, and the Retimer will be held in reset. Check thermal environmental to ensure the Retimer operates under UpperFatal threshold and power cycle the BaseBoard to recover.",
      "trigger_count": "TODO: Trigger count [type: integer >= 0]",
      "event_counter_reset": {
        "type": "TODO: type [type: string]",
        "metadata": "TODO: metadata [type: string]"
      },
      "redfish": {
        "message_id": "ResourceEvent.1.0.ResourceErrorThresholdExceeded",
        "message_args": {
          "patterns": [
            "{PCIeRetimerId} Temperature",
            "{UpperFatal Threshold}"
          ],
          "parameters": [
            {
              "type": "DIRECT",
              "field": "CurrentDeviceName"
            },
            "TODO: Value accessor [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')] (could not be deduced from the cell; cell value: '[\"{PCIeRetimerId} Temperature\", \"{UpperFatal Threshold}\"]'; row: 148, col: 'MessageArgs')"
          ]
        }
      },
      "telemetries": [
        "TODO: '{PCIeRetimerId} Temperature' [type: object] (row: 148, col: 'AdditionalData')",
        "TODO: '{PCIeRetimerId} Thermal Parameters' [type: object] (row: 148, col: 'AdditionalData')"
      ]
    }
  },
  {
    "index": 149,
    "SR #": "FPGA_9",
    "deduced_event_info": {
      "event": "TODO: Event name [type: string] (could not be deduced from the cell; cell value: 'CAR_COME OVERT alert'; row: 149, col: 'Fault Scenario')",
      "device_type": "TODO: Device specification [type: string] (could not be deduced from the cell; cell value: 'CAR_COME OVERT alert'; row: 149, col: 'Fault Scenario')",
      "event_trigger": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')]",
      "accessor": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')] (could not be deduced from an empty cell; row: 149, col: 'GPUOOB Property/OOB API')",
      "severity": "TODO: Severity level [type: string] (could not be deduced from an empty cell; row: 149, col: 'Severity')",
      "resolution": "TBD",
      "trigger_count": "TODO: Trigger count [type: integer >= 0]",
      "event_counter_reset": {
        "type": "TODO: type [type: string]",
        "metadata": "TODO: metadata [type: string]"
      },
      "redfish": {
        "message_id": "TODO: Message Id [type: string] (could not be deduced from an empty cell; row: 149, col: 'MessageId')",
        "message_args": {
          "patterns": "TODO: Message patterns [type: array of strings] (could not be deduced from an empty cell; row: 149, col: 'MessageArgs')",
          "parameters": "TODO: Pattern placeholder values [type: array of objects] (could not be deduced from an empty cell; row: 149, col: 'MessageArgs')"
        }
      },
      "telemetries": []
    }
  },
  {
    "index": 150,
    "SR #": "FPGA_10",
    "deduced_event_info": {
      "event": "OVERT alert",
      "device_type": "HMC",
      "event_trigger": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')]",
      "accessor": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')] (could not be deduced from an empty cell; row: 150, col: 'GPUOOB Property/OOB API')",
      "severity": "TODO: Severity level [type: string] (could not be deduced from an empty cell; row: 150, col: 'Severity')",
      "resolution": "Power off the BaseBoard within 1 second. Check thermal environmental to ensure HMC operates under UpperFatal threshold and power cycle the BaseBoard to recover.",
      "trigger_count": "TODO: Trigger count [type: integer >= 0]",
      "event_counter_reset": {
        "type": "TODO: type [type: string]",
        "metadata": "TODO: metadata [type: string]"
      },
      "redfish": {
        "message_id": "TODO: Message Id [type: string] (could not be deduced from an empty cell; row: 150, col: 'MessageId')",
        "message_args": {
          "patterns": "TODO: Message patterns [type: array of strings] (could not be deduced from an empty cell; row: 150, col: 'MessageArgs')",
          "parameters": "TODO: Pattern placeholder values [type: array of objects] (could not be deduced from an empty cell; row: 150, col: 'MessageArgs')"
        }
      },
      "telemetries": []
    }
  },
  {
    "index": 151,
    "SR #": "FPGA_11",
    "deduced_event_info": {
      "event": "Alert caused by PWR_GD state run time change",
      "device_type": "GPU",
      "event_trigger": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')]",
      "accessor": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')] (could not be deduced from an empty cell; row: 151, col: 'GPUOOB Property/OOB API')",
      "severity": "Crtical",
      "resolution": "Power cycle the BaseBoard. If the problem persists, isolate the server for RMA evaluation.",
      "trigger_count": "TODO: Trigger count [type: integer >= 0]",
      "event_counter_reset": {
        "type": "TODO: type [type: string]",
        "metadata": "TODO: metadata [type: string]"
      },
      "redfish": {
        "message_id": "ResourceEvent.1.0.ResourceErrorsDetected",
        "message_args": {
          "patterns": [
            "{GPUId} PowerGood",
            "Abnormal Power Change"
          ],
          "parameters": [
            {
              "type": "DIRECT",
              "field": "CurrentDeviceName"
            }
          ]
        }
      },
      "telemetries": [
        "TODO: '{GPUId} Power Status' [type: object] (row: 151, col: 'AdditionalData')"
      ]
    }
  },
  {
    "index": 152,
    "SR #": "FPGA_12",
    "deduced_event_info": {
      "event": "TODO: Event name [type: string] (could not be deduced from the cell; cell value: 'Alert caused by NVSW PWR_GD state run time change'; row: 152, col: 'Fault Scenario')",
      "device_type": "TODO: Device specification [type: string] (could not be deduced from the cell; cell value: 'Alert caused by NVSW PWR_GD state run time change'; row: 152, col: 'Fault Scenario')",
      "event_trigger": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')]",
      "accessor": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')] (could not be deduced from an empty cell; row: 152, col: 'GPUOOB Property/OOB API')",
      "severity": "Critical",
      "resolution": "Power cycle the BaseBoard. If the problem persists, isolate the server for RMA evaluation.",
      "trigger_count": "TODO: Trigger count [type: integer >= 0]",
      "event_counter_reset": {
        "type": "TODO: type [type: string]",
        "metadata": "TODO: metadata [type: string]"
      },
      "redfish": {
        "message_id": "ResourceEvent.1.0.ResourceErrorsDetected",
        "message_args": {
          "patterns": [
            "{NVSwitchId} PowerGood",
            "Abnormal Power Change"
          ],
          "parameters": [
            {
              "type": "DIRECT",
              "field": "CurrentDeviceName"
            }
          ]
        }
      },
      "telemetries": [
        "TODO: '{NVSwitchId} VDD Abnormal change' [type: object] (row: 152, col: 'AdditionalData')",
        "TODO: '{NVSwitchId} DVDD Abnormal change' [type: object] (row: 152, col: 'AdditionalData')",
        "TODO: '{NVSwitchId} HVDD Abnormal change' [type: object] (row: 152, col: 'AdditionalData')",
        "TODO: '{NVSwitchId} 1V8 Abnormal change' [type: object] (row: 152, col: 'AdditionalData')",
        "TODO: '{NVSwitchId} 3V3 Abnormal change' [type: object] (row: 152, col: 'AdditionalData')",
        "TODO: '{NVSwitchId} 5V Abnormal change' [type: object] (row: 152, col: 'AdditionalData')",
        "TODO: '{NVSwitchId} IBC Abnormal change' [type: object] (row: 152, col: 'AdditionalData')"
      ]
    }
  },
  {
    "index": 153,
    "SR #": "FPGA_13",
    "deduced_event_info": {
      "event": "Alert caused by PWR_GD state run time change",
      "device_type": "HSC",
      "event_trigger": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')]",
      "accessor": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')] (could not be deduced from an empty cell; row: 153, col: 'GPUOOB Property/OOB API')",
      "severity": "Critical",
      "resolution": "Power cycle the BaseBoard. If the problem persists, isolate the server for RMA evaluation.",
      "trigger_count": "TODO: Trigger count [type: integer >= 0]",
      "event_counter_reset": {
        "type": "TODO: type [type: string]",
        "metadata": "TODO: metadata [type: string]"
      },
      "redfish": {
        "message_id": "ResourceEvent.1.0.ResourceErrorsDetected",
        "message_args": {
          "patterns": [
            "{HSCId} PowerGood",
            "Abnormal Power Change"
          ],
          "parameters": [
            {
              "type": "DIRECT",
              "field": "CurrentDeviceName"
            }
          ]
        }
      },
      "telemetries": [
        "TODO: '{HSCId} detailed alert status' [type: object] (row: 153, col: 'AdditionalData')"
      ]
    }
  },
  {
    "index": 154,
    "SR #": "FPGA_14",
    "deduced_event_info": {
      "event": "TODO: Event name [type: string] (could not be deduced from the cell; cell value: 'Alert caused by SYS_VR PWR_GD state run time change'; row: 154, col: 'Fault Scenario')",
      "device_type": "TODO: Device specification [type: string] (could not be deduced from the cell; cell value: 'Alert caused by SYS_VR PWR_GD state run time change'; row: 154, col: 'Fault Scenario')",
      "event_trigger": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')]",
      "accessor": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')] (could not be deduced from an empty cell; row: 154, col: 'GPUOOB Property/OOB API')",
      "severity": "Crtical",
      "resolution": "Power cycle the BaseBoard. If the problem persists, isolate the server for RMA evaluation.",
      "trigger_count": "TODO: Trigger count [type: integer >= 0]",
      "event_counter_reset": {
        "type": "TODO: type [type: string]",
        "metadata": "TODO: metadata [type: string]"
      },
      "redfish": {
        "message_id": "ResourceEvent.1.0.ResourceErrorsDetected",
        "message_args": {
          "patterns": [
            "{SysVRId} PowerGood",
            "Abnormal Power Change"
          ],
          "parameters": [
            {
              "type": "DIRECT",
              "field": "CurrentDeviceName"
            }
          ]
        }
      },
      "telemetries": [
        "TODO: 'SysVR 3V3 Abnormal change' [type: object] (row: 154, col: 'AdditionalData')",
        "TODO: 'SysVR 1V8 Abnormal change' [type: object] (row: 154, col: 'AdditionalData')"
      ]
    }
  },
  {
    "index": 155,
    "SR #": "FPGA_15",
    "deduced_event_info": {
      "event": "TODO: Event name [type: string] (could not be deduced from the cell; cell value: 'Alert caused by PEXSW PWR_GD state run time change'; row: 155, col: 'Fault Scenario')",
      "device_type": "TODO: Device specification [type: string] (could not be deduced from the cell; cell value: 'Alert caused by PEXSW PWR_GD state run time change'; row: 155, col: 'Fault Scenario')",
      "event_trigger": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')]",
      "accessor": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')] (could not be deduced from an empty cell; row: 155, col: 'GPUOOB Property/OOB API')",
      "severity": "Crtical",
      "resolution": "Power cycle the BaseBoard. If the problem persists, isolate the server for RMA evaluation.",
      "trigger_count": "TODO: Trigger count [type: integer >= 0]",
      "event_counter_reset": {
        "type": "TODO: type [type: string]",
        "metadata": "TODO: metadata [type: string]"
      },
      "redfish": {
        "message_id": "ResourceEvent.1.0.ResourceErrorsDetected",
        "message_args": {
          "patterns": [
            "{PCIeSwitchId} PowerGood",
            "Abnormal Power Change"
          ],
          "parameters": [
            {
              "type": "DIRECT",
              "field": "CurrentDeviceName"
            }
          ]
        }
      },
      "telemetries": [
        "TODO: '{PCIeSwitchId} 0V8 Abnormal change' [type: object] (row: 155, col: 'AdditionalData')"
      ]
    }
  },
  {
    "index": 156,
    "SR #": "FPGA_16",
    "deduced_event_info": {
      "event": "Alert caused by PWR_GD state run time change",
      "device_type": "Retimer",
      "event_trigger": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')]",
      "accessor": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')] (could not be deduced from an empty cell; row: 156, col: 'GPUOOB Property/OOB API')",
      "severity": "Crtical",
      "resolution": "Power cycle the BaseBoard. If the problem persists, isolate the server for RMA evaluation.",
      "trigger_count": "TODO: Trigger count [type: integer >= 0]",
      "event_counter_reset": {
        "type": "TODO: type [type: string]",
        "metadata": "TODO: metadata [type: string]"
      },
      "redfish": {
        "message_id": "ResourceEvent.1.0.ResourceErrorsDetected",
        "message_args": {
          "patterns": [
            "{RetimerId} PowerGood",
            "Abnormal Power Change"
          ],
          "parameters": [
            {
              "type": "DIRECT",
              "field": "CurrentDeviceName"
            }
          ]
        }
      },
      "telemetries": [
        "TODO: '{RetimerId} 0V9 Abnormal change' [type: object] (row: 156, col: 'AdditionalData')",
        "TODO: '{RetimerId} 1V8 VDD Abnormal change' [type: object] (row: 156, col: 'AdditionalData')",
        "TODO: '{RetimerId} 1V8 LDO Abnormal change' [type: object] (row: 156, col: 'AdditionalData')"
      ]
    }
  },
  {
    "index": 157,
    "SR #": "FPGA_17",
    "deduced_event_info": {
      "event": "Alert caused by PWR_GD state run time change",
      "device_type": "HMC",
      "event_trigger": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')]",
      "accessor": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')] (could not be deduced from an empty cell; row: 157, col: 'GPUOOB Property/OOB API')",
      "severity": "TODO: Severity level [type: string] (could not be deduced from an empty cell; row: 157, col: 'Severity')",
      "resolution": "It can be detected by HMC_PG not asserted (from FPGA).\n\nPower cycle the BaseBoard. If the problem persists, isolate the server for RMA evaluation.",
      "trigger_count": "TODO: Trigger count [type: integer >= 0]",
      "event_counter_reset": {
        "type": "TODO: type [type: string]",
        "metadata": "TODO: metadata [type: string]"
      },
      "redfish": {
        "message_id": "TODO: Message Id [type: string] (could not be deduced from an empty cell; row: 157, col: 'MessageId')",
        "message_args": {
          "patterns": "TODO: Message patterns [type: array of strings] (could not be deduced from an empty cell; row: 157, col: 'MessageArgs')",
          "parameters": "TODO: Pattern placeholder values [type: array of objects] (could not be deduced from an empty cell; row: 157, col: 'MessageArgs')"
        }
      },
      "telemetries": []
    }
  },
  {
    "index": 158,
    "SR #": "FPGA_18",
    "deduced_event_info": {
      "event": "TODO: Event name [type: string] (could not be deduced from the cell; cell value: 'Alert caused by HERM/CAR PWR_GD state run time change'; row: 158, col: 'Fault Scenario')",
      "device_type": "TODO: Device specification [type: string] (could not be deduced from the cell; cell value: 'Alert caused by HERM/CAR PWR_GD state run time change'; row: 158, col: 'Fault Scenario')",
      "event_trigger": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')]",
      "accessor": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')] (could not be deduced from an empty cell; row: 158, col: 'GPUOOB Property/OOB API')",
      "severity": "TODO: Severity level [type: string] (could not be deduced from an empty cell; row: 158, col: 'Severity')",
      "resolution": "TBD",
      "trigger_count": "TODO: Trigger count [type: integer >= 0]",
      "event_counter_reset": {
        "type": "TODO: type [type: string]",
        "metadata": "TODO: metadata [type: string]"
      },
      "redfish": {
        "message_id": "TODO: Message Id [type: string] (could not be deduced from an empty cell; row: 158, col: 'MessageId')",
        "message_args": {
          "patterns": "TODO: Message patterns [type: array of strings] (could not be deduced from an empty cell; row: 158, col: 'MessageArgs')",
          "parameters": "TODO: Pattern placeholder values [type: array of objects] (could not be deduced from an empty cell; row: 158, col: 'MessageArgs')"
        }
      },
      "telemetries": []
    }
  },
  {
    "index": 159,
    "SR #": "FPGA_19",
    "deduced_event_info": {
      "event": "Alert caused by PRSNT state run time change",
      "device_type": "GPU",
      "event_trigger": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')]",
      "accessor": {
        "type": "DeviceCoreAPI",
        "property": "gpu.interrupt.PresenceInfo",
        "check": "TODO: Value checking definition [type: object]"
      },
      "severity": "Crtical",
      "resolution": "Cordon the HGX server node for further diagnosis.",
      "trigger_count": "TODO: Trigger count [type: integer >= 0]",
      "event_counter_reset": {
        "type": "TODO: type [type: string]",
        "metadata": "TODO: metadata [type: string]"
      },
      "redfish": {
        "message_id": "ResourceEvent.1.1.ResourceStateChanged",
        "message_args": {
          "patterns": [
            "{GPUId}",
            "Absent"
          ],
          "parameters": [
            {
              "type": "DIRECT",
              "field": "CurrentDeviceName"
            }
          ]
        }
      },
      "telemetries": []
    }
  },
  {
    "index": 160,
    "SR #": "FPGA_20",
    "deduced_event_info": {
      "event": "TODO: Event name [type: string] (could not be deduced from the cell; cell value: 'Alert caused by NVSW PRSNT state run time change'; row: 160, col: 'Fault Scenario')",
      "device_type": "TODO: Device specification [type: string] (could not be deduced from the cell; cell value: 'Alert caused by NVSW PRSNT state run time change'; row: 160, col: 'Fault Scenario')",
      "event_trigger": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')]",
      "accessor": {
        "type": "DeviceCoreAPI",
        "property": "nvswitch.device.abnormalPresenceChange",
        "check": "TODO: Value checking definition [type: object]"
      },
      "severity": "Crtical",
      "resolution": "Cordon the HGX server node for further diagnosis.",
      "trigger_count": "TODO: Trigger count [type: integer >= 0]",
      "event_counter_reset": {
        "type": "TODO: type [type: string]",
        "metadata": "TODO: metadata [type: string]"
      },
      "redfish": {
        "message_id": "ResourceEvent.1.1.ResourceStateChanged",
        "message_args": {
          "patterns": [
            "{NVSwitchId}",
            "Absent"
          ],
          "parameters": [
            {
              "type": "DIRECT",
              "field": "CurrentDeviceName"
            }
          ]
        }
      },
      "telemetries": []
    }
  },
  {
    "index": 161,
    "SR #": "FPGA_21",
    "deduced_event_info": {
      "event": "Alert caused by thermal alert",
      "device_type": "GPU",
      "event_trigger": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')]",
      "accessor": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')] (could not be deduced from an empty cell; row: 161, col: 'GPUOOB Property/OOB API')",
      "severity": "Warning",
      "resolution": "Increase the BaseBoard cooling and check thermal environmental to ensure the GPU operates under UpperCritical threshold.",
      "trigger_count": "TODO: Trigger count [type: integer >= 0]",
      "event_counter_reset": {
        "type": "TODO: type [type: string]",
        "metadata": "TODO: metadata [type: string]"
      },
      "redfish": {
        "message_id": "ResourceEvent.1.0.ResourceWaringThresholdExceeded",
        "message_args": {
          "patterns": [
            "{GPUId} Temperature",
            "{UpperCritical Threshold}"
          ],
          "parameters": [
            {
              "type": "DIRECT",
              "field": "CurrentDeviceName"
            },
            "TODO: Value accessor [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')] (could not be deduced from the cell; cell value: '[\"{GPUId} Temperature\", \"{UpperCritical Threshold}\"]'; row: 161, col: 'MessageArgs')"
          ]
        }
      },
      "telemetries": [
        "TODO: '{GPUId} Temperature' [type: object] (row: 161, col: 'AdditionalData')",
        "TODO: '{GPUId} Thermal Parameters' [type: object] (row: 161, col: 'AdditionalData')"
      ]
    }
  },
  {
    "index": 162,
    "SR #": "FPGA_22",
    "deduced_event_info": {
      "event": "TODO: Event name [type: string] (could not be deduced from the cell; cell value: 'Alert caused by NVSW thermal alert'; row: 162, col: 'Fault Scenario')",
      "device_type": "TODO: Device specification [type: string] (could not be deduced from the cell; cell value: 'Alert caused by NVSW thermal alert'; row: 162, col: 'Fault Scenario')",
      "event_trigger": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')]",
      "accessor": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')] (could not be deduced from an empty cell; row: 162, col: 'GPUOOB Property/OOB API')",
      "severity": "Warning",
      "resolution": "Increase the BaseBoard cooling and check thermal environmental to ensure the NVSwitch operates under UpperCritical threshold.",
      "trigger_count": "TODO: Trigger count [type: integer >= 0]",
      "event_counter_reset": {
        "type": "TODO: type [type: string]",
        "metadata": "TODO: metadata [type: string]"
      },
      "redfish": {
        "message_id": "ResourceEvent.1.0.ResourceWaringThresholdExceeded",
        "message_args": {
          "patterns": [
            "{NVSwitchId} Temperature",
            "{UpperCritical Threshold}"
          ],
          "parameters": [
            {
              "type": "DIRECT",
              "field": "CurrentDeviceName"
            },
            "TODO: Value accessor [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')] (could not be deduced from the cell; cell value: '[\"{NVSwitchId} Temperature\", \"{UpperCritical Threshold}\"]'; row: 162, col: 'MessageArgs')"
          ]
        }
      },
      "telemetries": [
        "TODO: '{NVSwitchId} Temperature' [type: object] (row: 162, col: 'AdditionalData')",
        "TODO: '{NVSwitchId} Thermal Parameters' [type: object] (row: 162, col: 'AdditionalData')"
      ]
    }
  },
  {
    "index": 163,
    "SR #": "FPGA_23",
    "deduced_event_info": {
      "event": "TODO: Event name [type: string] (could not be deduced from the cell; cell value: 'HERM_OVERT alert'; row: 163, col: 'Fault Scenario')",
      "device_type": "TODO: Device specification [type: string] (could not be deduced from the cell; cell value: 'HERM_OVERT alert'; row: 163, col: 'Fault Scenario')",
      "event_trigger": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')]",
      "accessor": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')] (could not be deduced from an empty cell; row: 163, col: 'GPUOOB Property/OOB API')",
      "severity": "TODO: Severity level [type: string] (could not be deduced from an empty cell; row: 163, col: 'Severity')",
      "resolution": "TBD",
      "trigger_count": "TODO: Trigger count [type: integer >= 0]",
      "event_counter_reset": {
        "type": "TODO: type [type: string]",
        "metadata": "TODO: metadata [type: string]"
      },
      "redfish": {
        "message_id": "TODO: Message Id [type: string] (could not be deduced from an empty cell; row: 163, col: 'MessageId')",
        "message_args": {
          "patterns": "TODO: Message patterns [type: array of strings] (could not be deduced from an empty cell; row: 163, col: 'MessageArgs')",
          "parameters": "TODO: Pattern placeholder values [type: array of objects] (could not be deduced from an empty cell; row: 163, col: 'MessageArgs')"
        }
      },
      "telemetries": []
    }
  },
  {
    "index": 164,
    "SR #": "FPGA_24",
    "deduced_event_info": {
      "event": "TODO: Event name [type: string] (could not be deduced from the cell; cell value: 'Alert caused by EROT FATAL pin state change'; row: 164, col: 'Fault Scenario')",
      "device_type": "TODO: Device specification [type: string] (could not be deduced from the cell; cell value: 'Alert caused by EROT FATAL pin state change'; row: 164, col: 'Fault Scenario')",
      "event_trigger": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')]",
      "accessor": {
        "type": "DeviceCoreAPI",
        "property": "nvswitch.interrupt.erot pcieswitch.interrupt.erot gpu.interrupt.erot hmc.interrupt.erot",
        "check": "TODO: Value checking definition [type: object]"
      },
      "severity": "Crtical",
      "resolution": "talk to glacier directly via PLDM vendor command to triage",
      "trigger_count": "TODO: Trigger count [type: integer >= 0]",
      "event_counter_reset": {
        "type": "TODO: type [type: string]",
        "metadata": "TODO: metadata [type: string]"
      },
      "redfish": {
        "message_id": "ResourceEvent.1.0.ResourceErrorsDetected",
        "message_args": {
          "patterns": [
            "{ERoTId} ERoT_Fatal",
            "Abnormal State Change"
          ],
          "parameters": [
            {
              "type": "DIRECT",
              "field": "CurrentDeviceName"
            }
          ]
        }
      },
      "telemetries": []
    }
  },
  {
    "index": 165,
    "SR #": "FPGA_25",
    "deduced_event_info": {
      "event": "TODO: Event name [type: string] (could not be deduced from the cell; cell value: 'Alert caused by Inlet sensor temperture alert'; row: 165, col: 'Fault Scenario')",
      "device_type": "TODO: Device specification [type: string] (could not be deduced from the cell; cell value: 'Alert caused by Inlet sensor temperture alert'; row: 165, col: 'Fault Scenario')",
      "event_trigger": {
        "type": "DBUS",
        "object": "/xyz/openbmc_project/GpioStatusHandler",
        "interface": "xyz.openbmc_project.GpioStatus",
        "property": "I2C4_ALERT",
        "check": {
          "equal": "false"
        }
      },
      "accessor": {
        "type": "DeviceCoreAPI",
        "property": "inletTemp.thermal.alert",
        "check": "TODO: Value checking definition [type: object]"
      },
      "severity": "Warning",
      "resolution": "Increase the BaseBoard cooling and check thermal environmental to ensure Inlet Temperature reading is under UpperCritical threshold.",
      "trigger_count": "TODO: Trigger count [type: integer >= 0]",
      "event_counter_reset": {
        "type": "TODO: type [type: string]",
        "metadata": "TODO: metadata [type: string]"
      },
      "redfish": {
        "message_id": "ResourceEvent.1.0.ResourceWaringThresholdExceeded",
        "message_args": {
          "patterns": [
            "{InletTempId} Temperature",
            "{UpperCritical Threshold}"
          ],
          "parameters": [
            {
              "type": "DIRECT",
              "field": "CurrentDeviceName"
            },
            "TODO: Value accessor [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')] (could not be deduced from the cell; cell value: '[\"{InletTempId} Temperature\", \"{UpperCritical Threshold}\"]'; row: 165, col: 'MessageArgs')"
          ]
        }
      },
      "telemetries": [
        "TODO: '{InletTempId} Temperature' [type: object] (row: 165, col: 'AdditionalData')",
        "TODO: '{InletTempId} Thermal Parameters' [type: object] (row: 165, col: 'AdditionalData')"
      ]
    }
  },
  {
    "index": 166,
    "SR #": "FPGA_26",
    "deduced_event_info": {
      "event": "Alert caused by alert",
      "device_type": "HSC",
      "event_trigger": {
        "type": "DBUS",
        "object": "/xyz/openbmc_project/GpioStatusHandler",
        "interface": "xyz.openbmc_project.GpioStatus",
        "property": "I2C4_ALERT",
        "check": {
          "equal": "false"
        }
      },
      "accessor": {
        "type": "DeviceCoreAPI",
        "property": "hsc.device.alert",
        "check": "TODO: Value checking definition [type: object]"
      },
      "severity": "Warning or Critical",
      "resolution": "Power cycle the BaseBoard. If the problem persists, isolate the server for RMA evaluation.",
      "trigger_count": "TODO: Trigger count [type: integer >= 0]",
      "event_counter_reset": {
        "type": "TODO: type [type: string]",
        "metadata": "TODO: metadata [type: string]"
      },
      "redfish": {
        "message_id": "ResourceEvent.1.0.ResourceErrorsDetected",
        "message_args": {
          "patterns": [
            "{HSCId} Alert",
            "{HSC Alert Info}"
          ],
          "parameters": [
            {
              "type": "DIRECT",
              "field": "CurrentDeviceName"
            },
            "TODO: Value accessor [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')] (could not be deduced from the cell; cell value: '[\"{HSCId} Alert\", \"{HSC Alert Info}\"]'; row: 166, col: 'MessageArgs')"
          ]
        }
      },
      "telemetries": [
        "TODO: '{HSCId} detailed alert status' [type: object] (row: 166, col: 'AdditionalData')"
      ]
    }
  },
  {
    "index": 167,
    "SR #": "FPGA_27",
    "deduced_event_info": {
      "event": "TODO: Event name [type: string] (could not be deduced from the cell; cell value: 'Alert caused by PCB sensor temperature alert'; row: 167, col: 'Fault Scenario')",
      "device_type": "TODO: Device specification [type: string] (could not be deduced from the cell; cell value: 'Alert caused by PCB sensor temperature alert'; row: 167, col: 'Fault Scenario')",
      "event_trigger": {
        "type": "DBUS",
        "object": "/xyz/openbmc_project/GpioStatusHandler",
        "interface": "xyz.openbmc_project.GpioStatus",
        "property": "I2C4_ALERT",
        "check": {
          "equal": "false"
        }
      },
      "accessor": {
        "type": "DeviceCoreAPI",
        "property": "baseboard.pcb.temperature.alert",
        "check": "TODO: Value checking definition [type: object]"
      },
      "severity": "Warning",
      "resolution": "Increase the BaseBoard cooling and check thermal environmental to ensure the PCB Temperature reading is under UpperCritical threshold.",
      "trigger_count": "TODO: Trigger count [type: integer >= 0]",
      "event_counter_reset": {
        "type": "TODO: type [type: string]",
        "metadata": "TODO: metadata [type: string]"
      },
      "redfish": {
        "message_id": "ResourceEvent.1.0.ResourceWaringThresholdExceeded",
        "message_args": {
          "patterns": [
            "{PCBTempId} Temperature",
            "{UpperCritical Threshold}"
          ],
          "parameters": [
            {
              "type": "DIRECT",
              "field": "CurrentDeviceName"
            },
            "TODO: Value accessor [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')] (could not be deduced from the cell; cell value: '[\"{PCBTempId} Temperature\", \"{UpperCritical Threshold}\"]'; row: 167, col: 'MessageArgs')"
          ]
        }
      },
      "telemetries": [
        "TODO: '{PCBTempId} Temperature' [type: object] (row: 167, col: 'AdditionalData')",
        "TODO: '{PCBTempId} Thermal Parameters' [type: object] (row: 167, col: 'AdditionalData')"
      ]
    }
  },
  {
    "index": 168,
    "SR #": "FPGA_28",
    "deduced_event_info": {
      "event": "TODO: Event name [type: string] (could not be deduced from the cell; cell value: 'Other Alerts from devices handle'; row: 168, col: 'Fault Scenario')",
      "device_type": "TODO: Device specification [type: string] (could not be deduced from the cell; cell value: 'Other Alerts from devices handle'; row: 168, col: 'Fault Scenario')",
      "event_trigger": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')]",
      "accessor": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')] (could not be deduced from an empty cell; row: 168, col: 'GPUOOB Property/OOB API')",
      "severity": "TODO: Severity level [type: string] (could not be deduced from an empty cell; row: 168, col: 'Severity')",
      "resolution": "Communication Alerts can be triaged via SMBPBI interrupts opcode as well as the register table dump. Communication Alerts would not cause any in-band failures. Re-attempt the same command to see if alert persists. If the alerts persist and the device is pex switch or retimer, Users can attempt reset the pex switch or retimer or DC cycle the board to try to recover. If these method doesn't work,  The physical interface or the target device is not functional. Vishal/Heniz to see if we need RMA on this.",
      "trigger_count": "TODO: Trigger count [type: integer >= 0]",
      "event_counter_reset": {
        "type": "TODO: type [type: string]",
        "metadata": "TODO: metadata [type: string]"
      },
      "redfish": {
        "message_id": "TODO: Message Id [type: string] (could not be deduced from an empty cell; row: 168, col: 'MessageId')",
        "message_args": {
          "patterns": "TODO: Message patterns [type: array of strings] (could not be deduced from an empty cell; row: 168, col: 'MessageArgs')",
          "parameters": "TODO: Pattern placeholder values [type: array of objects] (could not be deduced from an empty cell; row: 168, col: 'MessageArgs')"
        }
      },
      "telemetries": [
        "TODO: '{FPGAId} Register Table' [type: object] (row: 168, col: 'AdditionalData')"
      ]
    }
  },
  {
    "index": 169,
    "SR #": "FPGA_29",
    "deduced_event_info": {
      "event": "wrong PEC byte hanlde in SMBBPI",
      "device_type": "GPU",
      "event_trigger": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')]",
      "accessor": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')] (could not be deduced from an empty cell; row: 169, col: 'GPUOOB Property/OOB API')",
      "severity": "TODO: Severity level [type: string] (could not be deduced from an empty cell; row: 169, col: 'Severity')",
      "resolution": "Try the same command again to see if PEC failure persists. If so, the i2c interface is not functional or GPU device SMBPBI server is not functional.    Users can attempt reset the GPU or DC cycle the board to try to recover. If these method doesn't work, Vishal/Heniz to see if we need RMA on this.  Vishal/Heniz to see if we need RMA on this.",
      "trigger_count": "TODO: Trigger count [type: integer >= 0]",
      "event_counter_reset": {
        "type": "TODO: type [type: string]",
        "metadata": "TODO: metadata [type: string]"
      },
      "redfish": {
        "message_id": "TODO: Message Id [type: string] (could not be deduced from an empty cell; row: 169, col: 'MessageId')",
        "message_args": {
          "patterns": "TODO: Message patterns [type: array of strings] (could not be deduced from an empty cell; row: 169, col: 'MessageArgs')",
          "parameters": "TODO: Pattern placeholder values [type: array of objects] (could not be deduced from an empty cell; row: 169, col: 'MessageArgs')"
        }
      },
      "telemetries": [
        "TODO: '{FPGAId} Register Table' [type: object] (row: 169, col: 'AdditionalData')"
      ]
    }
  },
  {
    "index": 170,
    "SR #": "FPGA_30",
    "deduced_event_info": {
      "event": "SMBPBI timeout handle",
      "device_type": "FPGA",
      "event_trigger": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')]",
      "accessor": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')] (could not be deduced from an empty cell; row: 170, col: 'GPUOOB Property/OOB API')",
      "severity": "TODO: Severity level [type: string] (could not be deduced from an empty cell; row: 170, col: 'Severity')",
      "resolution": "If timeout persistently happens, either FPGA has bug or the interface is not functional. Live debug session would be needed with the customer.",
      "trigger_count": "TODO: Trigger count [type: integer >= 0]",
      "event_counter_reset": {
        "type": "TODO: type [type: string]",
        "metadata": "TODO: metadata [type: string]"
      },
      "redfish": {
        "message_id": "TODO: Message Id [type: string] (could not be deduced from an empty cell; row: 170, col: 'MessageId')",
        "message_args": {
          "patterns": "TODO: Message patterns [type: array of strings] (could not be deduced from an empty cell; row: 170, col: 'MessageArgs')",
          "parameters": "TODO: Pattern placeholder values [type: array of objects] (could not be deduced from an empty cell; row: 170, col: 'MessageArgs')"
        }
      },
      "telemetries": [
        "TODO: '{FPGAId} Register Table' [type: object] (row: 170, col: 'AdditionalData')"
      ]
    }
  },
  {
    "index": 171,
    "SR #": "FPGA_31",
    "deduced_event_info": {
      "event": "I2C timeout handle",
      "device_type": "FPGA",
      "event_trigger": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')]",
      "accessor": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')] (could not be deduced from an empty cell; row: 171, col: 'GPUOOB Property/OOB API')",
      "severity": "TODO: Severity level [type: string] (could not be deduced from an empty cell; row: 171, col: 'Severity')",
      "resolution": "If timeout persistently happens, either FPGA has bug or the interface is not functional. Live debug session would be needed with the customer.",
      "trigger_count": "TODO: Trigger count [type: integer >= 0]",
      "event_counter_reset": {
        "type": "TODO: type [type: string]",
        "metadata": "TODO: metadata [type: string]"
      },
      "redfish": {
        "message_id": "TODO: Message Id [type: string] (could not be deduced from an empty cell; row: 171, col: 'MessageId')",
        "message_args": {
          "patterns": "TODO: Message patterns [type: array of strings] (could not be deduced from an empty cell; row: 171, col: 'MessageArgs')",
          "parameters": "TODO: Pattern placeholder values [type: array of objects] (could not be deduced from an empty cell; row: 171, col: 'MessageArgs')"
        }
      },
      "telemetries": [
        "TODO: '{FPGAId} Register Table' [type: object] (row: 171, col: 'AdditionalData')"
      ]
    }
  },
  {
    "index": 172,
    "SR #": "FPGA_32",
    "deduced_event_info": {
      "event": "Clock buffer hardcode handle for NVSW PWR_GD state changes",
      "device_type": "GPU",
      "event_trigger": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')]",
      "accessor": {
        "type": "DeviceCoreAPI",
        "property": "gpu.pcie.clockOutputEnableState nvswitch.pcie.clockOutputEnableState pcieretimer.pcie.clockOutputEnableState pcieswitch.pcie.clockOutputEnableState gpu.nvlink.clockOutputEnableState",
        "check": "TODO: Value checking definition [type: object]"
      },
      "severity": "TODO: Severity level [type: string] (could not be deduced from an empty cell; row: 172, col: 'Severity')",
      "resolution": "If the feature doesn't work, it is a FPGA bug. Provide FPGA team with the register dump and FPGA team would need to provide fix.",
      "trigger_count": "TODO: Trigger count [type: integer >= 0]",
      "event_counter_reset": {
        "type": "TODO: type [type: string]",
        "metadata": "TODO: metadata [type: string]"
      },
      "redfish": {
        "message_id": "TODO: Message Id [type: string] (could not be deduced from an empty cell; row: 172, col: 'MessageId')",
        "message_args": {
          "patterns": "TODO: Message patterns [type: array of strings] (could not be deduced from an empty cell; row: 172, col: 'MessageArgs')",
          "parameters": "TODO: Pattern placeholder values [type: array of objects] (could not be deduced from an empty cell; row: 172, col: 'MessageArgs')"
        }
      },
      "telemetries": [
        "TODO: '{FPGAId} Register Table' [type: object] (row: 172, col: 'AdditionalData')"
      ]
    }
  },
  {
    "index": 173,
    "SR #": "FPGA_33",
    "deduced_event_info": {
      "event": "TODO: Event name [type: string] (could not be deduced from the cell; cell value: 'Clock buffer access while hardcode is in process'; row: 173, col: 'Fault Scenario')",
      "device_type": "TODO: Device specification [type: string] (could not be deduced from the cell; cell value: 'Clock buffer access while hardcode is in process'; row: 173, col: 'Fault Scenario')",
      "event_trigger": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')]",
      "accessor": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')] (could not be deduced from an empty cell; row: 173, col: 'GPUOOB Property/OOB API')",
      "severity": "TODO: Severity level [type: string] (could not be deduced from an empty cell; row: 173, col: 'Severity')",
      "resolution": "If the feature doesn't work, it is a FPGA bug. Provide FPGA team with the register dump and FPGA team would need to provide fix.",
      "trigger_count": "TODO: Trigger count [type: integer >= 0]",
      "event_counter_reset": {
        "type": "TODO: type [type: string]",
        "metadata": "TODO: metadata [type: string]"
      },
      "redfish": {
        "message_id": "TODO: Message Id [type: string] (could not be deduced from an empty cell; row: 173, col: 'MessageId')",
        "message_args": {
          "patterns": "TODO: Message patterns [type: array of strings] (could not be deduced from an empty cell; row: 173, col: 'MessageArgs')",
          "parameters": "TODO: Pattern placeholder values [type: array of objects] (could not be deduced from an empty cell; row: 173, col: 'MessageArgs')"
        }
      },
      "telemetries": [
        "TODO: '{FPGAId} Register Table' [type: object] (row: 173, col: 'AdditionalData')"
      ]
    }
  },
  {
    "index": 174,
    "SR #": "FPGA_34",
    "deduced_event_info": {
      "event": "TODO: Event name [type: string] (could not be deduced from the cell; cell value: 'Run DC power cycles with PG_* signals held low.'; row: 174, col: 'Fault Scenario')",
      "device_type": "TODO: Device specification [type: string] (could not be deduced from the cell; cell value: 'Run DC power cycles with PG_* signals held low.'; row: 174, col: 'Fault Scenario')",
      "event_trigger": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')]",
      "accessor": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')] (could not be deduced from an empty cell; row: 174, col: 'GPUOOB Property/OOB API')",
      "severity": "TODO: Severity level [type: string] (could not be deduced from an empty cell; row: 174, col: 'Severity')",
      "resolution": "Attempt power cycle multiple times, if that doesn't work RMA the board.",
      "trigger_count": "TODO: Trigger count [type: integer >= 0]",
      "event_counter_reset": {
        "type": "TODO: type [type: string]",
        "metadata": "TODO: metadata [type: string]"
      },
      "redfish": {
        "message_id": "TODO: Message Id [type: string] (could not be deduced from an empty cell; row: 174, col: 'MessageId')",
        "message_args": {
          "patterns": "TODO: Message patterns [type: array of strings] (could not be deduced from an empty cell; row: 174, col: 'MessageArgs')",
          "parameters": "TODO: Pattern placeholder values [type: array of objects] (could not be deduced from an empty cell; row: 174, col: 'MessageArgs')"
        }
      },
      "telemetries": [
        "TODO: '{FPGAId} Register Table' [type: object] (row: 174, col: 'AdditionalData')"
      ]
    }
  },
  {
    "index": 175,
    "SR #": "FPGA_35",
    "deduced_event_info": {
      "event": "Failure resolution with a DC power cycle once the induced failure during power-up is removed",
      "device_type": "system",
      "event_trigger": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')]",
      "accessor": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')] (could not be deduced from an empty cell; row: 175, col: 'GPUOOB Property/OOB API')",
      "severity": "TODO: Severity level [type: string] (could not be deduced from an empty cell; row: 175, col: 'Severity')",
      "resolution": "if the failure is removed and we are still hitting issue. It is likely a FPGA bug. Provide FPGA team with the register dump and FPGA team would need to provide fix.",
      "trigger_count": "TODO: Trigger count [type: integer >= 0]",
      "event_counter_reset": {
        "type": "TODO: type [type: string]",
        "metadata": "TODO: metadata [type: string]"
      },
      "redfish": {
        "message_id": "TODO: Message Id [type: string] (could not be deduced from an empty cell; row: 175, col: 'MessageId')",
        "message_args": {
          "patterns": "TODO: Message patterns [type: array of strings] (could not be deduced from an empty cell; row: 175, col: 'MessageArgs')",
          "parameters": "TODO: Pattern placeholder values [type: array of objects] (could not be deduced from an empty cell; row: 175, col: 'MessageArgs')"
        }
      },
      "telemetries": [
        "TODO: '{FPGAId} Register Table' [type: object] (row: 175, col: 'AdditionalData')"
      ]
    }
  },
  {
    "index": 176,
    "SR #": "FPGA_36",
    "deduced_event_info": {
      "event": "TODO: Event name [type: string] (could not be deduced from the cell; cell value: 'BMC PCIE error report for Invalid TLP'; row: 176, col: 'Fault Scenario')",
      "device_type": "TODO: Device specification [type: string] (could not be deduced from the cell; cell value: 'BMC PCIE error report for Invalid TLP'; row: 176, col: 'Fault Scenario')",
      "event_trigger": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')]",
      "accessor": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')] (could not be deduced from an empty cell; row: 176, col: 'GPUOOB Property/OOB API')",
      "severity": "TODO: Severity level [type: string] (could not be deduced from an empty cell; row: 176, col: 'Severity')",
      "resolution": "Follow PCIE base spec for recovery, Vishal please comment",
      "trigger_count": "TODO: Trigger count [type: integer >= 0]",
      "event_counter_reset": {
        "type": "TODO: type [type: string]",
        "metadata": "TODO: metadata [type: string]"
      },
      "redfish": {
        "message_id": "TODO: Message Id [type: string] (could not be deduced from an empty cell; row: 176, col: 'MessageId')",
        "message_args": {
          "patterns": "TODO: Message patterns [type: array of strings] (could not be deduced from an empty cell; row: 176, col: 'MessageArgs')",
          "parameters": "TODO: Pattern placeholder values [type: array of objects] (could not be deduced from an empty cell; row: 176, col: 'MessageArgs')"
        }
      },
      "telemetries": [
        "TODO: '{FPGAId} Register Table' [type: object] (row: 176, col: 'AdditionalData')"
      ]
    }
  },
  {
    "index": 177,
    "SR #": "FPGA_37",
    "deduced_event_info": {
      "event": "PCIE error report for Invalid TLP",
      "device_type": "HMC",
      "event_trigger": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')]",
      "accessor": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')] (could not be deduced from an empty cell; row: 177, col: 'GPUOOB Property/OOB API')",
      "severity": "TODO: Severity level [type: string] (could not be deduced from an empty cell; row: 177, col: 'Severity')",
      "resolution": "Follow PCIE base spec for recovery, Vishal please comment",
      "trigger_count": "TODO: Trigger count [type: integer >= 0]",
      "event_counter_reset": {
        "type": "TODO: type [type: string]",
        "metadata": "TODO: metadata [type: string]"
      },
      "redfish": {
        "message_id": "TODO: Message Id [type: string] (could not be deduced from an empty cell; row: 177, col: 'MessageId')",
        "message_args": {
          "patterns": "TODO: Message patterns [type: array of strings] (could not be deduced from an empty cell; row: 177, col: 'MessageArgs')",
          "parameters": "TODO: Pattern placeholder values [type: array of objects] (could not be deduced from an empty cell; row: 177, col: 'MessageArgs')"
        }
      },
      "telemetries": [
        "TODO: '{FPGAId} Register Table' [type: object] (row: 177, col: 'AdditionalData')"
      ]
    }
  },
  {
    "index": 178,
    "SR #": "FPGA_38",
    "deduced_event_info": {
      "event": "TODO: Event name [type: string] (could not be deduced from the cell; cell value: 'SPI error injection during Glacier FW update in parallel'; row: 178, col: 'Fault Scenario')",
      "device_type": "TODO: Device specification [type: string] (could not be deduced from the cell; cell value: 'SPI error injection during Glacier FW update in parallel'; row: 178, col: 'Fault Scenario')",
      "event_trigger": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')]",
      "accessor": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')] (could not be deduced from an empty cell; row: 178, col: 'GPUOOB Property/OOB API')",
      "severity": "TODO: Severity level [type: string] (could not be deduced from an empty cell; row: 178, col: 'Severity')",
      "resolution": "When this happens, we would hit PLDM firmware update failure. Users should just try again to see if the glitch is intermittent. If the PLDM firmware update continously fails. The SPI interface has problems. We probably want to RMA the board here.",
      "trigger_count": "TODO: Trigger count [type: integer >= 0]",
      "event_counter_reset": {
        "type": "TODO: type [type: string]",
        "metadata": "TODO: metadata [type: string]"
      },
      "redfish": {
        "message_id": "TODO: Message Id [type: string] (could not be deduced from an empty cell; row: 178, col: 'MessageId')",
        "message_args": {
          "patterns": "TODO: Message patterns [type: array of strings] (could not be deduced from an empty cell; row: 178, col: 'MessageArgs')",
          "parameters": "TODO: Pattern placeholder values [type: array of objects] (could not be deduced from an empty cell; row: 178, col: 'MessageArgs')"
        }
      },
      "telemetries": [
        "TODO: '{FPGAId} Register Table' [type: object] (row: 178, col: 'AdditionalData')"
      ]
    }
  },
  {
    "index": 179,
    "SR #": "FPGA_39",
    "deduced_event_info": {
      "event": "SPI error injection during FW update",
      "device_type": "FPGA",
      "event_trigger": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')]",
      "accessor": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')] (could not be deduced from an empty cell; row: 179, col: 'GPUOOB Property/OOB API')",
      "severity": "TODO: Severity level [type: string] (could not be deduced from an empty cell; row: 179, col: 'Severity')",
      "resolution": "When this happens, we would hit PLDM firmware update failure. Users should just try again to see if the glitch is intermittent. If the PLDM firmware update continously fails. The SPI interface has problems. We probably want to RMA the board here.",
      "trigger_count": "TODO: Trigger count [type: integer >= 0]",
      "event_counter_reset": {
        "type": "TODO: type [type: string]",
        "metadata": "TODO: metadata [type: string]"
      },
      "redfish": {
        "message_id": "TODO: Message Id [type: string] (could not be deduced from an empty cell; row: 179, col: 'MessageId')",
        "message_args": {
          "patterns": "TODO: Message patterns [type: array of strings] (could not be deduced from an empty cell; row: 179, col: 'MessageArgs')",
          "parameters": "TODO: Pattern placeholder values [type: array of objects] (could not be deduced from an empty cell; row: 179, col: 'MessageArgs')"
        }
      },
      "telemetries": [
        "TODO: '{FPGAId} Register Table' [type: object] (row: 179, col: 'AdditionalData')"
      ]
    }
  },
  {
    "index": 180,
    "SR #": "FPGA_40",
    "deduced_event_info": {
      "event": "SMBPBI access to LS devices where devices return NACKs",
      "device_type": "GPU",
      "event_trigger": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')]",
      "accessor": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')] (could not be deduced from an empty cell; row: 180, col: 'GPUOOB Property/OOB API')",
      "severity": "TODO: Severity level [type: string] (could not be deduced from an empty cell; row: 180, col: 'Severity')",
      "resolution": "Try the same command again to see if NACK failure persists. If so, the i2c interface is not functional or GPU device SMBPBI server is not functional.   Users can attempt reset the GPU or DC cycle the board to try to recover. If these method doesn't work, Vishal/Heniz to see if we need RMA on this.",
      "trigger_count": "TODO: Trigger count [type: integer >= 0]",
      "event_counter_reset": {
        "type": "TODO: type [type: string]",
        "metadata": "TODO: metadata [type: string]"
      },
      "redfish": {
        "message_id": "TODO: Message Id [type: string] (could not be deduced from an empty cell; row: 180, col: 'MessageId')",
        "message_args": {
          "patterns": "TODO: Message patterns [type: array of strings] (could not be deduced from an empty cell; row: 180, col: 'MessageArgs')",
          "parameters": "TODO: Pattern placeholder values [type: array of objects] (could not be deduced from an empty cell; row: 180, col: 'MessageArgs')"
        }
      },
      "telemetries": [
        "TODO: '{FPGAId} Register Table' [type: object] (row: 180, col: 'AdditionalData')"
      ]
    }
  },
  {
    "index": 181,
    "SR #": "FPGA_41",
    "deduced_event_info": {
      "event": "TODO: Event name [type: string] (could not be deduced from the cell; cell value: 'Invalid PCIE TLPs noncompliant to SMBPBI proxy specifications.'; row: 181, col: 'Fault Scenario')",
      "device_type": "TODO: Device specification [type: string] (could not be deduced from the cell; cell value: 'Invalid PCIE TLPs noncompliant to SMBPBI proxy specifications.'; row: 181, col: 'Fault Scenario')",
      "event_trigger": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')]",
      "accessor": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')] (could not be deduced from an empty cell; row: 181, col: 'GPUOOB Property/OOB API')",
      "severity": "TODO: Severity level [type: string] (could not be deduced from an empty cell; row: 181, col: 'Severity')",
      "resolution": "send in another with the compliant SMBPBI proxy commands",
      "trigger_count": "TODO: Trigger count [type: integer >= 0]",
      "event_counter_reset": {
        "type": "TODO: type [type: string]",
        "metadata": "TODO: metadata [type: string]"
      },
      "redfish": {
        "message_id": "TODO: Message Id [type: string] (could not be deduced from an empty cell; row: 181, col: 'MessageId')",
        "message_args": {
          "patterns": "TODO: Message patterns [type: array of strings] (could not be deduced from an empty cell; row: 181, col: 'MessageArgs')",
          "parameters": "TODO: Pattern placeholder values [type: array of objects] (could not be deduced from an empty cell; row: 181, col: 'MessageArgs')"
        }
      },
      "telemetries": [
        "TODO: '{FPGAId} Register Table' [type: object] (row: 181, col: 'AdditionalData')"
      ]
    }
  },
  {
    "index": 182,
    "SR #": "FPGA_42",
    "deduced_event_info": {
      "event": "TODO: Event name [type: string] (could not be deduced from the cell; cell value: 'Interleave SMBPBI commands to different devices over PCIE.'; row: 182, col: 'Fault Scenario')",
      "device_type": "TODO: Device specification [type: string] (could not be deduced from the cell; cell value: 'Interleave SMBPBI commands to different devices over PCIE.'; row: 182, col: 'Fault Scenario')",
      "event_trigger": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')]",
      "accessor": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')] (could not be deduced from an empty cell; row: 182, col: 'GPUOOB Property/OOB API')",
      "severity": "TODO: Severity level [type: string] (could not be deduced from an empty cell; row: 182, col: 'Severity')",
      "resolution": "if it repeated doesn't work, it is an FPGA bug. Live Debug session would be ideal to quickly triage this issue, and FPGA team would provide fix.",
      "trigger_count": "TODO: Trigger count [type: integer >= 0]",
      "event_counter_reset": {
        "type": "TODO: type [type: string]",
        "metadata": "TODO: metadata [type: string]"
      },
      "redfish": {
        "message_id": "TODO: Message Id [type: string] (could not be deduced from an empty cell; row: 182, col: 'MessageId')",
        "message_args": {
          "patterns": "TODO: Message patterns [type: array of strings] (could not be deduced from an empty cell; row: 182, col: 'MessageArgs')",
          "parameters": "TODO: Pattern placeholder values [type: array of objects] (could not be deduced from an empty cell; row: 182, col: 'MessageArgs')"
        }
      },
      "telemetries": [
        "TODO: '{FPGAId} Register Table' [type: object] (row: 182, col: 'AdditionalData')"
      ]
    }
  },
  {
    "index": 183,
    "SR #": "FPGA_43",
    "deduced_event_info": {
      "event": "continuously sends SMBPBI requests even though it already saw the access is given to BMC",
      "device_type": "HMC",
      "event_trigger": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')]",
      "accessor": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')] (could not be deduced from an empty cell; row: 183, col: 'GPUOOB Property/OOB API')",
      "severity": "TODO: Severity level [type: string] (could not be deduced from an empty cell; row: 183, col: 'Severity')",
      "resolution": "HMC should not be able to do such thing, if it is able to do so, it is an FPGA bug, report to FPGA team immedately, and we will fix.",
      "trigger_count": "TODO: Trigger count [type: integer >= 0]",
      "event_counter_reset": {
        "type": "TODO: type [type: string]",
        "metadata": "TODO: metadata [type: string]"
      },
      "redfish": {
        "message_id": "TODO: Message Id [type: string] (could not be deduced from an empty cell; row: 183, col: 'MessageId')",
        "message_args": {
          "patterns": "TODO: Message patterns [type: array of strings] (could not be deduced from an empty cell; row: 183, col: 'MessageArgs')",
          "parameters": "TODO: Pattern placeholder values [type: array of objects] (could not be deduced from an empty cell; row: 183, col: 'MessageArgs')"
        }
      },
      "telemetries": [
        "TODO: '{FPGAId} Register Table' [type: object] (row: 183, col: 'AdditionalData')"
      ]
    }
  },
  {
    "index": 184,
    "SR #": "FPGA_44",
    "deduced_event_info": {
      "event": "Alert caused by HERM/CAR_COME PRSNT state run time change",
      "device_type": "HMC",
      "event_trigger": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')]",
      "accessor": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')] (could not be deduced from an empty cell; row: 184, col: 'GPUOOB Property/OOB API')",
      "severity": "TODO: Severity level [type: string] (could not be deduced from an empty cell; row: 184, col: 'Severity')",
      "resolution": "TODO: Resolution description [type: string] (could not be deduced from an empty cell; row: 184, col: 'Recovery')",
      "trigger_count": "TODO: Trigger count [type: integer >= 0]",
      "event_counter_reset": {
        "type": "TODO: type [type: string]",
        "metadata": "TODO: metadata [type: string]"
      },
      "redfish": {
        "message_id": "TODO: Message Id [type: string] (could not be deduced from an empty cell; row: 184, col: 'MessageId')",
        "message_args": {
          "patterns": "TODO: Message patterns [type: array of strings] (could not be deduced from an empty cell; row: 184, col: 'MessageArgs')",
          "parameters": "TODO: Pattern placeholder values [type: array of objects] (could not be deduced from an empty cell; row: 184, col: 'MessageArgs')"
        }
      },
      "telemetries": [
        "TODO: '{FPGAId} Register Table' [type: object] (row: 184, col: 'AdditionalData')"
      ]
    }
  },
  {
    "index": 185,
    "SR #": "FPGA_45",
    "deduced_event_info": {
      "event": "I2C access to devices where devices return NACKs",
      "device_type": "GPU",
      "event_trigger": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')]",
      "accessor": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')] (could not be deduced from an empty cell; row: 185, col: 'GPUOOB Property/OOB API')",
      "severity": "TODO: Severity level [type: string] (could not be deduced from an empty cell; row: 185, col: 'Severity')",
      "resolution": "Try the same command again to see if NACK failure persists. If so, the i2c interface is not functional or GPU device SMBPBI server is not functional.   Users can attempt reset the GPU or DC cycle the board to try to recover. If these method doesn't work, Vishal/Heniz to see if we need RMA on this.",
      "trigger_count": "TODO: Trigger count [type: integer >= 0]",
      "event_counter_reset": {
        "type": "TODO: type [type: string]",
        "metadata": "TODO: metadata [type: string]"
      },
      "redfish": {
        "message_id": "TODO: Message Id [type: string] (could not be deduced from an empty cell; row: 185, col: 'MessageId')",
        "message_args": {
          "patterns": "TODO: Message patterns [type: array of strings] (could not be deduced from an empty cell; row: 185, col: 'MessageArgs')",
          "parameters": "TODO: Pattern placeholder values [type: array of objects] (could not be deduced from an empty cell; row: 185, col: 'MessageArgs')"
        }
      },
      "telemetries": [
        "TODO: '{FPGAId} Register Table' [type: object] (row: 185, col: 'AdditionalData')"
      ]
    }
  },
  {
    "index": 186,
    "SR #": "Retimer_1",
    "deduced_event_info": {
      "event": "PCIe link goes down",
      "device_type": "Retimer[0-7]",
      "event_trigger": {
        "type": "DBUS",
        "object": "/xyz/openbmc_project/GpioStatusHandler",
        "interface": "xyz.openbmc_project.GpioStatus",
        "property": "IC23_ALERT",
        "check": {
          "equal": "false"
        }
      },
      "accessor": {
        "type": "DeviceCoreAPI",
        "property": "pcieretimer.pcie.linkStatus.page6/getPCIeLinkStatusPage6",
        "check": "TODO: Value checking definition [type: object]"
      },
      "severity": "Critical",
      "resolution": "No immediate recovery required. If this event occurs multiple times in a short period, need to check other PCIe error status for further diagnostics.",
      "trigger_count": "TODO: Trigger count [type: integer >= 0]",
      "event_counter_reset": {
        "type": "TODO: type [type: string]",
        "metadata": "TODO: metadata [type: string]"
      },
      "redfish": {
        "message_id": "ResourceEvent.1.0.ResourceErrorsDetected",
        "message_args": {
          "patterns": [
            "{PCIeRetimerId} PCIe",
            "LTSSM Link Down"
          ],
          "parameters": [
            {
              "type": "DIRECT",
              "field": "CurrentDeviceName"
            }
          ]
        }
      },
      "telemetries": [
        "TODO: '{PCIeRetimerId} PCIe LTSSM state' [type: object] (row: 186, col: 'AdditionalData')"
      ]
    }
  },
  {
    "index": 187,
    "SR #": "Retimer_2",
    "deduced_event_info": {
      "event": "PCIe link never up",
      "device_type": "Retimer[0-7]",
      "event_trigger": {
        "type": "DBUS",
        "object": "/xyz/openbmc_project/GpioStatusHandler",
        "interface": "xyz.openbmc_project.GpioStatus",
        "property": "IC23_ALERT",
        "check": {
          "equal": "false"
        }
      },
      "accessor": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')] (could not be deduced from an empty cell; row: 187, col: 'GPUOOB Property/OOB API')",
      "severity": "Critical",
      "resolution": "Power cycle the BaseBoard. If the problem persists, isolate the server for RMA evaluation.",
      "trigger_count": "TODO: Trigger count [type: integer >= 0]",
      "event_counter_reset": {
        "type": "TODO: type [type: string]",
        "metadata": "TODO: metadata [type: string]"
      },
      "redfish": {
        "message_id": "ResourceEvent.1.0.ResourceErrorsDetected",
        "message_args": {
          "patterns": [
            "{PCIeRetimerId} PCIe",
            "Link Down"
          ],
          "parameters": [
            {
              "type": "DIRECT",
              "field": "CurrentDeviceName"
            }
          ]
        }
      },
      "telemetries": [
        "TODO: '{PCIeRetimerId} PCIe link status' [type: object] (row: 187, col: 'AdditionalData')"
      ]
    }
  },
  {
    "index": 188,
    "SR #": "Retimer_3",
    "deduced_event_info": {
      "event": "I2C EEPROM Error",
      "device_type": "Retimer[0-7]",
      "event_trigger": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')]",
      "accessor": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')] (could not be deduced from an empty cell; row: 188, col: 'GPUOOB Property/OOB API')",
      "severity": "Critical",
      "resolution": "Power cycle the BaseBoard. If the problem persists, isolate the server for RMA evaluation.",
      "trigger_count": "TODO: Trigger count [type: integer >= 0]",
      "event_counter_reset": {
        "type": "TODO: type [type: string]",
        "metadata": "TODO: metadata [type: string]"
      },
      "redfish": {
        "message_id": "ResourceEvent.1.0.ResourceErrorsDetected",
        "message_args": {
          "patterns": [
            "{PCIeRetimerId} Firmware",
            "EEPROM Error"
          ],
          "parameters": [
            {
              "type": "DIRECT",
              "field": "CurrentDeviceName"
            }
          ]
        }
      },
      "telemetries": []
    }
  },
  {
    "index": 189,
    "SR #": "Retimer_4",
    "deduced_event_info": {
      "event": "Over Temp",
      "device_type": "Retimer[0-3, 4-7]",
      "event_trigger": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')]",
      "accessor": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')] (could not be deduced from an empty cell; row: 189, col: 'GPUOOB Property/OOB API')",
      "severity": "Critical",
      "resolution": "Power off the BaseBoard within 1 second, and the Retimer will be held in reset. Check thermal environmental to ensure the Retimer operates under UpperFatal threshold and power cycle the BaseBoard to recover.",
      "trigger_count": "TODO: Trigger count [type: integer >= 0]",
      "event_counter_reset": {
        "type": "TODO: type [type: string]",
        "metadata": "TODO: metadata [type: string]"
      },
      "redfish": {
        "message_id": "ResourceEvent.1.0.ResourceErrorThresholdExceeded",
        "message_args": {
          "patterns": [
            "{PCIeRetimerId} Temperature",
            "{UpperFatal Threshold}"
          ],
          "parameters": [
            {
              "type": "DIRECT",
              "field": "CurrentDeviceName"
            },
            "TODO: Value accessor [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')] (could not be deduced from the cell; cell value: '[\"{PCIeRetimerId} Temperature\", \"{UpperFatal Threshold}\"]'; row: 189, col: 'MessageArgs')"
          ]
        }
      },
      "telemetries": [
        "TODO: '{PCIeRetimerId} Temperature' [type: object] (row: 189, col: 'AdditionalData')",
        "TODO: '{PCIeRetimerId} Thermal Parameters' [type: object] (row: 189, col: 'AdditionalData')"
      ]
    }
  },
  {
    "index": 190,
    "SR #": "Retimer_5",
    "deduced_event_info": {
      "event": "TODO: Event name [type: string] (could not be deduced from the cell; cell value: 'Incorrect link width'; row: 190, col: 'Fault Scenario')",
      "device_type": "TODO: Device specification [type: string] (could not be deduced from the cell; cell value: 'Incorrect link width'; row: 190, col: 'Fault Scenario')",
      "event_trigger": {
        "type": "DBUS",
        "object": "/xyz/openbmc_project/GpioStatusHandler",
        "interface": "xyz.openbmc_project.GpioStatus",
        "property": "IC23_ALERT",
        "check": {
          "equal": "false"
        }
      },
      "accessor": {
        "type": "DeviceCoreAPI",
        "property": "pcieretimer.pcie.linkStatus.upPage0/getPCIeLinkStatusPage0",
        "check": "TODO: Value checking definition [type: object]"
      },
      "severity": "Critical",
      "resolution": "Reset the link. If problem persists, isolate the server for RMA evaluation.",
      "trigger_count": "TODO: Trigger count [type: integer >= 0]",
      "event_counter_reset": {
        "type": "TODO: type [type: string]",
        "metadata": "TODO: metadata [type: string]"
      },
      "redfish": {
        "message_id": "ResourceEvent.1.0.ResourceErrorsDetected",
        "message_args": {
          "patterns": [
            "{PCIeRetimerId} PCIe",
            "Abnormal Width Change"
          ],
          "parameters": [
            {
              "type": "DIRECT",
              "field": "CurrentDeviceName"
            }
          ]
        }
      },
      "telemetries": [
        "TODO: '{PCIeRetimerId} PCIe link width' [type: object] (row: 190, col: 'AdditionalData')"
      ]
    }
  },
  {
    "index": 191,
    "SR #": "Retimer_6",
    "deduced_event_info": {
      "event": "TODO: Event name [type: string] (could not be deduced from the cell; cell value: 'Incorrect link speed'; row: 191, col: 'Fault Scenario')",
      "device_type": "TODO: Device specification [type: string] (could not be deduced from the cell; cell value: 'Incorrect link speed'; row: 191, col: 'Fault Scenario')",
      "event_trigger": {
        "type": "DBUS",
        "object": "/xyz/openbmc_project/GpioStatusHandler",
        "interface": "xyz.openbmc_project.GpioStatus",
        "property": "IC23_ALERT",
        "check": {
          "equal": "false"
        }
      },
      "accessor": {
        "type": "DeviceCoreAPI",
        "property": "pcieretimer.pcie.linkStatus.upPage0/getPCIeLinkStatusPage0",
        "check": "TODO: Value checking definition [type: object]"
      },
      "severity": "Critical",
      "resolution": "Reset the link. If problem persists, isolate the server for RMA evaluation.",
      "trigger_count": "TODO: Trigger count [type: integer >= 0]",
      "event_counter_reset": {
        "type": "TODO: type [type: string]",
        "metadata": "TODO: metadata [type: string]"
      },
      "redfish": {
        "message_id": "ResourceEvent.1.0.ResourceErrorsDetected",
        "message_args": {
          "patterns": [
            "{PCIeRetimerId} PCIe",
            "Abnormal Speed Change"
          ],
          "parameters": [
            {
              "type": "DIRECT",
              "field": "CurrentDeviceName"
            }
          ]
        }
      },
      "telemetries": [
        "TODO: '{PCIeRetimerId} PCIe link speed' [type: object] (row: 191, col: 'AdditionalData')",
        "TODO: '{PCIeRetimerId} PCIe requested link speed' [type: object] (row: 191, col: 'AdditionalData')"
      ]
    }
  },
  {
    "index": 192,
    "SR #": "Retimer_7",
    "deduced_event_info": {
      "event": "FW Update with WP engaged",
      "device_type": "HMC",
      "event_trigger": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')]",
      "accessor": "TODO: Accessor definition [type: accessor object (see 'https://gitlab-collab-01.nvidia.com/viking-team/nvidia-oobaml/-/tree/vulcan_faults/examples#accessor-format')] (could not be deduced from an empty cell; row: 192, col: 'GPUOOB Property/OOB API')",
      "severity": "TODO: Severity level [type: string] (could not be deduced from an empty cell; row: 192, col: 'Severity')",
      "resolution": "TBD",
      "trigger_count": "TODO: Trigger count [type: integer >= 0]",
      "event_counter_reset": {
        "type": "TODO: type [type: string]",
        "metadata": "TODO: metadata [type: string]"
      },
      "redfish": {
        "message_id": "TODO: Message Id [type: string] (could not be deduced from an empty cell; row: 192, col: 'MessageId')",
        "message_args": {
          "patterns": "TODO: Message patterns [type: array of strings] (could not be deduced from an empty cell; row: 192, col: 'MessageArgs')",
          "parameters": "TODO: Pattern placeholder values [type: array of objects] (could not be deduced from an empty cell; row: 192, col: 'MessageArgs')"
        }
      },
      "telemetries": []
    }
  }
]