{
  "type" : "object",
  "description" : "Every entry in the root json object describes the mapping between the DBus object's '/xyz/openbmc_project/GpioStatusHandler' property name (the attribute's key) and the gpio pin it's reflecting, described by the chip ('gpio_chip') and pin's number ('gpio_pin'). See '../examples/gpio-config.json' for an example.",
  "patternProperties": {
    "[a-zA-Z0-9]+" : {
      "type" : "object",
      "required": [
        "gpio_chip",
        "gpio_pin",
        "read_period_sec",
        "initial"
      ],
      "properties" : {
        "gpio_chip" : {
          "type" : "integer",
          "minimum" : 0,
          "description" : "The number in the specification of the gpio device path, like '/dev/gpiochip0' for the value of '0'."
        },
        "gpio_pin" : {
          "type" : "integer",
          "minimum" : 0,
          "description" : "Any number that makes sense as the second argument of the `gpioget' CLI tool."
        },
        "read_period_sec" : {
          "type" : "number",
          "exclusiveMinimum" : 0,
          "description" : "A minimal time period with which the corresponding DBus property should be updated. Reflecting the gpio state on the DBus interface is a mix of event handling and periodic polling. If a pin changed its state between the polls the event should occur and the DBus property will be updated immediately. If there was no change, however, the pin status will be polled directly anyway after this time since the last DBus property update."
        },
        "initial" : {
          "type" : "boolean",
          "description" : "The initial value of the DBus property associated with this pin before any gpio reading could be made."
        } 
      },
      "additionalProperties": false
    }
  },
  "additionalProperties": false
}
